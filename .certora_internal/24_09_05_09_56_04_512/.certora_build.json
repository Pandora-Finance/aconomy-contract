{
    "CollectionMethods_00000000ce4604a0000000000000000000000002": {
        "contracts": [
            {
                "address": "00000000ce4604a0000000000000000000000002",
                "allMethods": [
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "RoyaltiesForValidator",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "fbd4a680",
                        "sourceBytes": {
                            "begin": 796,
                            "size": 65
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "approve",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "to",
                            "tokenId"
                        ],
                        "returns": [],
                        "sighash": "095ea7b3",
                        "sourceBytes": {
                            "begin": 3929,
                            "size": 417
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "balanceOf",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "owner"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "70a08231",
                        "sourceBytes": {
                            "begin": 2390,
                            "size": 204
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "collectionFactoryAddress",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "401f8c7a",
                        "sourceBytes": {
                            "begin": 711,
                            "size": 39
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "collectionOwner",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "df727d3b",
                        "sourceBytes": {
                            "begin": 675,
                            "size": 30
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "deleteNFT",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_tokenId"
                        ],
                        "returns": [],
                        "sighash": "f687ed57",
                        "sourceBytes": {
                            "begin": 3673,
                            "size": 436
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "deleteValidatorRoyalties",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_tokenId"
                        ],
                        "returns": [],
                        "sighash": "391601dc",
                        "sourceBytes": {
                            "begin": 3448,
                            "size": 127
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "exists",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_tokenId"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "4f558e79",
                        "sourceBytes": {
                            "begin": 4115,
                            "size": 102
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getApproved",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "tokenId"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "081812fc",
                        "sourceBytes": {
                            "begin": 4407,
                            "size": 167
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getValidatorRoyalties",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_tokenId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "astId": 2278,
                                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                        "containingContract": "LibShare",
                                        "structMembers": [
                                            {
                                                "name": "account",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Share",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "sighash": "02b42141",
                        "sourceBytes": {
                            "begin": 4438,
                            "size": 166
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_collectionOwner",
                            "_collectionFactoryAddress",
                            "_name",
                            "_symbol"
                        ],
                        "returns": [],
                        "sighash": "2016a0d2",
                        "sourceBytes": {
                            "begin": 1650,
                            "size": 405
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "isApprovedForAll",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "owner",
                            "operator"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e985e9c5",
                        "sourceBytes": {
                            "begin": 4860,
                            "size": 162
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "mintNFT",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_to",
                            "_uri"
                        ],
                        "returns": [],
                        "sighash": "eacabe14",
                        "sourceBytes": {
                            "begin": 2218,
                            "size": 358
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "name",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "06fdde03",
                        "sourceBytes": {
                            "begin": 2932,
                            "size": 98
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "ownerOf",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "tokenId"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "6352211e",
                        "sourceBytes": {
                            "begin": 2651,
                            "size": 219
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "safeTransferFrom",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "from",
                            "to",
                            "tokenId"
                        ],
                        "returns": [],
                        "sighash": "42842e0e",
                        "sourceBytes": {
                            "begin": 5446,
                            "size": 149
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "safeTransferFrom",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "from",
                            "to",
                            "tokenId",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "b88d4fde",
                        "sourceBytes": {
                            "begin": 5661,
                            "size": 276
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setApprovalForAll",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "operator",
                            "approved"
                        ],
                        "returns": [],
                        "sighash": "a22cb465",
                        "sourceBytes": {
                            "begin": 4641,
                            "size": 153
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "astId": 2278,
                                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                        "containingContract": "LibShare",
                                        "structMembers": [
                                            {
                                                "name": "account",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Share",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setRoyaltiesForValidator",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_tokenId",
                            "_commission",
                            "royalties"
                        ],
                        "returns": [],
                        "sighash": "45913fe9",
                        "sourceBytes": {
                            "begin": 2743,
                            "size": 699
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes4",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "supportsInterface",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
                        "paramNames": [
                            "interfaceId"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "01ffc9a7",
                        "sourceBytes": {
                            "begin": 822,
                            "size": 227
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "symbol",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "95d89b41",
                        "sourceBytes": {
                            "begin": 3094,
                            "size": 102
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "tokenURI",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
                        "paramNames": [
                            "tokenId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "c87b56dd",
                        "sourceBytes": {
                            "begin": 1115,
                            "size": 608
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferFrom",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "from",
                            "to",
                            "tokenId"
                        ],
                        "returns": [],
                        "sighash": "23b872dd",
                        "sourceBytes": {
                            "begin": 5084,
                            "size": 296
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    }
                ],
                "bytecode": "604060808152600436101561001a575b50610018610567565b005b6000803560e01c90816301ffc9a71461051257816302b42141146104dd57816306fdde03146104b3578163081812fc14610489578163095ea7b3146104615781632016a0d21461043657816323b872dd1461040e578163391601dc146103e7578163401f8c7a146103ba57816342842e0e1461039257816345913fe91461036a5781634f558e79146103405781636352211e1461031657816370a08231146102e157816395d89b41146102b7578163a22cb4651461028f578163b88d4fde14610264578163c87b56dd1461022f578163df727d3b146101f7578163e985e9c5146101b0578163eacabe1414610188578163f687ed571461015e575063fbd4a680146101245761000f565b61014d9034610151575b61014061013a36610f08565b9061103e565b9290915192839283611083565b0390f35b610159610567565b61012e565b9190503461017b575b61017861017336610618565b611c3c565b51f35b610183610567565b610167565b919050346101a3575b61017861019d36610ea9565b90611424565b6101ab610567565b610191565b505061014d90346101ea575b6101df6101da6101d56101ce36610e60565b9190612ac1565b612b0d565b612e4f565b905191829182610608565b6101f2610567565b6101bc565b505061014d9034610222575b61020c366107e4565b61021760fc54610708565b9051918291826108b0565b61022a610567565b610203565b505061014d9034610257575b61024c61024736610618565b61220d565b90519182918261089f565b61025f610567565b61023b565b91905034610282575b61017861027936610df4565b92919091612f2f565b61028a610567565b61026d565b919050346102aa575b6101786102a436610dab565b90612e44565b6102b2610567565b610298565b505061014d90346102d4575b6102cc366107e4565b61024c6121cc565b6102dc610567565b6102c3565b505061014d9034610309575b6102fe6102f936610d3f565b612b32565b905191829182610d83565b610311610567565b6102ed565b505061014d9034610333575b61021761032e36610618565b612be7565b61033b610567565b610322565b505061014d903461035d575b6101df61035836610618565b611c45565b610365610567565b61034c565b91905034610385575b61017861037f36610cd4565b91611a8f565b61038d610567565b610373565b919050346103ad575b6101786103a736610b74565b91612f1f565b6103b5610567565b61039b565b505061014d90346103da575b6103cf366107e4565b61021760fd54610708565b6103e2610567565b6103c6565b91905034610401575b6101786103fc36610618565b611ad7565b610409610567565b6103f0565b91905034610429575b61017861042336610b74565b91612f02565b610431610567565b610417565b91905034610454575b61017861044b36610ae4565b929190916113dc565b61045c610567565b61043f565b9190503461047c575b61017861047636610904565b90612dca565b610484610567565b61046a565b505061014d90346104a6575b6102176104a136610618565b612e2f565b6104ae610567565b610495565b505061014d90346104d0575b6104c8366107e4565b61024c6121b4565b6104d8610567565b6104bf565b505061014d9034610505575b6104fa6104f536610618565b611d3d565b9051918291826107d3565b61050d610567565b6104e9565b5050503461055a575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8061055561055061054b366105a7565b611f45565b6105fc565b016080f35b610562610567565b61051b565b50600080fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116141561056757565b600435906105a58261056d565b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60209101126105dd575b6105da610598565b90565b6105e5610567565b6105d2565b151590565b1515608052565b15159052565b906105a560a0926105ef565b6020810192916105a591906105f6565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020910112610649575b60043590565b610651610567565b610643565b602e815260200190565b6007815260200190565b6009815260200190565b6008815260200190565b602b815260200190565b601f815260200190565b6029815260200190565b6018815260200190565b6021815260200190565b603d815260200190565b602d815260200190565b6032815260200190565b60208082520190565b601c815260200190565b6025815260200190565b6024815260200190565b6019815260200190565b60209181520190565b73ffffffffffffffffffffffffffffffffffffffff1690565b60009052565b73ffffffffffffffffffffffffffffffffffffffff169052565b6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff169052565b906020806105a593610777848251610727565b0151910190610752565b9061078e81604093610764565b0190565b61079e815180936106ff565b9160208092019160005b8281106107b6575050505090565b90919293826107c86001928751610781565b9501939291016107a8565b9060206105da928181520190610792565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc600091011261081057565b610818610567565b6105a5565b918091926000905b828210610843575011610837575b5050565b60009101523880610833565b91508060209183015181860152018291610825565b601f6108906108996020947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0948051938480936106ff565b9687910161081d565b01160190565b9060206105da928181520190610858565b6020810192916105a59190610727565b73ffffffffffffffffffffffffffffffffffffffff8116141561056757565b600435906105a5826108c0565b602435906105a5826108c0565b35906105a5826108c0565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc604091011261093e575b6109376108df565b9060243590565b610946610567565b61092f565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610998575b604052565b6109a061094b565b610993565b6020810190811067ffffffffffffffff82111761099857604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761099857604052565b604051906105a58261097b565b604051906105a5826109a5565b906105a560405192836109c1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111610a655701160190565b610a6d61094b565b610899565b90826000939282370152565b906105a591939293610a97610a9283610a2a565b610a1c565b9482865282820111610aae575b6020850190610a72565b610ab6610567565b610aa4565b906105da9181601f82011215610ad7575b602081359101610a7e565b610adf610567565b610acc565b9060807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610b67575b610b186108df565b91610b216108ec565b916105da60443592610b478167ffffffffffffffff95868111610b5a575b600401610abb565b93606435908111610b5a57600401610abb565b610b62610567565b610b3f565b610b6f610567565b610b10565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6060910112610bb7575b610ba76108df565b90610bb06108ec565b9060443590565b610bbf610567565b610b9f565b60209067ffffffffffffffff8111610bde575b60051b0190565b610be661094b565b610bd7565b6bffffffffffffffffffffffff8116141561056757565b35906105a582610beb565b9190826040910312610c40575b610c396020610c27610a02565b93610c31816108f9565b855201610c02565b6020830152565b610c48610567565b610c1a565b909291610c5c610a9285610bc4565b938085526020918286019160061b840193818511610c9e575b915b848310610c85575050505050565b83604091610c938486610c0d565b815201920191610c77565b610ca6610567565b610c75565b906105da9181601f82011215610cc7575b602081359101610c4d565b610ccf610567565b610cbc565b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc820112610d32575b600435916105da6024359260443567ffffffffffffffff8111610d25575b600401610cab565b610d2d610567565b610d1d565b610d3a610567565b610cff565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020910112610d72575b6105da6108df565b610d7a610567565b610d6a565b9052565b6020810192916105a59190610d7f565b801515141561056757565b602435906105a582610d93565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040910112610de7575b610dde6108df565b906105da610d9e565b610def610567565b610dd6565b9060807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610e53575b610e286108df565b91610e316108ec565b916105da6044359260643567ffffffffffffffff8111610b5a57600401610abb565b610e5b610567565b610e20565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040910112610e9c575b610e936108df565b906105da6108ec565b610ea4610567565b610e8b565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610efb575b6105da610ee06108df565b9260243567ffffffffffffffff8111610b5a57600401610abb565b610f03610567565b610ed5565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040910112610f3d575b6004359060243590565b610f45610567565b610f33565b60005260fe602052604060002090565b6000526097602052604060002090565b6000526067602052604060002090565b6000526069602052604060002090565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60656000527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c790565b60666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435490565b600052602060002090565b61102a908054831015611031575b61100c565b0190600090565b611039610f8a565b611025565b61104790610f4a565b90815481101561107b5761105a91611017565b50549073ffffffffffffffffffffffffffffffffffffffff82169160a01c90565b505050600080fd5b9160206105a592949361109a816040810197610727565b0190610752565b60081c60ff1690565b60ff1690565b60207f647920696e697469616c697a6564000000000000000000000000000000000000917f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181520152565b611106604091610656565b61078e816110b0565b60206105da91818152016110fb565b1561112557565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152806111596004820161110f565b0390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff9091161790565b6111bb60005461115d565b600055565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690565b6111bb6000546111c0565b6111bb6000546111e9565b60019052565b906105a56020830192611224565b929091611277926000549461126460ff8760081c1615809781986112f1575b81156112c8575b5061111e565b8561126d6111b0565b6112bb575b6113b1565b61127d57565b611285611219565b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498604051806112b38161122a565b0390a16105a5565b6112c361120e565b611272565b90506112d5303b156105ea565b90816112e3575b503861125e565b6001915060ff1614386112dc565b600160ff8216109150611257565b7fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161790565b73ffffffffffffffffffffffffffffffffffffffff61135f911660fc546112ff565b60fc55565b73ffffffffffffffffffffffffffffffffffffffff611386911660fd546112ff565b60fd55565b9073ffffffffffffffffffffffffffffffffffffffff6113ad911682546112ff565b9055565b6113ca6105a5946113d793946113c5611e15565b612934565b6113d2611f3d565b61133d565b611364565b906105a5939291611238565b6105da9054610708565b1561056757565b6114176105da949361140d83606095610d7f565b6020830190610727565b8160408201520190610858565b7fec2cd236ed6d37bf5a71276ac93889db12834493a090efd543a3d2eca8dcdcc89161146361145c61145760fc54610708565b610708565b33146113f2565b61148473ffffffffffffffffffffffffffffffffffffffff831615156113f2565b6114bb61149260fb546105da565b9161149d838561307f565b6114a781846127b0565b6114af6128fc565b604051938493846113f9565b0390a1565b51906105a5826108c0565b6020816105da9303126114de575b6114c0565b6114e6610567565b6114d9565b506040513d6000823e3d90fd5b7f6d6574686f6473000000000000000000000000000000000000000000000000009052565b611528602091610660565b61078e816114f8565b60206105da918181520161151d565b1561154757565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201611531565b906105a592916115f373ffffffffffffffffffffffffffffffffffffffff600460206115ae61145761145760fd54610708565b604051928380927fe01779340000000000000000000000000000000000000000000000000000000082525afa908115611616575b6000916115f8575b50163314611540565b611971565b61161091506116073d826109c1565b3d8101906114cb565b386115ea565b61161e6114eb565b6115e2565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60009055565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6105a590611653565b81811061169d575050565b806116a9600192611689565b01611692565b90806116b9575050565b6116c56116ce9261100c565b90810190611692565b3880610833565b8054600082556105a5916116af565b6105a5906116d5565b6105a5906116e4565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611724570190565b61172c611623565b61078e565b6020918151811015611746575b60051b010190565b61174e610f8a565b61173e565b6105da9051610708565b6105da9051610741565b7f526f79616c7479203000000000000000000000000000000000000000000000009052565b61179760209161066a565b61078e81611767565b60206105da918181520161178c565b156117b657565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280611159600482016117a0565b907fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9160a01b1691161790565b906bffffffffffffffffffffffff6113ad911682546117ea565b61186960206105a59361186261185c8251610708565b8561138b565b0151610741565b9061182c565b6105a5929161187e575b611846565b611886611659565b611879565b906118b36105a592805490680100000000000000008210156118b9575b600182018155611017565b9061186f565b6118c161094b565b6118a8565b81198111611724570190565b6113248181106118e1575b0390565b6118e9611623565b6118dd565b7f6f766572666c6f770000000000000000000000000000000000000000000000009052565b61191e602091610674565b61078e816118ee565b60206105da9181815201611913565b1561193d57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201611927565b919091611982600a835111156113f2565b61199361198e82610f4a565b6116ed565b600091825b6119a282516105da565b841015611a4057611a34611a3a916119d06119c96114576119c38988611731565b51611753565b15156113f2565b611a2e6119f360206119ff6119f86119f3836119ec8d8c611731565b510161175d565b610741565b15156117af565b611a24611a13611a0e8a610f4a565b6105da565b611a1d8b8a611731565b519061188b565b6119ec8988611731565b906118c6565b936116f6565b92611998565b7f3fa96d7b6bcbfe71ef171666d84db3cf52fa2d1c8afdb1cc8e486177f208b7df9350611a7e90611a77611a0e611a8a95976118d2565b1015611936565b604051918291826107d3565b0390a2565b906105a5929161157b565b6105a590611acb73ffffffffffffffffffffffffffffffffffffffff600460206115ae61145761145760fd54610708565b61198e6105a591610f4a565b6105a590611a9a565b611af190611aec611f10565b611b17565b6105a5611e73565b9160206105a5929493611b10816040810197610727565b0190610d7f565b6105a590611bf360046020611b3361145761145760fd54610708565b604051928380927fe01779340000000000000000000000000000000000000000000000000000000082525afa908115611c2f575b600091611c1a575b50611be2604051917fa7aed6050000000000000000000000000000000000000000000000000000000083528260208180611bad893060048401611af9565b0373ffffffffffffffffffffffffffffffffffffffff96878096165afa908115611c0d575b600091611bf8575b5016156113f2565b611beb83612be7565b1633146113f2565b6128ba565b611c0791506116073d826109c1565b38611bda565b611c156114eb565b611bd2565b611c2991506116073d826109c1565b38611b6f565b611c376114eb565b611b67565b6105a590611ae0565b611c6b611c6673ffffffffffffffffffffffffffffffffffffffff92610f6a565b6113e8565b16151590565b90611c7e610a9283610bc4565b918252565b9073ffffffffffffffffffffffffffffffffffffffff169052565b906bffffffffffffffffffffffff169052565b906105a5611cbd610a02565b9254611cdf73ffffffffffffffffffffffffffffffffffffffff821685611c83565b60a01c60208401611c9e565b908154611cf781611c71565b926020611d068186019261100c565b6000925b848410611d18575050505050565b6001838192611d2685611cb1565b815201920193019290611d0a565b6105da90611ceb565b611d496105da91610f4a565b611d34565b60207f6e697469616c697a696e67000000000000000000000000000000000000000000917f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981520152565b611da460409161067e565b61078e81611d4e565b60206105da9181815201611d99565b15611dc357565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201611dad565b611e0a611e056000546110a1565b611dbc565b6105a56105a5611e7b565b6105a5611df7565b611af1611e056000546110a1565b50600190565b50600290565b5090565b611e4660c954611e2b565b60c955565b611e4660c954611e31565b611e629060fb54611e37565b60fb55565b906113ad908254611e37565b6105a5611e3b565b6105a5611e1d565b6105da90546105da565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c009052565b611ebd602091610688565b61078e81611e8d565b60206105da9181815201611eb2565b15611edc57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201611ec6565b611f276002611f2060c9546105da565b1415611ed5565b6105a5611e4b565b6105a5611e056000546110a1565b6105a5611f2f565b7f49064906000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821614908115611f95575090565b611f9f915061296d565b38611e37565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b90600182811c92168015611ff7575b6020831014611fef57565b610818611fa5565b91607f1691611fe4565b9060009160655461201b61201482611fd5565b80936106ff565b9060019081811690811561206f5750600114612037575b505050565b92935090612043610fba565b926000935b82851061205c575050500190388080612032565b8054858501526020909401938101612048565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168352505060200192503890508080612032565b906000916066546120b761201482611fd5565b9060019081811690811561206f57506001146120d257505050565b929350906120de610fe3565b926000935b8285106120f7575050500190388080612032565b80548585015260209094019381016120e3565b9060009291805461212461211d82611fd5565b80946106ff565b9160019180831690811561217d5750600114612141575b50505050565b6121509194955092919261100c565b926000935b82851061216a5750505001903880808061213b565b8054858501526020909401938101612155565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168452505050602001925038905080808061213b565b604051906105a5826121c581612001565b03836109c1565b604051906105a5826121c5816120a4565b906105a56121c5926040519384809261210a565b6105da906121dd565b9061078e6020928281519485920161081d565b6122168161366b565b61222761222282610f5a565b6121f1565b90612230612c14565b80511561229e5761224183516105da565b61225057506105da9150612c30565b6105da915061227261226c9360405194859360208501906121fa565b906121fa565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352826109c1565b505090565b60207f6578697374656e7420746f6b656e000000000000000000000000000000000000917f45524337323155524953746f726167653a2055524920736574206f66206e6f6e81520152565b6122f9604091610656565b61078e816122a3565b60206105da91818152016122ee565b1561231857565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612302565b50600090565b6113ad815461234c565b6105a590612352565b818110612370575050565b8061237c60019261235c565b01612365565b90601f821161238f575050565b6116ce9161239b610fba565b906020601f840160051c830193106123bb575b601f0160051c0190612365565b90915081906123ae565b90601f82116123d2575050565b6116ce9161239b610fe3565b9190601f81116123ed57505050565b61239b6123f99361100c565b388080612032565b90815167ffffffffffffffff8111612524575b61242881612423606554611fd5565b612382565b602080601f83116001146124815750819293600092612476575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c191617606555565b015190503880612442565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316946124ae610fba565b926000905b87821061250c5750508360019596106124d5575b505050811b016065556105a5565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690553880806124c7565b806001859682949686015181550195019301906124b3565b61252c61094b565b612414565b90815167ffffffffffffffff8111612654575b61255881612553606654611fd5565b6123c5565b602080601f83116001146125b157508192936000926125a6575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c191617606655565b015190503880612572565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316946125de610fe3565b926000905b87821061263c575050836001959610612605575b505050811b016066556105a5565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690553880806125f7565b806001859682949686015181550195019301906125e3565b61265c61094b565b612544565b919091825167ffffffffffffffff8111612787575b61268a816126848454611fd5565b846123de565b602080601f83116001146126e35750819293946000926126d8575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c1916179055565b0151905038806126a5565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316956127118561100c565b926000905b88821061276f57505083600195969710612738575b505050811b0190556105a5565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c1916905538808061272b565b80600185968294968601518155019501930190612716565b61278f61094b565b612676565b6105a590612401565b6105a590612531565b906105a591612661565b6114bb906128137ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79361280573ffffffffffffffffffffffffffffffffffffffff6127fd611c6686610f6a565b161515612311565b61280e83610f5a565b6127a6565b60405191829182610d83565b6105da9054611fd5565b6000906128358161100c565b90612840825461234c565b905555565b601f8211600114612857576000915055565b612879610818926001601f61286b8561100c565b920160051c82019101612365565b612829565b6105a5929150612845565b805461289481611fd5565b908161289f57505050565b6123f99261287e565b6105a590612889565b6105a5906128a8565b6128c3816132b3565b6128d76128d2611a0e83610f5a565b61281f565b6128df575b50565b6128eb6128f091610f5a565b6128b1565b386128dc565b60010190565b6105a561291261290d60fb546105da565b6128f6565b611e56565b906105a59161292a611e056000546110a1565b906105a591612963565b906105a591612917565b906105a591612951611e056000546110a1565b9061295e6105a592612794565b61279d565b906105a59161293e565b7fffffffff00000000000000000000000000000000000000000000000000000000167f80ac58cd0000000000000000000000000000000000000000000000000000000081149081156129ee575b81156129c4575090565b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438611e37565b7f5b5e139f00000000000000000000000000000000000000000000000000000000811491506129ba565b60207f6c6964206f776e65720000000000000000000000000000000000000000000000917f4552433732313a2061646472657373207a65726f206973206e6f74206120766181520152565b612a6e604091610692565b61078e81612a18565b60206105da9181815201612a63565b15612a8d57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612a77565b73ffffffffffffffffffffffffffffffffffffffff16600052606a602052604060002090565b73ffffffffffffffffffffffffffffffffffffffff166000526068602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b612b5f6105da91612b5a73ffffffffffffffffffffffffffffffffffffffff82161515612a86565b612ae7565b611e83565b7f4552433732313a20696e76616c696420746f6b656e20494400000000000000009052565b612b9460209161069c565b61078e81612b64565b60206105da9181815201612b89565b15612bb357565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612b9d565b611c66612bf391610f6a565b6105da73ffffffffffffffffffffffffffffffffffffffff82161515612bac565b612c1c610a0f565b9060008252565b90611c7e610a9283610a2a565b612c398161366b565b612c41612c14565b805190919015612c6e5761226c91612272612c5e6105da936138fc565b60405194859360208501906121fa565b5050611a0e612c14565b60207f7200000000000000000000000000000000000000000000000000000000000000917f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6581520152565b612cce6040916106a6565b61078e81612c78565b60206105da9181815201612cc3565b15612ced57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612cd7565b60207f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000917f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f81520152565b612d776040916106b0565b61078e81612d21565b60206105da9181815201612d6c565b15612d9657565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612d80565b906105a591612e11612ddb83612be7565b73ffffffffffffffffffffffffffffffffffffffff612e01818316809286161415612ce6565b3314908115612e16575b50612d8f565b613528565b612e2991506101da906101d53391612ac1565b38612e0b565b611c666105da91612e3f8161366b565b610f7a565b906105a591336135f8565b6105da90546110aa565b60207f72206f7220617070726f76656400000000000000000000000000000000000000917f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6581520152565b612eaf6040916106ba565b61078e81612e59565b60206105da9181815201612ea4565b15612ece57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612eb8565b906105a59291612f1a612f158433613010565b612ec7565b61347d565b90916105a592612f2d612c14565b925b906105a5939291612f43612f158433613010565b612ff1565b60207f63656976657220696d706c656d656e7465720000000000000000000000000000917f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581520152565b612f9e6040916106c4565b61078e81612f48565b60206105da9181815201612f93565b15612fbd57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612fa7565b916105a5939161300b9361300683838361347d565b61384c565b612fb6565b61301982612be7565b9173ffffffffffffffffffffffffffffffffffffffff918281169284168314938415613064575b5050821561304d57505090565b61305c91925061145790612e2f565b14388061229e565b613077929450906101d56101da92612ac1565b913880613040565b6105a59161308b612c14565b61300b916105a59361309d82826131a8565b61373e565b7f4552433732313a206d696e7420746f20746865207a65726f20616464726573739052565b6130d26020916106ce565b61078e816130a2565b60206105da91818152016130c7565b156130f157565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280611159600482016130db565b7f4552433732313a20746f6b656e20616c7265616479206d696e746564000000009052565b6131556020916106d7565b61078e81613125565b60206105da918181520161314a565b1561317457565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152806111596004820161315e565b6131fb6131ea73ffffffffffffffffffffffffffffffffffffffff6131d081851615156130ea565b6131ef6131ea826131e3611c6689610f6a565b16156105ea565b61316d565b6131e3611c6686610f6a565b61321a61320782612ae7565b61321461290d82546105da565b90611e67565b61322c8161322784610f6a565b61138b565b60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef81604051a4565b7fffffffffffffffffffffffff00000000000000000000000000000000000000001690565b6113ad8154613256565b6105a59061327b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6132bc81612be7565b5060006132c882612be7565b6132d96132d484610f7a565b613285565b6132f76132e582612ae7565b6132146132f282546105da565b61328e565b6133036132d484610f6a565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef82604051a4565b60207f6f776e6572000000000000000000000000000000000000000000000000000000917f4552433732313a207472616e736665722066726f6d20696e636f72726563742081520152565b6133816040916106e1565b61078e8161332b565b60206105da9181815201613376565b156133a057565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152806111596004820161338a565b60207f7265737300000000000000000000000000000000000000000000000000000000917f4552433732313a207472616e7366657220746f20746865207a65726f2061646481520152565b61342a6040916106eb565b61078e816133d4565b60206105da918181520161341f565b1561344957565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201613433565b6134ce6134b36134bc61348f86612be7565b73ffffffffffffffffffffffffffffffffffffffff85811693909182168414613399565b85161515613442565b6134c861145786612be7565b14613399565b6134da6132d484610f7a565b6134e66132e582612ae7565b6134f261320783612ae7565b6134ff8261322785610f6a565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000604051a4565b6135358161322784610f7a565b61353e82612be7565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256000604051a4565b7f4552433732313a20617070726f766520746f2063616c6c6572000000000000009052565b6135976020916106f5565b61078e81613567565b60206105da918181520161358c565b156135b657565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280611159600482016135a0565b906113ad9015158254611185565b90916136667f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319161364473ffffffffffffffffffffffffffffffffffffffff80871690861614156135af565b61365a81613655876101d588612ac1565b6135ea565b60405191829182610608565b0390a3565b73ffffffffffffffffffffffffffffffffffffffff61368f611c666105a593610f6a565b161515612bac565b51906105a58261056d565b6020816105da9303126136b5575b613697565b6136bd610567565b6136b0565b6136ec6105da94936136d683608095610727565b6136e260208401610721565b6040830190610d7f565b8160608201520190610858565b906105da94936136e2608094613712856136ec95610727565b6020850190610727565b3d156137365761372b3d612c23565b903d6000602084013e565b6060906105a5565b909190803b156138445761379e60209173ffffffffffffffffffffffffffffffffffffffff9360006040519586809581947f150b7a02000000000000000000000000000000000000000000000000000000009a8b845233600485016136c2565b0393165af160009181613824575b506137fe575050506137bc61371c565b805190816137f95750506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612fa7565b602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000161490565b61383d9192506138343d826109c1565b3d8101906136a2565b90386137ac565b505050600190565b92909190823b156138ad5761379e92602092600073ffffffffffffffffffffffffffffffffffffffff6040518097819682957f150b7a02000000000000000000000000000000000000000000000000000000009b8c855233600486016136f9565b50505050600190565b369037565b906105a57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06138f26138ec85612c23565b94610a2a565b01602084016138b6565b6139058161398a565b906001908160216139178286016138bb565b94850101905b613928575b50505090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190600a907f30313233343536373839616263646566000000000000000000000000000000008282061a8353049182156139855791908261391d565b613922565b6000907a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015613a5a575b50600a906d04ee2d6d415b85acef810000000080821015613a4d575b50662386f26fc1000080821015613a40575b506305f5e10080821015613a33575b5061271080821015613a26575b506064811015613a18575b1015613a105790565b6001016105da565b606460029104920191613a07565b60049104920191386139fc565b60089104920191386139ef565b60109104920191386139e0565b60209104920191386139ce565b604092509004600a6139b256fea3646970667358221220b3a409b5475839508fa40cbf5d567e2fbca136bdba28688733efdabd6cb851986c6578706572696d656e74616cf564736f6c634300080b0041",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": true,
                    "optimizerRuns": 1000000,
                    "type": "SolcParameters",
                    "viaIR": true
                },
                "compilerVersion": "0.8.11",
                "constructorBytecode": "6080806040523462000019575b613aab9081620000308239f35b6200002362000029565b6200000c565b50600080fdfe604060808152600436101561001a575b50610018610567565b005b6000803560e01c90816301ffc9a71461051257816302b42141146104dd57816306fdde03146104b3578163081812fc14610489578163095ea7b3146104615781632016a0d21461043657816323b872dd1461040e578163391601dc146103e7578163401f8c7a146103ba57816342842e0e1461039257816345913fe91461036a5781634f558e79146103405781636352211e1461031657816370a08231146102e157816395d89b41146102b7578163a22cb4651461028f578163b88d4fde14610264578163c87b56dd1461022f578163df727d3b146101f7578163e985e9c5146101b0578163eacabe1414610188578163f687ed571461015e575063fbd4a680146101245761000f565b61014d9034610151575b61014061013a36610f08565b9061103e565b9290915192839283611083565b0390f35b610159610567565b61012e565b9190503461017b575b61017861017336610618565b611c3c565b51f35b610183610567565b610167565b919050346101a3575b61017861019d36610ea9565b90611424565b6101ab610567565b610191565b505061014d90346101ea575b6101df6101da6101d56101ce36610e60565b9190612ac1565b612b0d565b612e4f565b905191829182610608565b6101f2610567565b6101bc565b505061014d9034610222575b61020c366107e4565b61021760fc54610708565b9051918291826108b0565b61022a610567565b610203565b505061014d9034610257575b61024c61024736610618565b61220d565b90519182918261089f565b61025f610567565b61023b565b91905034610282575b61017861027936610df4565b92919091612f2f565b61028a610567565b61026d565b919050346102aa575b6101786102a436610dab565b90612e44565b6102b2610567565b610298565b505061014d90346102d4575b6102cc366107e4565b61024c6121cc565b6102dc610567565b6102c3565b505061014d9034610309575b6102fe6102f936610d3f565b612b32565b905191829182610d83565b610311610567565b6102ed565b505061014d9034610333575b61021761032e36610618565b612be7565b61033b610567565b610322565b505061014d903461035d575b6101df61035836610618565b611c45565b610365610567565b61034c565b91905034610385575b61017861037f36610cd4565b91611a8f565b61038d610567565b610373565b919050346103ad575b6101786103a736610b74565b91612f1f565b6103b5610567565b61039b565b505061014d90346103da575b6103cf366107e4565b61021760fd54610708565b6103e2610567565b6103c6565b91905034610401575b6101786103fc36610618565b611ad7565b610409610567565b6103f0565b91905034610429575b61017861042336610b74565b91612f02565b610431610567565b610417565b91905034610454575b61017861044b36610ae4565b929190916113dc565b61045c610567565b61043f565b9190503461047c575b61017861047636610904565b90612dca565b610484610567565b61046a565b505061014d90346104a6575b6102176104a136610618565b612e2f565b6104ae610567565b610495565b505061014d90346104d0575b6104c8366107e4565b61024c6121b4565b6104d8610567565b6104bf565b505061014d9034610505575b6104fa6104f536610618565b611d3d565b9051918291826107d3565b61050d610567565b6104e9565b5050503461055a575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8061055561055061054b366105a7565b611f45565b6105fc565b016080f35b610562610567565b61051b565b50600080fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116141561056757565b600435906105a58261056d565b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60209101126105dd575b6105da610598565b90565b6105e5610567565b6105d2565b151590565b1515608052565b15159052565b906105a560a0926105ef565b6020810192916105a591906105f6565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020910112610649575b60043590565b610651610567565b610643565b602e815260200190565b6007815260200190565b6009815260200190565b6008815260200190565b602b815260200190565b601f815260200190565b6029815260200190565b6018815260200190565b6021815260200190565b603d815260200190565b602d815260200190565b6032815260200190565b60208082520190565b601c815260200190565b6025815260200190565b6024815260200190565b6019815260200190565b60209181520190565b73ffffffffffffffffffffffffffffffffffffffff1690565b60009052565b73ffffffffffffffffffffffffffffffffffffffff169052565b6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff169052565b906020806105a593610777848251610727565b0151910190610752565b9061078e81604093610764565b0190565b61079e815180936106ff565b9160208092019160005b8281106107b6575050505090565b90919293826107c86001928751610781565b9501939291016107a8565b9060206105da928181520190610792565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc600091011261081057565b610818610567565b6105a5565b918091926000905b828210610843575011610837575b5050565b60009101523880610833565b91508060209183015181860152018291610825565b601f6108906108996020947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0948051938480936106ff565b9687910161081d565b01160190565b9060206105da928181520190610858565b6020810192916105a59190610727565b73ffffffffffffffffffffffffffffffffffffffff8116141561056757565b600435906105a5826108c0565b602435906105a5826108c0565b35906105a5826108c0565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc604091011261093e575b6109376108df565b9060243590565b610946610567565b61092f565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610998575b604052565b6109a061094b565b610993565b6020810190811067ffffffffffffffff82111761099857604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761099857604052565b604051906105a58261097b565b604051906105a5826109a5565b906105a560405192836109c1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111610a655701160190565b610a6d61094b565b610899565b90826000939282370152565b906105a591939293610a97610a9283610a2a565b610a1c565b9482865282820111610aae575b6020850190610a72565b610ab6610567565b610aa4565b906105da9181601f82011215610ad7575b602081359101610a7e565b610adf610567565b610acc565b9060807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610b67575b610b186108df565b91610b216108ec565b916105da60443592610b478167ffffffffffffffff95868111610b5a575b600401610abb565b93606435908111610b5a57600401610abb565b610b62610567565b610b3f565b610b6f610567565b610b10565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6060910112610bb7575b610ba76108df565b90610bb06108ec565b9060443590565b610bbf610567565b610b9f565b60209067ffffffffffffffff8111610bde575b60051b0190565b610be661094b565b610bd7565b6bffffffffffffffffffffffff8116141561056757565b35906105a582610beb565b9190826040910312610c40575b610c396020610c27610a02565b93610c31816108f9565b855201610c02565b6020830152565b610c48610567565b610c1a565b909291610c5c610a9285610bc4565b938085526020918286019160061b840193818511610c9e575b915b848310610c85575050505050565b83604091610c938486610c0d565b815201920191610c77565b610ca6610567565b610c75565b906105da9181601f82011215610cc7575b602081359101610c4d565b610ccf610567565b610cbc565b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc820112610d32575b600435916105da6024359260443567ffffffffffffffff8111610d25575b600401610cab565b610d2d610567565b610d1d565b610d3a610567565b610cff565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020910112610d72575b6105da6108df565b610d7a610567565b610d6a565b9052565b6020810192916105a59190610d7f565b801515141561056757565b602435906105a582610d93565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040910112610de7575b610dde6108df565b906105da610d9e565b610def610567565b610dd6565b9060807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610e53575b610e286108df565b91610e316108ec565b916105da6044359260643567ffffffffffffffff8111610b5a57600401610abb565b610e5b610567565b610e20565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040910112610e9c575b610e936108df565b906105da6108ec565b610ea4610567565b610e8b565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610efb575b6105da610ee06108df565b9260243567ffffffffffffffff8111610b5a57600401610abb565b610f03610567565b610ed5565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040910112610f3d575b6004359060243590565b610f45610567565b610f33565b60005260fe602052604060002090565b6000526097602052604060002090565b6000526067602052604060002090565b6000526069602052604060002090565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60656000527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c790565b60666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435490565b600052602060002090565b61102a908054831015611031575b61100c565b0190600090565b611039610f8a565b611025565b61104790610f4a565b90815481101561107b5761105a91611017565b50549073ffffffffffffffffffffffffffffffffffffffff82169160a01c90565b505050600080fd5b9160206105a592949361109a816040810197610727565b0190610752565b60081c60ff1690565b60ff1690565b60207f647920696e697469616c697a6564000000000000000000000000000000000000917f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181520152565b611106604091610656565b61078e816110b0565b60206105da91818152016110fb565b1561112557565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152806111596004820161110f565b0390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff9091161790565b6111bb60005461115d565b600055565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690565b6111bb6000546111c0565b6111bb6000546111e9565b60019052565b906105a56020830192611224565b929091611277926000549461126460ff8760081c1615809781986112f1575b81156112c8575b5061111e565b8561126d6111b0565b6112bb575b6113b1565b61127d57565b611285611219565b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498604051806112b38161122a565b0390a16105a5565b6112c361120e565b611272565b90506112d5303b156105ea565b90816112e3575b503861125e565b6001915060ff1614386112dc565b600160ff8216109150611257565b7fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161790565b73ffffffffffffffffffffffffffffffffffffffff61135f911660fc546112ff565b60fc55565b73ffffffffffffffffffffffffffffffffffffffff611386911660fd546112ff565b60fd55565b9073ffffffffffffffffffffffffffffffffffffffff6113ad911682546112ff565b9055565b6113ca6105a5946113d793946113c5611e15565b612934565b6113d2611f3d565b61133d565b611364565b906105a5939291611238565b6105da9054610708565b1561056757565b6114176105da949361140d83606095610d7f565b6020830190610727565b8160408201520190610858565b7fec2cd236ed6d37bf5a71276ac93889db12834493a090efd543a3d2eca8dcdcc89161146361145c61145760fc54610708565b610708565b33146113f2565b61148473ffffffffffffffffffffffffffffffffffffffff831615156113f2565b6114bb61149260fb546105da565b9161149d838561307f565b6114a781846127b0565b6114af6128fc565b604051938493846113f9565b0390a1565b51906105a5826108c0565b6020816105da9303126114de575b6114c0565b6114e6610567565b6114d9565b506040513d6000823e3d90fd5b7f6d6574686f6473000000000000000000000000000000000000000000000000009052565b611528602091610660565b61078e816114f8565b60206105da918181520161151d565b1561154757565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201611531565b906105a592916115f373ffffffffffffffffffffffffffffffffffffffff600460206115ae61145761145760fd54610708565b604051928380927fe01779340000000000000000000000000000000000000000000000000000000082525afa908115611616575b6000916115f8575b50163314611540565b611971565b61161091506116073d826109c1565b3d8101906114cb565b386115ea565b61161e6114eb565b6115e2565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60009055565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b6105a590611653565b81811061169d575050565b806116a9600192611689565b01611692565b90806116b9575050565b6116c56116ce9261100c565b90810190611692565b3880610833565b8054600082556105a5916116af565b6105a5906116d5565b6105a5906116e4565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611724570190565b61172c611623565b61078e565b6020918151811015611746575b60051b010190565b61174e610f8a565b61173e565b6105da9051610708565b6105da9051610741565b7f526f79616c7479203000000000000000000000000000000000000000000000009052565b61179760209161066a565b61078e81611767565b60206105da918181520161178c565b156117b657565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280611159600482016117a0565b907fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9160a01b1691161790565b906bffffffffffffffffffffffff6113ad911682546117ea565b61186960206105a59361186261185c8251610708565b8561138b565b0151610741565b9061182c565b6105a5929161187e575b611846565b611886611659565b611879565b906118b36105a592805490680100000000000000008210156118b9575b600182018155611017565b9061186f565b6118c161094b565b6118a8565b81198111611724570190565b6113248181106118e1575b0390565b6118e9611623565b6118dd565b7f6f766572666c6f770000000000000000000000000000000000000000000000009052565b61191e602091610674565b61078e816118ee565b60206105da9181815201611913565b1561193d57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201611927565b919091611982600a835111156113f2565b61199361198e82610f4a565b6116ed565b600091825b6119a282516105da565b841015611a4057611a34611a3a916119d06119c96114576119c38988611731565b51611753565b15156113f2565b611a2e6119f360206119ff6119f86119f3836119ec8d8c611731565b510161175d565b610741565b15156117af565b611a24611a13611a0e8a610f4a565b6105da565b611a1d8b8a611731565b519061188b565b6119ec8988611731565b906118c6565b936116f6565b92611998565b7f3fa96d7b6bcbfe71ef171666d84db3cf52fa2d1c8afdb1cc8e486177f208b7df9350611a7e90611a77611a0e611a8a95976118d2565b1015611936565b604051918291826107d3565b0390a2565b906105a5929161157b565b6105a590611acb73ffffffffffffffffffffffffffffffffffffffff600460206115ae61145761145760fd54610708565b61198e6105a591610f4a565b6105a590611a9a565b611af190611aec611f10565b611b17565b6105a5611e73565b9160206105a5929493611b10816040810197610727565b0190610d7f565b6105a590611bf360046020611b3361145761145760fd54610708565b604051928380927fe01779340000000000000000000000000000000000000000000000000000000082525afa908115611c2f575b600091611c1a575b50611be2604051917fa7aed6050000000000000000000000000000000000000000000000000000000083528260208180611bad893060048401611af9565b0373ffffffffffffffffffffffffffffffffffffffff96878096165afa908115611c0d575b600091611bf8575b5016156113f2565b611beb83612be7565b1633146113f2565b6128ba565b611c0791506116073d826109c1565b38611bda565b611c156114eb565b611bd2565b611c2991506116073d826109c1565b38611b6f565b611c376114eb565b611b67565b6105a590611ae0565b611c6b611c6673ffffffffffffffffffffffffffffffffffffffff92610f6a565b6113e8565b16151590565b90611c7e610a9283610bc4565b918252565b9073ffffffffffffffffffffffffffffffffffffffff169052565b906bffffffffffffffffffffffff169052565b906105a5611cbd610a02565b9254611cdf73ffffffffffffffffffffffffffffffffffffffff821685611c83565b60a01c60208401611c9e565b908154611cf781611c71565b926020611d068186019261100c565b6000925b848410611d18575050505050565b6001838192611d2685611cb1565b815201920193019290611d0a565b6105da90611ceb565b611d496105da91610f4a565b611d34565b60207f6e697469616c697a696e67000000000000000000000000000000000000000000917f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981520152565b611da460409161067e565b61078e81611d4e565b60206105da9181815201611d99565b15611dc357565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201611dad565b611e0a611e056000546110a1565b611dbc565b6105a56105a5611e7b565b6105a5611df7565b611af1611e056000546110a1565b50600190565b50600290565b5090565b611e4660c954611e2b565b60c955565b611e4660c954611e31565b611e629060fb54611e37565b60fb55565b906113ad908254611e37565b6105a5611e3b565b6105a5611e1d565b6105da90546105da565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c009052565b611ebd602091610688565b61078e81611e8d565b60206105da9181815201611eb2565b15611edc57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201611ec6565b611f276002611f2060c9546105da565b1415611ed5565b6105a5611e4b565b6105a5611e056000546110a1565b6105a5611f2f565b7f49064906000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000821614908115611f95575090565b611f9f915061296d565b38611e37565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b90600182811c92168015611ff7575b6020831014611fef57565b610818611fa5565b91607f1691611fe4565b9060009160655461201b61201482611fd5565b80936106ff565b9060019081811690811561206f5750600114612037575b505050565b92935090612043610fba565b926000935b82851061205c575050500190388080612032565b8054858501526020909401938101612048565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168352505060200192503890508080612032565b906000916066546120b761201482611fd5565b9060019081811690811561206f57506001146120d257505050565b929350906120de610fe3565b926000935b8285106120f7575050500190388080612032565b80548585015260209094019381016120e3565b9060009291805461212461211d82611fd5565b80946106ff565b9160019180831690811561217d5750600114612141575b50505050565b6121509194955092919261100c565b926000935b82851061216a5750505001903880808061213b565b8054858501526020909401938101612155565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168452505050602001925038905080808061213b565b604051906105a5826121c581612001565b03836109c1565b604051906105a5826121c5816120a4565b906105a56121c5926040519384809261210a565b6105da906121dd565b9061078e6020928281519485920161081d565b6122168161366b565b61222761222282610f5a565b6121f1565b90612230612c14565b80511561229e5761224183516105da565b61225057506105da9150612c30565b6105da915061227261226c9360405194859360208501906121fa565b906121fa565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352826109c1565b505090565b60207f6578697374656e7420746f6b656e000000000000000000000000000000000000917f45524337323155524953746f726167653a2055524920736574206f66206e6f6e81520152565b6122f9604091610656565b61078e816122a3565b60206105da91818152016122ee565b1561231857565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612302565b50600090565b6113ad815461234c565b6105a590612352565b818110612370575050565b8061237c60019261235c565b01612365565b90601f821161238f575050565b6116ce9161239b610fba565b906020601f840160051c830193106123bb575b601f0160051c0190612365565b90915081906123ae565b90601f82116123d2575050565b6116ce9161239b610fe3565b9190601f81116123ed57505050565b61239b6123f99361100c565b388080612032565b90815167ffffffffffffffff8111612524575b61242881612423606554611fd5565b612382565b602080601f83116001146124815750819293600092612476575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c191617606555565b015190503880612442565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316946124ae610fba565b926000905b87821061250c5750508360019596106124d5575b505050811b016065556105a5565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690553880806124c7565b806001859682949686015181550195019301906124b3565b61252c61094b565b612414565b90815167ffffffffffffffff8111612654575b61255881612553606654611fd5565b6123c5565b602080601f83116001146125b157508192936000926125a6575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c191617606655565b015190503880612572565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316946125de610fe3565b926000905b87821061263c575050836001959610612605575b505050811b016066556105a5565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690553880806125f7565b806001859682949686015181550195019301906125e3565b61265c61094b565b612544565b919091825167ffffffffffffffff8111612787575b61268a816126848454611fd5565b846123de565b602080601f83116001146126e35750819293946000926126d8575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c1916179055565b0151905038806126a5565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316956127118561100c565b926000905b88821061276f57505083600195969710612738575b505050811b0190556105a5565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c1916905538808061272b565b80600185968294968601518155019501930190612716565b61278f61094b565b612676565b6105a590612401565b6105a590612531565b906105a591612661565b6114bb906128137ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79361280573ffffffffffffffffffffffffffffffffffffffff6127fd611c6686610f6a565b161515612311565b61280e83610f5a565b6127a6565b60405191829182610d83565b6105da9054611fd5565b6000906128358161100c565b90612840825461234c565b905555565b601f8211600114612857576000915055565b612879610818926001601f61286b8561100c565b920160051c82019101612365565b612829565b6105a5929150612845565b805461289481611fd5565b908161289f57505050565b6123f99261287e565b6105a590612889565b6105a5906128a8565b6128c3816132b3565b6128d76128d2611a0e83610f5a565b61281f565b6128df575b50565b6128eb6128f091610f5a565b6128b1565b386128dc565b60010190565b6105a561291261290d60fb546105da565b6128f6565b611e56565b906105a59161292a611e056000546110a1565b906105a591612963565b906105a591612917565b906105a591612951611e056000546110a1565b9061295e6105a592612794565b61279d565b906105a59161293e565b7fffffffff00000000000000000000000000000000000000000000000000000000167f80ac58cd0000000000000000000000000000000000000000000000000000000081149081156129ee575b81156129c4575090565b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438611e37565b7f5b5e139f00000000000000000000000000000000000000000000000000000000811491506129ba565b60207f6c6964206f776e65720000000000000000000000000000000000000000000000917f4552433732313a2061646472657373207a65726f206973206e6f74206120766181520152565b612a6e604091610692565b61078e81612a18565b60206105da9181815201612a63565b15612a8d57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612a77565b73ffffffffffffffffffffffffffffffffffffffff16600052606a602052604060002090565b73ffffffffffffffffffffffffffffffffffffffff166000526068602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b612b5f6105da91612b5a73ffffffffffffffffffffffffffffffffffffffff82161515612a86565b612ae7565b611e83565b7f4552433732313a20696e76616c696420746f6b656e20494400000000000000009052565b612b9460209161069c565b61078e81612b64565b60206105da9181815201612b89565b15612bb357565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612b9d565b611c66612bf391610f6a565b6105da73ffffffffffffffffffffffffffffffffffffffff82161515612bac565b612c1c610a0f565b9060008252565b90611c7e610a9283610a2a565b612c398161366b565b612c41612c14565b805190919015612c6e5761226c91612272612c5e6105da936138fc565b60405194859360208501906121fa565b5050611a0e612c14565b60207f7200000000000000000000000000000000000000000000000000000000000000917f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6581520152565b612cce6040916106a6565b61078e81612c78565b60206105da9181815201612cc3565b15612ced57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612cd7565b60207f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000917f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f81520152565b612d776040916106b0565b61078e81612d21565b60206105da9181815201612d6c565b15612d9657565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612d80565b906105a591612e11612ddb83612be7565b73ffffffffffffffffffffffffffffffffffffffff612e01818316809286161415612ce6565b3314908115612e16575b50612d8f565b613528565b612e2991506101da906101d53391612ac1565b38612e0b565b611c666105da91612e3f8161366b565b610f7a565b906105a591336135f8565b6105da90546110aa565b60207f72206f7220617070726f76656400000000000000000000000000000000000000917f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6581520152565b612eaf6040916106ba565b61078e81612e59565b60206105da9181815201612ea4565b15612ece57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612eb8565b906105a59291612f1a612f158433613010565b612ec7565b61347d565b90916105a592612f2d612c14565b925b906105a5939291612f43612f158433613010565b612ff1565b60207f63656976657220696d706c656d656e7465720000000000000000000000000000917f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581520152565b612f9e6040916106c4565b61078e81612f48565b60206105da9181815201612f93565b15612fbd57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612fa7565b916105a5939161300b9361300683838361347d565b61384c565b612fb6565b61301982612be7565b9173ffffffffffffffffffffffffffffffffffffffff918281169284168314938415613064575b5050821561304d57505090565b61305c91925061145790612e2f565b14388061229e565b613077929450906101d56101da92612ac1565b913880613040565b6105a59161308b612c14565b61300b916105a59361309d82826131a8565b61373e565b7f4552433732313a206d696e7420746f20746865207a65726f20616464726573739052565b6130d26020916106ce565b61078e816130a2565b60206105da91818152016130c7565b156130f157565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280611159600482016130db565b7f4552433732313a20746f6b656e20616c7265616479206d696e746564000000009052565b6131556020916106d7565b61078e81613125565b60206105da918181520161314a565b1561317457565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152806111596004820161315e565b6131fb6131ea73ffffffffffffffffffffffffffffffffffffffff6131d081851615156130ea565b6131ef6131ea826131e3611c6689610f6a565b16156105ea565b61316d565b6131e3611c6686610f6a565b61321a61320782612ae7565b61321461290d82546105da565b90611e67565b61322c8161322784610f6a565b61138b565b60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef81604051a4565b7fffffffffffffffffffffffff00000000000000000000000000000000000000001690565b6113ad8154613256565b6105a59061327b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6132bc81612be7565b5060006132c882612be7565b6132d96132d484610f7a565b613285565b6132f76132e582612ae7565b6132146132f282546105da565b61328e565b6133036132d484610f6a565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef82604051a4565b60207f6f776e6572000000000000000000000000000000000000000000000000000000917f4552433732313a207472616e736665722066726f6d20696e636f72726563742081520152565b6133816040916106e1565b61078e8161332b565b60206105da9181815201613376565b156133a057565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152806111596004820161338a565b60207f7265737300000000000000000000000000000000000000000000000000000000917f4552433732313a207472616e7366657220746f20746865207a65726f2061646481520152565b61342a6040916106eb565b61078e816133d4565b60206105da918181520161341f565b1561344957565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201613433565b6134ce6134b36134bc61348f86612be7565b73ffffffffffffffffffffffffffffffffffffffff85811693909182168414613399565b85161515613442565b6134c861145786612be7565b14613399565b6134da6132d484610f7a565b6134e66132e582612ae7565b6134f261320783612ae7565b6134ff8261322785610f6a565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000604051a4565b6135358161322784610f7a565b61353e82612be7565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256000604051a4565b7f4552433732313a20617070726f766520746f2063616c6c6572000000000000009052565b6135976020916106f5565b61078e81613567565b60206105da918181520161358c565b156135b657565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280611159600482016135a0565b906113ad9015158254611185565b90916136667f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319161364473ffffffffffffffffffffffffffffffffffffffff80871690861614156135af565b61365a81613655876101d588612ac1565b6135ea565b60405191829182610608565b0390a3565b73ffffffffffffffffffffffffffffffffffffffff61368f611c666105a593610f6a565b161515612bac565b51906105a58261056d565b6020816105da9303126136b5575b613697565b6136bd610567565b6136b0565b6136ec6105da94936136d683608095610727565b6136e260208401610721565b6040830190610d7f565b8160608201520190610858565b906105da94936136e2608094613712856136ec95610727565b6020850190610727565b3d156137365761372b3d612c23565b903d6000602084013e565b6060906105a5565b909190803b156138445761379e60209173ffffffffffffffffffffffffffffffffffffffff9360006040519586809581947f150b7a02000000000000000000000000000000000000000000000000000000009a8b845233600485016136c2565b0393165af160009181613824575b506137fe575050506137bc61371c565b805190816137f95750506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061115960048201612fa7565b602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000161490565b61383d9192506138343d826109c1565b3d8101906136a2565b90386137ac565b505050600190565b92909190823b156138ad5761379e92602092600073ffffffffffffffffffffffffffffffffffffffff6040518097819682957f150b7a02000000000000000000000000000000000000000000000000000000009b8c855233600486016136f9565b50505050600190565b369037565b906105a57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06138f26138ec85612c23565b94610a2a565b01602084016138b6565b6139058161398a565b906001908160216139178286016138bb565b94850101905b613928575b50505090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190600a907f30313233343536373839616263646566000000000000000000000000000000008282061a8353049182156139855791908261391d565b613922565b6000907a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015613a5a575b50600a906d04ee2d6d415b85acef810000000080821015613a4d575b50662386f26fc1000080821015613a40575b506305f5e10080821015613a33575b5061271080821015613a26575b506064811015613a18575b1015613a105790565b6001016105da565b606460029104920191613a07565b60049104920191386139fc565b60089104920191386139ef565b60109104920191386139e0565b60209104920191386139ce565b604092509004600a6139b256fea3646970667358221220b3a409b5475839508fa40cbf5d567e2fbca136bdba28688733efdabd6cb851986c6578706572696d656e74616cf564736f6c634300080b0041",
                "constructorSrcmap": "469:4137:2:-:0;;;;;;;-1:-1:-1;469:4137:2;;;;;;;;;;:::i;:::-;;;;;;;",
                "file": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol",
                "immutables": [],
                "internalFunctions": {},
                "is_static_address": false,
                "lang": "Solidity",
                "methods": [
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "RoyaltiesForValidator",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "fbd4a680",
                        "sourceBytes": {
                            "begin": 796,
                            "size": 65
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "name",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "06fdde03",
                        "sourceBytes": {
                            "begin": 2932,
                            "size": 98
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "safeTransferFrom",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "from",
                            "to",
                            "tokenId"
                        ],
                        "returns": [],
                        "sighash": "42842e0e",
                        "sourceBytes": {
                            "begin": 5446,
                            "size": 149
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "mintNFT",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_to",
                            "_uri"
                        ],
                        "returns": [],
                        "sighash": "eacabe14",
                        "sourceBytes": {
                            "begin": 2218,
                            "size": 358
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "ownerOf",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "tokenId"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "6352211e",
                        "sourceBytes": {
                            "begin": 2651,
                            "size": 219
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes4",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "supportsInterface",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
                        "paramNames": [
                            "interfaceId"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "01ffc9a7",
                        "sourceBytes": {
                            "begin": 822,
                            "size": 227
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "balanceOf",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "owner"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "70a08231",
                        "sourceBytes": {
                            "begin": 2390,
                            "size": 204
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "approve",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "to",
                            "tokenId"
                        ],
                        "returns": [],
                        "sighash": "095ea7b3",
                        "sourceBytes": {
                            "begin": 3929,
                            "size": 417
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "collectionOwner",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "df727d3b",
                        "sourceBytes": {
                            "begin": 675,
                            "size": 30
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getValidatorRoyalties",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_tokenId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "astId": 2278,
                                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                        "containingContract": "LibShare",
                                        "structMembers": [
                                            {
                                                "name": "account",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Share",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "sighash": "02b42141",
                        "sourceBytes": {
                            "begin": 4438,
                            "size": 166
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "symbol",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "95d89b41",
                        "sourceBytes": {
                            "begin": 3094,
                            "size": 102
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "isApprovedForAll",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "owner",
                            "operator"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e985e9c5",
                        "sourceBytes": {
                            "begin": 4860,
                            "size": 162
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_collectionOwner",
                            "_collectionFactoryAddress",
                            "_name",
                            "_symbol"
                        ],
                        "returns": [],
                        "sighash": "2016a0d2",
                        "sourceBytes": {
                            "begin": 1650,
                            "size": 405
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "deleteNFT",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_tokenId"
                        ],
                        "returns": [],
                        "sighash": "f687ed57",
                        "sourceBytes": {
                            "begin": 3673,
                            "size": 436
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "deleteValidatorRoyalties",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_tokenId"
                        ],
                        "returns": [],
                        "sighash": "391601dc",
                        "sourceBytes": {
                            "begin": 3448,
                            "size": 127
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "tokenURI",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
                        "paramNames": [
                            "tokenId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "c87b56dd",
                        "sourceBytes": {
                            "begin": 1115,
                            "size": 608
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferFrom",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "from",
                            "to",
                            "tokenId"
                        ],
                        "returns": [],
                        "sighash": "23b872dd",
                        "sourceBytes": {
                            "begin": 5084,
                            "size": 296
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "safeTransferFrom",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "from",
                            "to",
                            "tokenId",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "b88d4fde",
                        "sourceBytes": {
                            "begin": 5661,
                            "size": 276
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setApprovalForAll",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "operator",
                            "approved"
                        ],
                        "returns": [],
                        "sighash": "a22cb465",
                        "sourceBytes": {
                            "begin": 4641,
                            "size": 153
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "astId": 2278,
                                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                        "containingContract": "LibShare",
                                        "structMembers": [
                                            {
                                                "name": "account",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Share",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setRoyaltiesForValidator",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_tokenId",
                            "_commission",
                            "royalties"
                        ],
                        "returns": [],
                        "sighash": "45913fe9",
                        "sourceBytes": {
                            "begin": 2743,
                            "size": 699
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "exists",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [
                            "_tokenId"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "4f558e79",
                        "sourceBytes": {
                            "begin": 4115,
                            "size": 102
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "collectionFactoryAddress",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionMethods.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "401f8c7a",
                        "sourceBytes": {
                            "begin": 711,
                            "size": 39
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionMethods",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getApproved",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                        "paramNames": [
                            "tokenId"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "081812fc",
                        "sourceBytes": {
                            "begin": 4407,
                            "size": 167
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    }
                ],
                "name": "CollectionMethods",
                "original_file": "contracts/CollectionMethods.sol",
                "solidityTypes": [
                    {
                        "astId": 2745,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Counters.sol|Counters.Counter",
                        "containingContract": "Counters",
                        "structMembers": [
                            {
                                "name": "_value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Counter",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 9289,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                        "containingContract": "Math",
                        "enumMembers": [
                            {
                                "name": "Down"
                            },
                            {
                                "name": "Up"
                            },
                            {
                                "name": "Zero"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 8306,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol|MathUpgradeable.Rounding",
                        "containingContract": "MathUpgradeable",
                        "enumMembers": [
                            {
                                "name": "Down"
                            },
                            {
                                "name": "Up"
                            },
                            {
                                "name": "Zero"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 963,
                        "canonicalId": "contracts/piNFTMethods.sol|piNFTMethods.Commission",
                        "containingContract": "piNFTMethods",
                        "structMembers": [
                            {
                                "name": "commission",
                                "type": {
                                    "astId": 2278,
                                    "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                    "containingContract": "LibShare",
                                    "structMembers": [
                                        {
                                            "name": "account",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "primitiveName": "uint96",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Share",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "name": "isValid",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Commission",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7423,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.AddressSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "AddressSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7426,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.BooleanSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "BooleanSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7429,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.Bytes32Slot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Bytes32Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7432,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.Uint256Slot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Uint256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7435,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.StringSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "StringSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7438,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.BytesSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "structName": "BytesSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 2278,
                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                        "containingContract": "LibShare",
                        "structMembers": [
                            {
                                "name": "account",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Share",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 368,
                        "canonicalId": "contracts/CollectionFactory.sol|CollectionFactory.CollectionMeta",
                        "containingContract": "CollectionFactory",
                        "structMembers": [
                            {
                                "name": "name",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "symbol",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "URI",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "contractAddress",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "owner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "description",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "CollectionMeta",
                        "type": "UserDefinedStruct"
                    }
                ],
                "sourceBytes": {
                    "begin": 469,
                    "size": 4137
                },
                "srcmap": "469:4137:2:-:0;;;;;;;;;;-1:-1:-1;469:4137:2;;;:::i;:::-;-1:-1:-1;469:4137:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;4980:35:20;;:25;469:4137:2;;;:::i;:::-;4980:25:20;;;:::i;:::-;:35;:::i;:::-;;:::i;:::-;469:4137:2;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;675:30;469:4137;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;711:39;469:4137;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;:::i;:::-;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;1830:1:18;469:4137:2;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::o;:::-;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;796:65;469:4137;;;;;;:::o;:::-;;;1273:10:23;469:4137:2;;;;;;:::o;:::-;;;7266:7:20;469:4137:2;;;;;;:::o;:::-;;;4543:15:20;469:4137:2;;;;;;:::o;:::-;;;;;;;;;;;;1873:13:20;469:4137:2;;;;:::o;:::-;1896:17:20;469:4137:2;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;;796:65;;;;:::i;:::-;469:4137;;;796:65;;;;;;;;:::i;:::-;469:4137;;;;;;;;;796:65;:::o;:::-;;;;;;;469:4137;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;3302:13:15;469:4137:2;;:::i;:::-;3302:13:15;469:4137:2;:::o;:::-;;;;;;:::o;:::-;;;;:::o;:::-;;3302:13:15;469:4137:2;;:::i;:::-;;3302:13:15;469:4137:2;;:::i;:::-;3551:1:15;469:4137:2;;:::o;:::-;;;;;;;;:::i;3246:506:15:-;;;;3636:1;3246:506;3302:13;469:4137:2;;3325:201:15;469:4137:2;;;;;3301:14:15;3347:34;;;;;;3246:506;3346:108;;;;3246:506;3325:201;;:::i;:::-;3536:16;;;:::i;:::-;3562:65;;3246:506;3636:1;:::i;:::-;3647:99;;3246:506::o;3647:99::-;3681:21;;:::i;:::-;3721:14;469:4137:2;;3721:14:15;;;;:::i;:::-;;;;3647:99;;3562:65;3596:20;;:::i;:::-;3562:65;;3346:108;3426:4;;3387:45;3426:4;1713:19:25;:23;3387:45:15;:::i;:::-;:66;;;;3346:108;;;;;3387:66;3452:1;469:4137:2;;;;3436:17:15;3387:66;;;3347:34;3380:1;469:4137:2;;;3365:16:15;;-1:-1:-1;3347:34:15;;469:4137:2;;;;;;;;;:::o;:::-;;;;;1952:34;469:4137;;:::i;:::-;1952:34;469:4137;:::o;:::-;;;;;1996:52;469:4137;;:::i;:::-;1996:52;469:4137;:::o;:::-;;;;;;;;;:::i;:::-;;;:::o;1650:405::-;1899:7;1996:52;1650:405;1952:34;1650:405;;;;:::i;:::-;1899:7;:::i;:::-;;;:::i;:::-;1952:34;:::i;:::-;1996:52;:::i;1650:405::-;;;;;;;:::i;469:4137::-;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;2218:358::-;2537:32;2218:358;2285:38;2293:29;469:4137;2307:15;469:4137;;:::i;:::-;2293:29;:::i;:::-;:10;:29;2285:38;:::i;:::-;2333:26;469:4137;;;2341:17;;2333:26;:::i;:::-;2537:32;469:4137;2388:15;469:4137;;:::i;:::-;2438:8;;;;;:::i;:::-;2480:4;;;;:::i;:::-;2495:25;;:::i;:::-;469:4137;;2537:32;;;;;:::i;:::-;;;;2218:358::o;469:4137::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;1100:206::-;;1298:1;1100:206;;1131:157;469:4137;1182:86;;:84;:43;469:4137;1200:24;469:4137;;:::i;1182:84::-;469:4137;;1182:86;;;;469:4137;1182:86;;;;;;;;;1100:206;1182:86;;;;1100:206;469:4137;;1152:10;:116;1131:157;:::i;:::-;1298:1;:::i;1182:86::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;469:4137;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;3355:4;469:4137;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;2743:699::-;;;;2911:31;2939:2;469:4137;;2919:22;;2911:31;:::i;:::-;2952:38;2959:31;;;:::i;:::-;2952:38;:::i;:::-;;3039:13;;3076:3;3054:20;469:4137;;3054:20;:::i;:::-;;;;;;3277:34;3076:3;3103:12;3095:45;3103:36;:20;:12;;;;:::i;:::-;;:20;:::i;:36::-;;;3095:45;:::i;:::-;3277:34;3293:18;3162;3154:45;3162:23;:18;:12;;;;;:::i;:::-;;:18;;:::i;:::-;:23;:::i;:::-;;;3154:45;:::i;:::-;3213:50;:36;:31;;;:::i;:::-;:36;:::i;:::-;3250:12;;;;:::i;:::-;;3213:50;;:::i;:::-;3293:12;;;;:::i;3277:34::-;;;:::i;:::-;3076:3;;:::i;:::-;3039:13;;;3054:20;3402:33;3054:20;;3331:55;3054:20;3339:34;3355:18;3402:33;3054:20;;3355:18;:::i;3339:34::-;-1:-1:-1;3339:34:2;3331:55;:::i;:::-;469:4137;;3402:33;;;;;:::i;:::-;;;;2743:699::o;:::-;;;;;;:::i;1100:206::-;1298:1;1100:206;1131:157;469:4137;1182:86;;:84;:43;469:4137;1200:24;469:4137;;:::i;1131:157::-;3537:31;3530:38;3448:127;3537:31;:::i;3448:127::-;;;;:::i;2471:103:18:-;2536:1;2471:103;;;:::i;:::-;2536:1;:::i;:::-;;;:::i;469:4137:2:-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;3673:436::-;4093:8;3673:436;4037:40;3772:87;;:85;:65;469:4137;3803:24;469:4137;;:::i;3772:85::-;469:4137;;3772:87;;;;469:4137;3772:87;;;;;;;;;3673:436;3772:87;;;;3673:436;469:4137;3869:158;469:4137;;3890:113;469:4137;3890:113;;3958:4;3772:87;3958:4;;3890:113;3958:4;;3772:87;3890:113;;;:::i;:::-;;469:4137;;;;;;3890:113;;;;;;;3673:436;3772:87;3890:113;;;3673:436;469:4137;;3890:127;3869:158;:::i;:::-;4045:17;;;:::i;:::-;469:4137;4066:10;4045:31;4037:40;:::i;:::-;4093:8;:::i;3890:113::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;3772:87;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;3673:436;;;;:::i;4115:102::-;7266:16:20;;469:4137:2;4115:102;7266:16:20;:::i;:::-;;:::i;:::-;469:4137:2;7680:31:20;;4115:102:2;:::o;469:4137::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;4438:166::-;4566:31;4559:38;4438:166;4566:31;:::i;:::-;4559:38;:::i;469:4137::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;5328:125:15:-;5366:69;469:4137:2;5374:13:15;469:4137:2;;:::i;:::-;5366:69:15;:::i;:::-;5445:1;1868:111:18;;:::i;:::-;;;:::i;5328:125:15:-;5366:69;469:4137:2;5374:13:15;469:4137:2;;:::i;1787:1:18:-;;;;:::o;:::-;;1830;1787;:::o;:::-;;;:::o;:::-;;2065:22;1787:1;;:::i;:::-;2065:22;1787:1;:::o;:::-;;2712:7;1787:1;;:::i;:::-;;;2388:15:2;1787:1:18;;:::i;:::-;2388:15:2;1787:1:18;:::o;:::-;;;;;;;:::i;1985:109::-;2065:22;;:::i;1985:109::-;;;:::i;469:4137:2:-;;;;;:::i;1830:1:18:-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;469:4137:2;;;1830:1:18;;;;;;;;;:::i;2580:287::-;2704:63;1830:1;469:4137:2;2712:7:18;469:4137:2;;:::i;:::-;2712:19:18;;2704:63;:::i;:::-;2842:18;;:::i;5328:125:15:-;5366:69;469:4137:2;5374:13:15;469:4137:2;;:::i;471:68:23:-;;;:::i;822:227::-;469:4137:2;;;;969:33:23;:73;;;;;962:80;822:227;:::o;969:73::-;1006:36;;;;:::i;:::-;969:73;;;469:4137:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;3018:5:20;469:4137:2;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;469:4137:2;;;-1:-1:-1;469:4137:2;;-1:-1:-1;469:4137:2;;;;;;;;3182:7:20;469:4137:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;469:4137:2;;;-1:-1:-1;469:4137:2;;-1:-1:-1;469:4137:2;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;:::i;1115:608:23:-;1228:7;;;:::i;:::-;1247:45;1273:19;;;:::i;:::-;1247:45;:::i;:::-;469:4137:2;;;:::i;:::-;;;1406:23:23;1402:70;;1574:27;469:4137:2;;1574:27:23;:::i;:::-;1570:106;;1693:23;;;;;:::i;1570:106::-;1631:33;469:4137:2;;;;;;;1631:33:23;;;;;;469:4137:2;;:::i;:::-;;;:::i;:::-;1631:33:23;;;;;;;;:::i;1402:70::-;1445:16;;;:::o;469:4137:2:-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;469:4137:2;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1873:13:20;469:4137:2;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1873:13:20;469:4137:2;:::o;:::-;;;;-1:-1:-1;469:4137:2;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;1873:13:20;469:4137:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1896:17:20;469:4137:2;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1896:17:20;469:4137:2;:::o;:::-;;;;-1:-1:-1;469:4137:2;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;1896:17:20;469:4137:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;469:4137:2;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;1908:253:23:-;2131:23;1908:253;2084:31;2131:23;1908:253;1999:75;469:4137:2;7266:16:20;;;;:::i;:::-;469:4137:2;7680:31:20;;1999:75:23;:::i;:::-;2084:19;;;:::i;:::-;:31;:::i;:::-;469:4137:2;;2131:23:23;;;;;:::i;469:4137:2:-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;2379:200:23:-;2459:7;;;:::i;:::-;2482:33;:26;2488:19;;;:::i;2482:26::-;:33;:::i;:::-;2478:95;;2379:200;;:::o;2478:95::-;2543:19;2536:26;2543:19;;:::i;:::-;2536:26;:::i;:::-;2478:95;;;469:4137:2;1050:1:45;469:4137:2;;:::o;945:123:45:-;1032:19;;469:4137:2;2388:15;469:4137;;:::i;:::-;1032:19:45;:::i;:::-;;:::i;5328:125:15:-;;5445:1;5328:125;5366:69;469:4137:2;5374:13:15;469:4137:2;;:::i;5366:69:15:-;1605:149:20;1739:7;1605:149;1739:7;:::i;1605:149::-;;;;;:::i;5328:125:15:-;;5445:1;5328:125;5366:69;469:4137:2;5374:13:15;469:4137:2;;:::i;5366:69:15:-;1760:160:20;1873:13;1896:17;1760:160;1873:13;:::i;:::-;1896:17;:::i;1760:160::-;;;;;:::i;1987:344::-;469:4137:2;;2161:36:20;2146:51;;:126;;;;;1987:344;2146:178;;;;2127:197;1987:344;:::o;2146:178::-;1183:36:29;1168:51;;;2146:178:20;;;:126;2228:44;2213:59;;;-1:-1:-1;2146:126:20;;469:4137:2;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;4980:18:20;469:4137:2;;;;;;:::o;:::-;;;;;2571:9:20;469:4137:2;;;;;;:::o;:::-;;;;;;;;;;;;:::o;2390:204:20:-;2571:16;;2390:204;2481:73;469:4137:2;;;2489:19:20;;2481:73;:::i;:::-;2571:16;:::i;:::-;;:::i;469:4137:2:-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;2651:219:20:-;7266:16;;2651:219;7266:16;:::i;:::-;2785:56;469:4137:2;;;2793:19:20;;2785:56;:::i;469:4137:2:-;;;:::i;:::-;;;;;:::o;:::-;;;;;;:::i;3262:276:20:-;3375:7;;;:::i;:::-;469:4137:2;;:::i;:::-;;;;;;3445:25:20;:86;;469:4137:2;3506:18:20;469:4137:2;3506:18:20;3480:45;3506:18;;:::i;:::-;469:4137:2;;3480:45:20;;;;;;469:4137:2;;:::i;3445:86:20:-;469:4137:2;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;3929:417:20:-;;4331:7;3929:417;4137:170;4025:34;;;:::i;:::-;469:4137:2;4069:57:20;469:4137:2;;;;;;;4077:11:20;;4069:57;:::i;:::-;929:10:26;4158:21:20;:62;;;;;3929:417;4137:170;;:::i;:::-;4331:7;:::i;4158:62::-;4980:35;929:10:26;;4980:35:20;929:10:26;4980:25:20;929:10:26;4980:25:20;;:::i;:35::-;4158:62;;;4407:167;4543:24;;4407:167;4517:7;;;:::i;:::-;4543:24;:::i;4641:153::-;;4778:8;4641:153;929:10:26;4778:8:20;:::i;469:4137:2:-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;5084:296:20:-;;5365:7;5084:296;;5235:99;5243:41;929:10:26;;5243:41:20;:::i;:::-;5235:99;:::i;:::-;5365:7;:::i;5446:149::-;;;5549:39;5446:149;469:4137:2;;:::i;:::-;5549:39:20;5661:276;;5925:4;5661:276;;;5783:99;5791:41;929:10:26;;5791:41:20;:::i;5783:99::-;5925:4;:::i;469:4137:2:-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;6798:267:20:-;;6948:110;6798:267;;6956:47;6798:267;6930:7;;;;;:::i;:::-;6956:47;:::i;:::-;6948:110;:::i;7876:272::-;8001:34;;;:::i;:::-;469:4137:2;;;;;;;;;8053:16:20;;:52;;;;;7876:272;8053:87;;;;;;8045:96;;7876:272;:::o;8053:87::-;8109:31;:20;;;;;;:::i;:31::-;;8053:87;;;;:52;4980:35;:25;;;;;:35;:25;;:::i;:35::-;8053:52;;;;;8478:108;8553:26;8478:108;469:4137:2;;:::i;:::-;8950:53:20;8807:279;8929:150;8807:279;8911:7;;;;:::i;:::-;8950:53;:::i;469:4137:2:-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;9408:920:20:-;9754:58;9762:17;469:4137:2;9479:61:20;469:4137:2;;;9487:16:20;;9479:61;:::i;:::-;9550:58;9558:17;7266:16;;;;;:::i;:::-;469:4137:2;7680:31:20;9558:17;:::i;:::-;9550:58;:::i;:::-;7266:16;;;;:::i;9754:58::-;10154:18;:13;;;:::i;:::-;:18;469:4137:2;;;;:::i;10154:18:20:-;;;:::i;:::-;10193:21;:16;;;;:::i;:::-;:21;:::i;:::-;9501:1;10230:33;469:4137:2;;;10230:33:20;9408:920::o;469:4137:2:-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;10654:784:20:-;10729:34;;;:::i;:::-;;11007:31;10935:34;;;:::i;:::-;11007:31;11014:24;;;:::i;:::-;11007:31;:::i;:::-;11254:21;:16;;;:::i;:::-;:21;469:4137:2;;;;:::i;:::-;11254:21:20;:::i;:::-;11295:23;11302:16;;;:::i;11295:23::-;11334:36;469:4137:2;;;11334:36:20;10654:784::o;469:4137:2:-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;11762:1225:20:-;12163:92;11851;11953:65;11859:34;;;:::i;:::-;469:4137:2;;;;;;;;;11859:42:20;;11851:92;:::i;:::-;469:4137:2;;11961:16:20;;11953:65;:::i;:::-;12171:42;:34;;;:::i;:42::-;;12163:92;:::i;:::-;12317:31;12324:24;;;:::i;12317:31::-;12792:20;:15;;;:::i;:20::-;12826:18;:13;;;:::i;:18::-;12864:21;:16;;;;:::i;:21::-;12901:27;11975:1;469:4137:2;;12901:27:20;11762:1225::o;13099:182::-;13173:29;:24;;;;:::i;:29::-;13226:34;;;:::i;:::-;13217:57;;469:4137:2;;13217:57:20;13099:182::o;469:4137:2:-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;13417:277:20:-;;;13646:41;;13417:277;13520:55;469:4137:2;;;;;;;13528:17:20;;13520:55;:::i;:::-;13585:46;:25;:35;:25;;;;:::i;:35::-;:46;:::i;:::-;469:4137:2;;13646:41:20;;;;;:::i;:::-;;;;13417:277::o;13778:133::-;469:4137:2;7266:16:20;;13851:53;13778:133;7266:16;:::i;:::-;469:4137:2;7680:31:20;;13851:53;:::i;469:4137:2:-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;14463:853:20;;;;1713:19:25;;:23;14632:15:20;;14667:82;;469:4137:2;;;;;;;;;;;;;14667:82:20;;;;929:10:26;14667:82:20;;;;:::i;:::-;;469:4137:2;;14667:82:20;;469:4137:2;;14667:82:20;;;14628:682;-1:-1:-1;14663:595:20;;14877:381;;;;;:::i;:::-;469:4137:2;;;14927:18:20;;;469:4137:2;;;;14969:60:20;;;;;14667:82;14969:60;;;:::i;14923:321::-;14667:82;15131:95;;14663:595;469:4137:2;;14799:62:20;14792:69;:::o;14667:82::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;14628:682;15288:11;;;15295:4;15288:11;:::o;14463:853::-;;;;;1713:19:25;;:23;14632:15:20;;14667:82;469:4137:2;14667:82:20;469:4137:2;;;;;;;;;;;;14667:82:20;;;;929:10:26;14667:82:20;;;;:::i;14628:682::-;15288:11;;;;15295:4;15288:11;:::o;469:4137:2:-;;;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;480:707:28:-;602:28;;;:::i;:::-;633:1;;469:4137:2;;775:76:28;671:18;469:4137:2;;;671:18:28;:::i;:::-;703:11;775:76;;;864:280;633:1;;;864:280;1157:13;;;480:707;:::o;864:280::-;469:4137:2;;969:93:28;;;;;;;;;;469:4137:2;1079:11:28;;1112:10;1108:21;;864:280;;;;;1108:21;1124:5;;10150:916:31;10239:1;10287:8;;10278:17;;;;10274:103;;10150:916;10403:8;10974:7;10403:8;;10394:17;;;;10390:103;;10150:916;10519:8;;10510:17;;;;10506:103;;10150:916;10635:7;;10626:16;;;;10622:100;;10150:916;10748:7;;10739:16;;;;10735:100;;10150:916;10852:16;10861:7;10852:16;;;10848:100;;10150:916;10965:16;;10961:66;;10150:916;:::o;10961:66::-;11011:1;469:4137:2;10961:66:31;;10848:100;10861:7;10932:1;469:4137:2;;;;10848:100:31;;;10735;10819:1;469:4137:2;;;;10735:100:31;;;;10622;10706:1;469:4137:2;;;;10622:100:31;;;;10506:103;10592:2;469:4137:2;;;;10506:103:31;;;;10390;10476:2;469:4137:2;;;;10390:103:31;;;;10274;10360:2;;-1:-1:-1;469:4137:2;;10974:7:31;10274:103;",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 2317,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint8",
                                "type": "Primitive"
                            },
                            "label": "_initialized",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_uint8"
                        },
                        {
                            "astId": 2320,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "bool",
                                "type": "Primitive"
                            },
                            "label": "_initializing",
                            "offset": 1,
                            "slot": "0",
                            "type": "t_bool"
                        },
                        {
                            "astId": 5784,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1600",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "staticArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "staticArraySize": "50",
                                "type": "StaticArray"
                            },
                            "label": "__gap",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_array(t_uint256)50_storage"
                        },
                        {
                            "astId": 7385,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1600",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "staticArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "staticArraySize": "50",
                                "type": "StaticArray"
                            },
                            "label": "__gap",
                            "offset": 0,
                            "slot": "51",
                            "type": "t_array(t_uint256)50_storage"
                        },
                        {
                            "astId": 4740,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "type": "StringType"
                            },
                            "label": "_name",
                            "offset": 0,
                            "slot": "101",
                            "type": "t_string_storage"
                        },
                        {
                            "astId": 4742,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "type": "StringType"
                            },
                            "label": "_symbol",
                            "offset": 0,
                            "slot": "102",
                            "type": "t_string_storage"
                        },
                        {
                            "astId": 4746,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "20",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                },
                                "type": "Mapping"
                            },
                            "label": "_owners",
                            "offset": 0,
                            "slot": "103",
                            "type": "t_mapping(t_uint256,t_address)"
                        },
                        {
                            "astId": 4750,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "20",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "type": "Mapping"
                            },
                            "label": "_balances",
                            "offset": 0,
                            "slot": "104",
                            "type": "t_mapping(t_address,t_uint256)"
                        },
                        {
                            "astId": 4754,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "20",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                },
                                "type": "Mapping"
                            },
                            "label": "_tokenApprovals",
                            "offset": 0,
                            "slot": "105",
                            "type": "t_mapping(t_uint256,t_address)"
                        },
                        {
                            "astId": 4760,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "20",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "mappingKeyType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "20",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "mappingValueType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "1",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    },
                                    "type": "Mapping"
                                },
                                "type": "Mapping"
                            },
                            "label": "_operatorApprovals",
                            "offset": 0,
                            "slot": "106",
                            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
                        },
                        {
                            "astId": 5662,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1408",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "staticArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "staticArraySize": "44",
                                "type": "StaticArray"
                            },
                            "label": "__gap",
                            "offset": 0,
                            "slot": "107",
                            "type": "t_array(t_uint256)44_storage"
                        },
                        {
                            "astId": 2594,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "type": "StringType"
                                },
                                "type": "Mapping"
                            },
                            "label": "_tokenURIs",
                            "offset": 0,
                            "slot": "151",
                            "type": "t_mapping(t_uint256,t_string_storage)"
                        },
                        {
                            "astId": 2738,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1568",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "staticArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "staticArraySize": "49",
                                "type": "StaticArray"
                            },
                            "label": "__gap",
                            "offset": 0,
                            "slot": "152",
                            "type": "t_array(t_uint256)49_storage"
                        },
                        {
                            "astId": 2493,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "_status",
                            "offset": 0,
                            "slot": "201",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 2562,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1568",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "staticArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "staticArraySize": "49",
                                "type": "StaticArray"
                            },
                            "label": "__gap",
                            "offset": 0,
                            "slot": "202",
                            "type": "t_array(t_uint256)49_storage"
                        },
                        {
                            "astId": 21,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "astId": 2745,
                                "canonicalId": "/home/dell/Documents/Aconomy/aconomy-contract/node_modules/@openzeppelin/contracts/utils/Counters.sol|Counters.Counter",
                                "containingContract": "Counters",
                                "structMembers": [
                                    {
                                        "name": "_value",
                                        "type": {
                                            "annotations": [
                                                {
                                                    "numberOfBytes": "32",
                                                    "offset": 0,
                                                    "slot": "0",
                                                    "type": "StorageAnnotation"
                                                }
                                            ],
                                            "primitiveName": "uint256",
                                            "type": "Primitive"
                                        }
                                    }
                                ],
                                "structName": "Counter",
                                "type": "UserDefinedStruct"
                            },
                            "label": "_tokenIdCounter",
                            "offset": 0,
                            "slot": "251",
                            "type": "t_struct(Counter)2745_storage"
                        },
                        {
                            "astId": 23,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "collectionOwner",
                            "offset": 0,
                            "slot": "252",
                            "type": "t_address"
                        },
                        {
                            "astId": 25,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "collectionFactoryAddress",
                            "offset": 0,
                            "slot": "253",
                            "type": "t_address"
                        },
                        {
                            "astId": 31,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "dynamicArrayBaseType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "32",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "astId": 2278,
                                        "canonicalId": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/utils/LibShare.sol|LibShare.Share",
                                        "containingContract": "LibShare",
                                        "structMembers": [
                                            {
                                                "name": "account",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "20",
                                                            "offset": 0,
                                                            "slot": "0",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "12",
                                                            "offset": 20,
                                                            "slot": "0",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Share",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                },
                                "type": "Mapping"
                            },
                            "label": "RoyaltiesForValidator",
                            "offset": 0,
                            "slot": "254",
                            "type": "t_mapping(t_uint256,t_array(t_struct(Share)2278_storage)dyn_storage)"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_address_payable": {
                            "encoding": "inplace",
                            "label": "address payable",
                            "numberOfBytes": "20"
                        },
                        "t_array(t_struct(Share)2278_storage)dyn_storage": {
                            "base": "t_struct(Share)2278_storage",
                            "encoding": "dynamic_array",
                            "label": "struct LibShare.Share[]",
                            "numberOfBytes": "32"
                        },
                        "t_array(t_uint256)44_storage": {
                            "base": "t_uint256",
                            "encoding": "inplace",
                            "label": "uint256[44]",
                            "numberOfBytes": "1408"
                        },
                        "t_array(t_uint256)49_storage": {
                            "base": "t_uint256",
                            "encoding": "inplace",
                            "label": "uint256[49]",
                            "numberOfBytes": "1568"
                        },
                        "t_array(t_uint256)50_storage": {
                            "base": "t_uint256",
                            "encoding": "inplace",
                            "label": "uint256[50]",
                            "numberOfBytes": "1600"
                        },
                        "t_bool": {
                            "encoding": "inplace",
                            "label": "bool",
                            "numberOfBytes": "1"
                        },
                        "t_mapping(t_address,t_bool)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => bool)",
                            "numberOfBytes": "32",
                            "value": "t_bool"
                        },
                        "t_mapping(t_address,t_mapping(t_address,t_bool))": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => mapping(address => bool))",
                            "numberOfBytes": "32",
                            "value": "t_mapping(t_address,t_bool)"
                        },
                        "t_mapping(t_address,t_uint256)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => uint256)",
                            "numberOfBytes": "32",
                            "value": "t_uint256"
                        },
                        "t_mapping(t_uint256,t_address)": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => address)",
                            "numberOfBytes": "32",
                            "value": "t_address"
                        },
                        "t_mapping(t_uint256,t_array(t_struct(Share)2278_storage)dyn_storage)": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => struct LibShare.Share[])",
                            "numberOfBytes": "32",
                            "value": "t_array(t_struct(Share)2278_storage)dyn_storage"
                        },
                        "t_mapping(t_uint256,t_string_storage)": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => string)",
                            "numberOfBytes": "32",
                            "value": "t_string_storage"
                        },
                        "t_string_storage": {
                            "encoding": "bytes",
                            "label": "string",
                            "numberOfBytes": "32"
                        },
                        "t_struct(Counter)2745_storage": {
                            "encoding": "inplace",
                            "label": "struct Counters.Counter",
                            "members": [
                                {
                                    "astId": 2744,
                                    "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                                    "label": "_value",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_uint256"
                                }
                            ],
                            "numberOfBytes": "32"
                        },
                        "t_struct(Share)2278_storage": {
                            "encoding": "inplace",
                            "label": "struct LibShare.Share",
                            "members": [
                                {
                                    "astId": 2275,
                                    "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                                    "label": "account",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_address_payable"
                                },
                                {
                                    "astId": 2277,
                                    "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol:CollectionMethods",
                                    "label": "value",
                                    "offset": 20,
                                    "slot": "0",
                                    "type": "t_uint96"
                                }
                            ],
                            "numberOfBytes": "32"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        },
                        "t_uint8": {
                            "encoding": "inplace",
                            "label": "uint8",
                            "numberOfBytes": "1"
                        },
                        "t_uint96": {
                            "encoding": "inplace",
                            "label": "uint96",
                            "numberOfBytes": "12"
                        }
                    }
                },
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [
            "00000000ce4604a0000000000000000000000003",
            "00000000ce4604a0000000000000000000000006"
        ],
        "primary_contract": "CollectionMethods",
        "primary_contract_address": "00000000ce4604a0000000000000000000000002",
        "prototypeFor": [],
        "sdc_name": "CollectionMethods.sol_0",
        "sourceDir": ".",
        "srclist": {
            "0": "contracts/AconomyERC2771Context.sol",
            "1": "contracts/CollectionFactory.sol",
            "2": "contracts/CollectionMethods.sol",
            "3": "contracts/Libraries/LibCollection.sol",
            "4": "contracts/piNFT.sol",
            "5": "contracts/piNFTMethods.sol",
            "6": "contracts/utils/LibShare.sol",
            "7": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
            "8": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC165Upgradeable.sol",
            "9": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
            "10": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol",
            "11": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC721Upgradeable.sol",
            "12": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
            "13": "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
            "14": "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
            "15": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
            "16": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
            "17": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
            "18": "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
            "19": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
            "20": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
            "21": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
            "22": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
            "23": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
            "24": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
            "25": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
            "26": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
            "27": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
            "28": "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
            "29": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
            "30": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
            "31": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
            "32": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
            "33": "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
            "34": "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol",
            "35": "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
            "36": "node_modules/@openzeppelin/contracts/proxy/Clones.sol",
            "37": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
            "38": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
            "39": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
            "40": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
            "41": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
            "42": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
            "43": "node_modules/@openzeppelin/contracts/utils/Address.sol",
            "44": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "45": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
            "46": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
            "47": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
            "48": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
            "49": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
            "50": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    },
    "LibCollection_00000000ce4604a0000000000000000000000003": {
        "contracts": [
            {
                "address": "00000000ce4604a0000000000000000000000003",
                "allMethods": [
                    {
                        "contractName": "LibCollection",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": true,
                        "name": "deployCollectionAddress",
                        "notpayable": true,
                        "originalFile": "contracts/Libraries/LibCollection.sol",
                        "paramNames": [
                            "_collectionOwner",
                            "_collectionFactoryAddress",
                            "_name",
                            "_symbol",
                            "_collectionMethods"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "d7d5c6f4",
                        "sourceBytes": {
                            "begin": 742,
                            "size": 520
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    }
                ],
                "bytecode": "60806040526004361015610018575b61001661008a565b005b60003560e01c63d7d5c6f41461002d5761000e565b307f00000000000000000000000000000000000000000000000000000000000000001461007d575b61007961006d61006436610223565b939290926103d9565b604051918291826102d6565b0390f35b61008561008a565b610055565b50600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116141561008a57565b600435906100bc82610090565b565b602435906100bc82610090565b608435906100bc82610090565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761014a575b604052565b6101526100d8565b610145565b906100bc6040519283610108565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff81116101a1575b01160190565b6101a96100d8565b61019b565b90826000939282370152565b906100bc919392936101d36101ce83610165565b610157565b94828652828201116101ea575b60208501906101ae565b6101f261008a565b6101e0565b906102139181601f82011215610216575b6020813591016101ba565b90565b61021e61008a565b610208565b9060a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126102af575b6102576100af565b916102606100be565b91610299604435926102868167ffffffffffffffff958681116102a2575b6004016101f7565b936064359081116102a2576004016101f7565b906102136100cb565b6102aa61008a565b61027e565b6102b761008a565b61024f565b73ffffffffffffffffffffffffffffffffffffffff169052565b6020810192916100bc91906102bc565b60009103126102f157565b6102f961008a565b6100bc565b6016815260200190565b60209181520190565b918091926000905b82821061033757501161032b575b5050565b60009101523880610327565b91508060209183015181860152018291610319565b601f61038461019b6020947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe094805193848093610308565b96879101610311565b926103ad61021395936103a3866103be956102bc565b60208601906102bc565b60806040850152608084019061034c565b91606081840391015261034c565b506040513d6000823e3d90fd5b6103e66000939295610517565b948373ffffffffffffffffffffffffffffffffffffffff871692833b1561047f575b610441604051978896879586947f2016a0d20000000000000000000000000000000000000000000000000000000086526004860161038d565b03925af18015610472575b610455575b5090565b61046c906104633d82610108565b3d8101906102e6565b38610451565b61047a6103cc565b61044c565b61048761008a565b610408565b7f455243313136373a20637265617465206661696c6564000000000000000000009052565b6104bc6020916102fe565b6104c58161048c565b0190565b602061021391818152016104b1565b156104df57565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280610513600482016104c9565b0390fd5b6e5af43d82803e903d91602b57fd5bf390763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c161760005260781b17602052603760096000f0906100bc73ffffffffffffffffffffffffffffffffffffffff831615156104d856fea364697066735822122004ee0c6ff1dcaaecb6d4af4b753055e92ed069140e72b33063f99d60193d460d6c6578706572696d656e74616cf564736f6c634300080b0041",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": true,
                    "optimizerRuns": 1000000,
                    "type": "SolcParameters",
                    "viaIR": true
                },
                "compilerVersion": "0.8.11",
                "constructorBytecode": "6080806040523461001d575b6105c190816100318239308160300152f35b61002561002a565b61000b565b50600080fdfe60806040526004361015610018575b61001661008a565b005b60003560e01c63d7d5c6f41461002d5761000e565b307f00000000000000000000000000000000000000000000000000000000000000001461007d575b61007961006d61006436610223565b939290926103d9565b604051918291826102d6565b0390f35b61008561008a565b610055565b50600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116141561008a57565b600435906100bc82610090565b565b602435906100bc82610090565b608435906100bc82610090565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761014a575b604052565b6101526100d8565b610145565b906100bc6040519283610108565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff81116101a1575b01160190565b6101a96100d8565b61019b565b90826000939282370152565b906100bc919392936101d36101ce83610165565b610157565b94828652828201116101ea575b60208501906101ae565b6101f261008a565b6101e0565b906102139181601f82011215610216575b6020813591016101ba565b90565b61021e61008a565b610208565b9060a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126102af575b6102576100af565b916102606100be565b91610299604435926102868167ffffffffffffffff958681116102a2575b6004016101f7565b936064359081116102a2576004016101f7565b906102136100cb565b6102aa61008a565b61027e565b6102b761008a565b61024f565b73ffffffffffffffffffffffffffffffffffffffff169052565b6020810192916100bc91906102bc565b60009103126102f157565b6102f961008a565b6100bc565b6016815260200190565b60209181520190565b918091926000905b82821061033757501161032b575b5050565b60009101523880610327565b91508060209183015181860152018291610319565b601f61038461019b6020947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe094805193848093610308565b96879101610311565b926103ad61021395936103a3866103be956102bc565b60208601906102bc565b60806040850152608084019061034c565b91606081840391015261034c565b506040513d6000823e3d90fd5b6103e66000939295610517565b948373ffffffffffffffffffffffffffffffffffffffff871692833b1561047f575b610441604051978896879586947f2016a0d20000000000000000000000000000000000000000000000000000000086526004860161038d565b03925af18015610472575b610455575b5090565b61046c906104633d82610108565b3d8101906102e6565b38610451565b61047a6103cc565b61044c565b61048761008a565b610408565b7f455243313136373a20637265617465206661696c6564000000000000000000009052565b6104bc6020916102fe565b6104c58161048c565b0190565b602061021391818152016104b1565b156104df57565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280610513600482016104c9565b0390fd5b6e5af43d82803e903d91602b57fd5bf390763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c161760005260781b17602052603760096000f0906100bc73ffffffffffffffffffffffffffffffffffffffff831615156104d856fea364697066735822122004ee0c6ff1dcaaecb6d4af4b753055e92ed069140e72b33063f99d60193d460d6c6578706572696d656e74616cf564736f6c634300080b0041",
                "constructorSrcmap": "144:1120:3:-:0;;;;;;;-1:-1:-1;144:1120:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;",
                "file": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol",
                "immutables": [],
                "internalFunctions": {},
                "is_static_address": false,
                "lang": "Solidity",
                "methods": [
                    {
                        "contractName": "LibCollection",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": true,
                        "name": "deployCollectionAddress",
                        "notpayable": true,
                        "originalFile": "contracts/Libraries/LibCollection.sol",
                        "paramNames": [
                            "_collectionOwner",
                            "_collectionFactoryAddress",
                            "_name",
                            "_symbol",
                            "_collectionMethods"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "d7d5c6f4",
                        "sourceBytes": {
                            "begin": 742,
                            "size": 520
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    }
                ],
                "name": "LibCollection",
                "original_file": "contracts/Libraries/LibCollection.sol",
                "solidityTypes": [
                    {
                        "astId": 2745,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Counters.sol|Counters.Counter",
                        "containingContract": "Counters",
                        "structMembers": [
                            {
                                "name": "_value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Counter",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 9289,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                        "containingContract": "Math",
                        "enumMembers": [
                            {
                                "name": "Down"
                            },
                            {
                                "name": "Up"
                            },
                            {
                                "name": "Zero"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 8306,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol|MathUpgradeable.Rounding",
                        "containingContract": "MathUpgradeable",
                        "enumMembers": [
                            {
                                "name": "Down"
                            },
                            {
                                "name": "Up"
                            },
                            {
                                "name": "Zero"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 963,
                        "canonicalId": "contracts/piNFTMethods.sol|piNFTMethods.Commission",
                        "containingContract": "piNFTMethods",
                        "structMembers": [
                            {
                                "name": "commission",
                                "type": {
                                    "astId": 2278,
                                    "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                    "containingContract": "LibShare",
                                    "structMembers": [
                                        {
                                            "name": "account",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "primitiveName": "uint96",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Share",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "name": "isValid",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Commission",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7423,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.AddressSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "AddressSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7426,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.BooleanSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "BooleanSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7429,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.Bytes32Slot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Bytes32Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7432,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.Uint256Slot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Uint256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7435,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.StringSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "StringSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7438,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.BytesSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "structName": "BytesSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 2278,
                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                        "containingContract": "LibShare",
                        "structMembers": [
                            {
                                "name": "account",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Share",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 368,
                        "canonicalId": "contracts/CollectionFactory.sol|CollectionFactory.CollectionMeta",
                        "containingContract": "CollectionFactory",
                        "structMembers": [
                            {
                                "name": "name",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "symbol",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "URI",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "contractAddress",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "owner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "description",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "CollectionMeta",
                        "type": "UserDefinedStruct"
                    }
                ],
                "sourceBytes": {
                    "begin": 144,
                    "size": 1120
                },
                "srcmap": "144:1120:3:-:0;;;;;;;;;-1:-1:-1;144:1120:3;;:::i;:::-;-1:-1:-1;144:1120:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;742:520;1014:32;1056:161;742:520;;;1014:32;:::i;:::-;144:1120;;;;;1056:161;;;;;;742:520;1056:161;144:1120;;1056:161;;;;;;;144:1120;1056:161;;;;;;:::i;:::-;;;;;;;;;742:520;1056:161;;742:520;1227:28;742:520;:::o;1056:161::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;144:1120;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;973:759:36;1101:558;973:759;1101:558;;;;;;;;;;;;;;;;;;144:1120:3;1668:57:36;144:1120:3;;;1676:22:36;;1668:57;:::i",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [],
        "primary_contract": "LibCollection",
        "primary_contract_address": "00000000ce4604a0000000000000000000000003",
        "prototypeFor": [],
        "sdc_name": "CollectionMethods.sol_0_LibCollection",
        "sourceDir": ".",
        "srclist": {
            "0": "contracts/AconomyERC2771Context.sol",
            "1": "contracts/CollectionFactory.sol",
            "2": "contracts/CollectionMethods.sol",
            "3": "contracts/Libraries/LibCollection.sol",
            "4": "contracts/piNFT.sol",
            "5": "contracts/piNFTMethods.sol",
            "6": "contracts/utils/LibShare.sol",
            "7": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
            "8": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC165Upgradeable.sol",
            "9": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
            "10": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol",
            "11": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC721Upgradeable.sol",
            "12": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
            "13": "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
            "14": "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
            "15": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
            "16": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
            "17": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
            "18": "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
            "19": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
            "20": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
            "21": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
            "22": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
            "23": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
            "24": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
            "25": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
            "26": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
            "27": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
            "28": "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
            "29": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
            "30": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
            "31": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
            "32": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
            "33": "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
            "34": "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol",
            "35": "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
            "36": "node_modules/@openzeppelin/contracts/proxy/Clones.sol",
            "37": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
            "38": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
            "39": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
            "40": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
            "41": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
            "42": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
            "43": "node_modules/@openzeppelin/contracts/utils/Address.sol",
            "44": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "45": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
            "46": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
            "47": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
            "48": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
            "49": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
            "50": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    },
    "LibShare_00000000ce4604a0000000000000000000000006": {
        "contracts": [
            {
                "address": "00000000ce4604a0000000000000000000000006",
                "allMethods": [
                    {
                        "contractName": "LibShare",
                        "fullArgs": [
                            {
                                "location": "storage",
                                "typeDesc": {
                                    "astId": 2278,
                                    "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                    "containingContract": "LibShare",
                                    "structMembers": [
                                        {
                                            "name": "account",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "primitiveName": "uint96",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Share",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": true,
                        "name": "setCommission",
                        "notpayable": true,
                        "originalFile": "contracts/utils/LibShare.sol",
                        "paramNames": [
                            "_setShare",
                            "_commission"
                        ],
                        "returns": [],
                        "sighash": "87ebb9b5",
                        "sourceBytes": {
                            "begin": 390,
                            "size": 210
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    }
                ],
                "bytecode": "608080604052600436101561001a575b5061001861007b565b005b60003560e01c6387ebb9b51461002f5761000f565b600090307f00000000000000000000000000000000000000000000000000000000000000001461006e575b61006c610066366100a7565b906101b5565bf35b61007661007b565b61005a565b50600080fd5b6bffffffffffffffffffffffff8116141561007b57565b602435906100a582610081565b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60409101126100e1575b600435906100de610098565b90565b6100e961007b565b6100d2565b1561007b57565b7fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161790565b9073ffffffffffffffffffffffffffffffffffffffff610155911682546100f5565b9055565b907fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9160a01b1691161790565b906bffffffffffffffffffffffff61015591168254610159565b906100a5916101d66113246bffffffffffffffffffffffff841611156100ee565b6101e03382610133565b61019b56fea3646970667358221220bcdd61fedc3e0c1e1eac7f49ecba0fb46881eaa0ef4e06d3b53497fb1b60cedc6c6578706572696d656e74616cf564736f6c634300080b0041",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": true,
                    "optimizerRuns": 1000000,
                    "type": "SolcParameters",
                    "viaIR": true
                },
                "compilerVersion": "0.8.11",
                "constructorBytecode": "6080806040523461001d575b61022990816100318239308160350152f35b61002561002a565b61000b565b50600080fdfe608080604052600436101561001a575b5061001861007b565b005b60003560e01c6387ebb9b51461002f5761000f565b600090307f00000000000000000000000000000000000000000000000000000000000000001461006e575b61006c610066366100a7565b906101b5565bf35b61007661007b565b61005a565b50600080fd5b6bffffffffffffffffffffffff8116141561007b57565b602435906100a582610081565b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60409101126100e1575b600435906100de610098565b90565b6100e961007b565b6100d2565b1561007b57565b7fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161790565b9073ffffffffffffffffffffffffffffffffffffffff610155911682546100f5565b9055565b907fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9160a01b1691161790565b906bffffffffffffffffffffffff61015591168254610159565b906100a5916101d66113246bffffffffffffffffffffffff841611156100ee565b6101e03382610133565b61019b56fea3646970667358221220bcdd61fedc3e0c1e1eac7f49ecba0fb46881eaa0ef4e06d3b53497fb1b60cedc6c6578706572696d656e74616cf564736f6c634300080b0041",
                "constructorSrcmap": "57:545:6:-:0;;;;;;;-1:-1:-1;57:545:6;;;;;;;;;;;;;;;:::i;:::-;;;;;;;",
                "file": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionMethods.sol",
                "immutables": [],
                "internalFunctions": {},
                "is_static_address": false,
                "lang": "Solidity",
                "methods": [
                    {
                        "contractName": "LibShare",
                        "fullArgs": [
                            {
                                "location": "storage",
                                "typeDesc": {
                                    "astId": 2278,
                                    "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                    "containingContract": "LibShare",
                                    "structMembers": [
                                        {
                                            "name": "account",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "primitiveName": "uint96",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Share",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": true,
                        "name": "setCommission",
                        "notpayable": true,
                        "originalFile": "contracts/utils/LibShare.sol",
                        "paramNames": [
                            "_setShare",
                            "_commission"
                        ],
                        "returns": [],
                        "sighash": "87ebb9b5",
                        "sourceBytes": {
                            "begin": 390,
                            "size": 210
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    }
                ],
                "name": "LibShare",
                "original_file": "contracts/utils/LibShare.sol",
                "solidityTypes": [
                    {
                        "astId": 2278,
                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                        "containingContract": "LibShare",
                        "structMembers": [
                            {
                                "name": "account",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Share",
                        "type": "UserDefinedStruct"
                    }
                ],
                "sourceBytes": {
                    "begin": 57,
                    "size": 545
                },
                "srcmap": "57:545:6:-:0;;;;;;;;;;-1:-1:-1;57:545:6;;;:::i;:::-;-1:-1:-1;57:545:6;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;390:210::-;;564:29;390:210;477:28;500:4;57:545;;;485:19;;477:28;:::i;:::-;515:39;543:10;515:39;;:::i;:::-;564:29;:::i",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [],
        "primary_contract": "LibShare",
        "primary_contract_address": "00000000ce4604a0000000000000000000000006",
        "prototypeFor": [],
        "sdc_name": "CollectionMethods.sol_0_LibShare",
        "sourceDir": ".",
        "srclist": {
            "0": "contracts/AconomyERC2771Context.sol",
            "1": "contracts/CollectionFactory.sol",
            "2": "contracts/CollectionMethods.sol",
            "3": "contracts/Libraries/LibCollection.sol",
            "4": "contracts/piNFT.sol",
            "5": "contracts/piNFTMethods.sol",
            "6": "contracts/utils/LibShare.sol",
            "7": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
            "8": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC165Upgradeable.sol",
            "9": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
            "10": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol",
            "11": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC721Upgradeable.sol",
            "12": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
            "13": "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
            "14": "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
            "15": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
            "16": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
            "17": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
            "18": "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
            "19": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
            "20": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
            "21": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
            "22": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
            "23": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
            "24": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
            "25": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
            "26": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
            "27": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
            "28": "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
            "29": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
            "30": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
            "31": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
            "32": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
            "33": "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
            "34": "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol",
            "35": "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
            "36": "node_modules/@openzeppelin/contracts/proxy/Clones.sol",
            "37": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
            "38": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
            "39": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
            "40": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
            "41": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
            "42": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
            "43": "node_modules/@openzeppelin/contracts/utils/Address.sol",
            "44": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "45": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
            "46": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
            "47": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
            "48": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
            "49": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
            "50": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    }
}