{
    "CollectionFactory_00000000ce4604a0000000000000000000000001": {
        "contracts": [
            {
                "address": "00000000ce4604a0000000000000000000000001",
                "allMethods": [
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "_authorizeUpgrade",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            ""
                        ],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 8593,
                            "size": 66
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "internal"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "addressToCollectionId",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "7788bff5",
                        "sourceBytes": {
                            "begin": 1442,
                            "size": 56
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "changeCollectionMethodImplementation",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "newCollectionMethods"
                        ],
                        "returns": [],
                        "sighash": "90abfd4b",
                        "sourceBytes": {
                            "begin": 3089,
                            "size": 172
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "collectionId",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3d26bb67",
                        "sourceBytes": {
                            "begin": 1611,
                            "size": 27
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "collections",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "fdbda0ec",
                        "sourceBytes": {
                            "begin": 1382,
                            "size": 53
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 2367,
                            "size": 53
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "astId": 601,
                                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                        "containingContract": "LibShare",
                                        "structMembers": [
                                            {
                                                "name": "account",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Share",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "createCollection",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_name",
                            "_symbol",
                            "_uri",
                            "_description",
                            "royalties"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "58f70c22",
                        "sourceBytes": {
                            "begin": 3681,
                            "size": 1004
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getCollectionRoyalties",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "astId": 601,
                                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                        "containingContract": "LibShare",
                                        "structMembers": [
                                            {
                                                "name": "account",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Share",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "sighash": "e1e9fce8",
                        "sourceBytes": {
                            "begin": 8409,
                            "size": 178
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionMethodAddress",
                            "_piNFTMethodsAddress"
                        ],
                        "returns": [],
                        "sighash": "485cc955",
                        "sourceBytes": {
                            "begin": 2426,
                            "size": 331
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 1441,
                            "size": 85
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "pause",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "8456cb59",
                        "sourceBytes": {
                            "begin": 2763,
                            "size": 61
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "paused",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "5c975abb",
                        "sourceBytes": {
                            "begin": 1858,
                            "size": 84
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "piNFTMethodsAddress",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e0177934",
                        "sourceBytes": {
                            "begin": 1681,
                            "size": 34
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "proxiableUUID",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "52d1902d",
                        "sourceBytes": {
                            "begin": 3006,
                            "size": 131
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 2064,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "royaltiesForCollection",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e65d6456",
                        "sourceBytes": {
                            "begin": 1538,
                            "size": 66
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCollectionDescription",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionId",
                            "_description"
                        ],
                        "returns": [],
                        "sighash": "cd4e8ae3",
                        "sourceBytes": {
                            "begin": 7699,
                            "size": 478
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCollectionName",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionId",
                            "_name"
                        ],
                        "returns": [],
                        "sighash": "c755379f",
                        "sourceBytes": {
                            "begin": 6476,
                            "size": 422
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCollectionSymbol",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionId",
                            "_symbol"
                        ],
                        "returns": [],
                        "sighash": "c3c3219d",
                        "sourceBytes": {
                            "begin": 7072,
                            "size": 438
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCollectionURI",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionId",
                            "_uri"
                        ],
                        "returns": [],
                        "sighash": "27f054aa",
                        "sourceBytes": {
                            "begin": 5903,
                            "size": 416
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "astId": 601,
                                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                        "containingContract": "LibShare",
                                        "structMembers": [
                                            {
                                                "name": "account",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Share",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setRoyaltiesForCollection",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionId",
                            "royalties"
                        ],
                        "returns": [],
                        "sighash": "88da3635",
                        "sourceBytes": {
                            "begin": 4875,
                            "size": 874
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 2314,
                            "size": 198
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "unpause",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "3f4ba83a",
                        "sourceBytes": {
                            "begin": 2830,
                            "size": 65
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeTo",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation"
                        ],
                        "returns": [],
                        "sighash": "3659cfe6",
                        "sourceBytes": {
                            "begin": 3387,
                            "size": 195
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeToAndCall",
                        "notpayable": false,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "4f1ef286",
                        "sourceBytes": {
                            "begin": 3901,
                            "size": 220
                        },
                        "stateMutability": "payable",
                        "visibility": "public"
                    }
                ],
                "bytecode": "",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": true,
                    "optimizerRuns": 1000000,
                    "type": "SolcParameters",
                    "viaIR": true
                },
                "compilerVersion": "0.8.11",
                "constructorBytecode": "60a0604052346200003c575b6200001562000052565b60405161379a90816200019c8239608051818181612bc501528181612d800152612e810152f35b620000466200004c565b6200000b565b50600080fd5b6200005c62000068565b6200006662000137565b565b30608052565b6027815260200190565b602066616c697a696e6760c81b917f496e697469616c697a61626c653a20636f6e747261637420697320696e69746981520152565b620000ba6040916200006e565b620000c58162000078565b0190565b6020620000da9181815201620000ad565b90565b15620000e557565b5060405162461bcd60e51b8152806200010160048201620000c9565b0390fd5b60ff191660ff1790565b6200011c60005462000105565b600055565b60ff9052565b9062000066602083019262000121565b60ff806000546200014e828260081c1615620000dd565b1614156200015857565b620001626200010f565b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860405180620001928162000127565b0390a16200006656fe604060808152600436101561001a575b5061001861051b565b005b6000803560e01c90816327f054aa146104f35781633659cfe6146104cc5781633d26bb671461049f5781633f4ba83a14610478578163485cc955146104505781634f1ef2861461043b57816352d1902d1461041157816358f70c22146103e05781635c975abb146103a8578163715018a6146103815781637788bff51461034c5781638456cb591461032557816388da3635146102fd5781638da5cb5b146102d057816390abfd4b146102a9578163c3c3219d14610281578163c755379f14610259578163cd4e8ae314610231578163e0177934146101f8578163e1e9fce8146101c3578163e65d64561461018b578163f2fde38b14610161575063fdbda0ec146101245761000f565b6101509034610154575b61013f61013a36610cc8565b611088565b939694959290925196879687611159565b0390f35b61015c61051b565b61012e565b9190503461017e575b61017b61017636610645565b612a69565b51f35b61018661051b565b61016a565b505061015090346101b6575b6101a96101a336610e36565b90610efa565b9290915192839283610f3f565b6101be61051b565b610197565b505061015090346101eb575b6101e06101db36610cc8565b6127ba565b905191829182610e25565b6101f361051b565b6101cf565b50506101509034610224575b61020d36610685565b610219610100546105e8565b905191829182610c5e565b61022c61051b565b610204565b9190503461024c575b61017b61024636610c6e565b906126ff565b61025461051b565b61023a565b91905034610274575b61017b61026e36610c6e565b9061257b565b61027c61051b565b610262565b9190503461029c575b61017b61029636610c6e565b90612640565b6102a461051b565b61028a565b919050346102c3575b61017b6102be36610645565b6115db565b6102cb61051b565b6102b2565b505061015090346102f0575b6102e536610685565b6102196033546105e8565b6102f861051b565b6102dc565b91905034610318575b61017b61031236610bdc565b9061214c565b61032061051b565b610306565b9190503461033f575b61033736610685565b61017b6115a3565b61034761051b565b61032e565b50506101509034610374575b61036961036436610645565b610bcb565b9051918291826106bf565b61037c61051b565b610358565b9190503461039b575b61039336610685565b61017b61297d565b6103a361051b565b61038a565b505061015090346103d3575b6103bd36610685565b6103c86065546111c7565b905191829182610b95565b6103db61051b565b6103b4565b50506101509034610404575b6103696103f836610a92565b949390939291926115e4565b61040c61051b565b6103ec565b5050610150903461042e575b61042636610685565b610369612bab565b61043661051b565b61041d565b91905061017b61044a36610904565b90612ec0565b9190503461046b575b61017b610465366106cf565b90611586565b61047361051b565b610459565b91905034610492575b61048a36610685565b61017b6115be565b61049a61051b565b610481565b505061015090346104bf575b6104b436610685565b61036960fe54610521565b6104c761051b565b6104ab565b919050346104e6575b61017b6104e136610645565b612e47565b6104ee61051b565b6104d5565b9190503461050e575b61017b6105083661057c565b91612454565b61051661051b565b6104fc565b50600080fd5b90565b9181601f8401121561056f575b82359167ffffffffffffffff8311610562575b60208381860195010111610555575b565b61055d61051b565b610553565b61056a61051b565b610544565b61057761051b565b610531565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126105db575b6105ca6004359260243567ffffffffffffffff81116105ce575b600401610524565b9091565b6105d661051b565b6105c2565b6105e361051b565b6105a8565b73ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8116141561051b57565b6004359061055382610601565b6024359061055382610601565b359061055382610601565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020910112610678575b610521610620565b61068061051b565b610670565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc600091011261055557565b6105219054610521565b9052565b60208101929161055391906106bb565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc604091011261070b575b610702610620565b9061052161062d565b61071361051b565b6106fa565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610765575b604052565b61076d610718565b610760565b60c0810190811067ffffffffffffffff82111761076557604052565b6060810190811067ffffffffffffffff82111761076557604052565b6020810190811067ffffffffffffffff82111761076557604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761076557604052565b6040519061055382610748565b6040519061055382610772565b604051906105538261078e565b60405190610553826107aa565b9061055360405192836107c6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111610885575b01160190565b61088d610718565b61087f565b90826000939282370152565b90610553919392936108b76108b283610849565b61083b565b94828652828201116108ce575b6020850190610892565b6108d661051b565b6108c4565b906105219181601f820112156108f7575b60208135910161089e565b6108ff61051b565b6108ec565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610964575b61052161093b610620565b9260243567ffffffffffffffff8111610957575b6004016108db565b61095f61051b565b61094f565b61096c61051b565b610930565b60209067ffffffffffffffff811161098b575b60051b0190565b610993610718565b610984565b6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff8116141561051b57565b3590610553826109a9565b91908260409103126109fe575b6109f760206109e5610807565b936109ef8161063a565b8552016109c0565b6020830152565b610a0661051b565b6109d8565b909291610a1a6108b285610971565b938085526020918286019160061b840193818511610a5c575b915b848310610a43575050505050565b83604091610a5184866109cb565b815201920191610a35565b610a6461051b565b610a33565b906105219181601f82011215610a85575b602081359101610a0b565b610a8d61051b565b610a7a565b9060a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610b7d575b60049167ffffffffffffffff610adf828535838111610b70575b86016108db565b93610af683602435848111610b63575b83016108db565b93610521610b1085604435868111610b56575b8501610524565b95909594610b2a82606435838111610b49575b87016108db565b94608435918211610b3c575b01610a69565b610b4461051b565b610b36565b610b5161051b565b610b23565b610b5e61051b565b610b09565b610b6b61051b565b610aef565b610b7861051b565b610ad8565b610b8561051b565b610abe565b151590565b15159052565b6020810192916105539190610b8f565b73ffffffffffffffffffffffffffffffffffffffff1660005260fc602052604060002090565b610bd761052191610ba5565b6106b1565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610c37575b6105216004359260243567ffffffffffffffff8111610c2a575b600401610a69565b610c3261051b565b610c22565b610c3f61051b565b610c08565b73ffffffffffffffffffffffffffffffffffffffff169052565b6020810192916105539190610c44565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112610cbb575b6105216004359260243567ffffffffffffffff8111610957576004016108db565b610cc361051b565b610c9a565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020910112610cf9575b60043590565b610d0161051b565b610cf3565b602e815260200190565b600d815260200190565b60208082520190565b6023815260200190565b601b815260200190565b6016815260200190565b602b815260200190565b6026815260200190565b6038815260200190565b602c815260200190565b6010815260200190565b6014815260200190565b6029815260200190565b602d815260200190565b601d815260200190565b60209181520190565b6bffffffffffffffffffffffff169052565b9060208061055393610dc9848251610c44565b0151910190610da4565b90610de081604093610db6565b0190565b610df081518093610d9b565b9160208092019160005b828110610e08575050505090565b9091929382610e1a6001928751610dd3565b950193929101610dfa565b906020610521928181520190610de4565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040910112610e6b575b6004359060243590565b610e7361051b565b610e61565b60005260fd602052604060002090565b60005260fb602052604060002090565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600052602060002090565b610ee6908054831015610eed575b610ec8565b0190600090565b610ef5610e98565b610ee1565b610f0390610e78565b908154811015610f3757610f1691610ed3565b50549073ffffffffffffffffffffffffffffffffffffffff82169160a01c90565b505050600080fd5b916020610553929493610f56816040810197610c44565b0190610da4565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b90600182811c92168015610faf575b6020831014610fa757565b61055d610f5d565b91607f1691610f9c565b90600092918054610fd3610fcc82610f8d565b8094610d9b565b9160019180831690811561102c5750600114610ff0575b50505050565b610fff91949550929192610ec8565b926000935b82851061101957505050019038808080610fea565b8054858501526020909401938101611004565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001684525050506020019250389050808080610fea565b906105536110779260405193848092610fb9565b03836107c6565b61052190546105e8565b61109190610e88565b9061109b82611063565b916110a860018201611063565b916110b560028301611063565b916110c360038201546105e8565b9161052160056110d660048501546105e8565b9301611063565b918091926000905b8282106111035750116110f7575b5050565b600091015238806110f3565b915080602091830151818601520182916110e5565b601f61115061087f6020947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe094805193848093610d9b565b968791016110dd565b9261119c6111a79161118e6111b1956111806105219b999a9660c08a5260c08a0190611118565b9088820360208a0152611118565b908682036040880152611118565b956060850190610c44565b6080830190610c44565b60a0818403910152611118565b60081c60ff1690565b60ff1690565b60207f647920696e697469616c697a6564000000000000000000000000000000000000917f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181520152565b611223604091610d06565b610de0816111cd565b60206105219181815201611218565b1561124257565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152806112766004820161122c565b0390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690565b6112d260005461127a565b600055565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690565b6112d26000546112d7565b6112d2600054611300565b60019052565b90610553602083019261133b565b9061138c906000549261137960ff8560081c161580958196611406575b81156113dd575b5061123b565b836113826112c7565b6113d0575b61155c565b61139257565b61139a611330565b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498604051806113c881611341565b0390a1610553565b6113d8611325565b611387565b90506113ea303b15610b8a565b90816113f8575b5038611373565b6001915060ff1614386113f1565b600160ff821610915061136c565b7fffffffffffffffffffffffff00000000000000000000000000000000000000001690565b7fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161790565b73ffffffffffffffffffffffffffffffffffffffff611499911660ff54611439565b60ff55565b6114c273ffffffffffffffffffffffffffffffffffffffff61010092168254611439565b9055565b6114d1603354611414565b603355565b73ffffffffffffffffffffffffffffffffffffffff6114d19116603354611439565b6114c273ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc92168254611439565b9073ffffffffffffffffffffffffffffffffffffffff6114c291168254611439565b906115816105539261156c612892565b611574612afa565b61157c612ee3565b611477565b61149e565b906105539161134f565b61159861293f565b61055361055361300d565b610553611590565b6115b361293f565b610553610553613057565b6105536115ab565b610553906115d261293f565b61055390611477565b610553906115c6565b9061052195949392916115f5612faf565b6119fb565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611658570190565b6116606115fa565b610de0565b5090565b6116759060fe54611665565b60fe55565b906114c2908254611665565b519061055382610601565b6020816105219303126116a4575b611686565b6116ac61051b565b61169f565b959492936116ea610553956116d96080956116cf8b6116f897610c44565b60208b0190610c44565b60a060408a015260a0890190611118565b908782036060890152611118565b940190610c44565b506040513d6000823e3d90fd5b52565b9073ffffffffffffffffffffffffffffffffffffffff169052565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b50600090565b6114c2815461175b565b61055390611761565b81811061177f575050565b8061178b60019261176b565b01611774565b9190601f81116117a1575b505050565b6117ad6117cd93610ec8565b906020601f840160051c830193106117d5575b601f0160051c0190611774565b38808061179c565b90915081906117c0565b919091825167ffffffffffffffff8111611905575b611808816118028454610f8d565b84611791565b602080601f8311600114611861575081929394600092611856575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c1916179055565b015190503880611823565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe083169561188f85610ec8565b926000905b8882106118ed575050836001959697106118b6575b505050811b019055610553565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690553880806118a9565b80600185968294968601518155019501930190611894565b61190d610718565b6117f4565b90610553916117df565b600560a06105539361192f815185611912565b611940602082015160018601611912565b611951604082015160028601611912565b61196a61196160608301516105e8565b6003860161153a565b61198361197a60808301516105e8565b6004860161153a565b01519101611912565b906105539161191c565b918161087f816119c97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095601f95610d9b565b8096610892565b6119ee61052195936119e4836060956106bb565b6020830190610c44565b8160408201520191611996565b9092611a88927fb0b7b214963f2e16da9cf6ed5851757dfed306875edf1d59e030881102ef24ef959796611a38611a3360fe54610521565b61162a565b93611a4285611669565b84996020611a5160ff546105e8565b604051809981927fd7d5c6f40000000000000000000000000000000000000000000000000000000083528c873033600487016116b1565b0381e000000000ce4604a00000000000000000000000035af4968715611b8d575b600097611b53575b50611b429291611b1c611b2a92611ae2611b4e999a9b611ad9611ad2610814565b958661170d565b6020850161170d565b611af9611af0368a8a61089e565b6040850161170d565b611b068b60608501611710565b611b133360808501611710565b60a0830161170d565b611b2588610e88565b61198c565b611b3c86611b3789610ba5565b61167a565b8561214c565b604051948594856119d0565b0390a1565b611b4e96975091611b1c611b2a92611ae2611b7f611b429796611b763d826107c6565b3d810190611691565b9a9950509250509192611ab1565b611b95611700565b611aa9565b9061055391611ba7612faf565b611c2f565b7f4e6f7420746865206f776e6572000000000000000000000000000000000000009052565b611bdc602091610d10565b610de081611bac565b60206105219181815201611bd1565b15611bfb57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061127660048201611be5565b9061055391611c68611c4b6004611c4584610e88565b0161107e565b73ffffffffffffffffffffffffffffffffffffffff163314611bf4565b612030565b7f41746d6f737420313020726f79616c746965732063616e2062652061646465649052565b611c9d602091610d1a565b610de081611c6d565b60206105219181815201611c92565b15611cbc57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061127660048201611ca6565b60009055565b61055390611cf0565b818110611d0a575050565b80611d16600192611cf6565b01611cff565b9080611d26575050565b611d32611d3b92610ec8565b90810190611cff565b38806110f3565b80546000825561055391611d1c565b61055390611d42565b61055390611d51565b6020918151811015611d78575b60051b010190565b611d80610e98565b611d70565b61052190516105e8565b60207f656e740000000000000000000000000000000000000000000000000000000000917f526f79616c747920726563697069656e742073686f756c64206265207072657381520152565b611de5604091610d23565b610de081611d8f565b60206105219181815201611dda565b15611e0457565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061127660048201611dee565b6105219051610998565b7f526f79616c74792076616c75652073686f756c64206265203e203000000000009052565b611e72602091610d2d565b610de081611e42565b60206105219181815201611e67565b15611e9157565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061127660048201611e7b565b907fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9160a01b1691161790565b906bffffffffffffffffffffffff6114c291168254611ec5565b611f44602061055393611f3d611f3782516105e8565b8561153a565b0151610998565b90611f07565b6105539291611f59575b611f21565b611f6161172b565b611f54565b90611f8e6105539280549068010000000000000000821015611f94575b600182018155610ed3565b90611f4a565b611f9c610718565b611f83565b81198111611658570190565b7f53756d206f6620526f79616c74696573203e20343925000000000000000000009052565b611fdd602091610d37565b610de081611fad565b60206105219181815201611fd2565b15611ffc57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061127660048201611fe6565b9190612040600a82511115611cb5565b61205161204c84610e78565b611d5a565b600090815b6120608251610521565b831015612103576120f76120fd9161209361208c6120876120818888611d63565b51611d85565b6105e8565b1515611dfd565b6120f16120b660206120c26120bb6120b6836120af8c8c611d63565b5101611e38565b610998565b1515611e8a565b6120e76120d66120d18c610e78565b610521565b6120e08a8a611d63565b5190611f66565b6120af8888611d63565b90611fa1565b9261162a565b91612056565b7f7bab2fcc3e58a877ef95c248717265feca4faf342b0d25e060a591b2d67fc5bb92509061213b611324612147939695961115611ff5565b60405191829182610e25565b0390a2565b9061055391611b9a565b906105539291612164612faf565b90610553929161217b611c4b6004611c4584610e88565b612374565b8183610de092949394610892565b60009291815461219d81610f8d565b926001918083169081156121f457506001146121b95750505050565b6121c7919293949550610ec8565b906000915b8483106121e157505050019038808080610fea565b81816020925485870152019201916121cc565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016845250505001915038808080610fea565b90929167ffffffffffffffff811161233e575b612248816118028454610f8d565b6000601f821160011461229e57819293946000926122935750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c1916179055565b013590503880611823565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08216946122cb84610ec8565b91805b8781106123265750836001959697106122ee57505050811b019055610553565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88560031b161c199101351690553880806118a9565b909260206001819286860135815501940191016122ce565b612346610718565b61223a565b906105539291612227565b8061236760409261052196946106bb565b8160208201520191611996565b6040516123f7602082018261238a828888612180565b03926123bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0948581018352826107c6565b5190209160026123cb85610e88565b01906123ef60405191826123e360208201809661218e565b039081018352826107c6565b519020610521565b141561240257505050565b6124498361243d7f1e7a348533f0080dc51cd7ce31024dc099e434e0d9f1019b594f99ecf9289e0a9585600261243787610e88565b0161234b565b60405193849384612356565b0390a138808061179c565b906105539291612156565b906105539161246c612faf565b9061055391612482611c4b6004611c4584610e88565b6124b8565b90610de0602092828151948592016110dd565b806124ab60409261052195946106bb565b8160208201520190611118565b9060405161252460208201826124ce8286612487565b03926125007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0948581018352826107c6565b5190209161250d85610e88565b906123ef60405191826123e360208201809661218e565b141561252e575050565b816125628261255d7f8ccbae9e1ad475ea58990cd573fe41127da4082c99f43ebb69c1c134f51f1ff595610e88565b611912565b6125716040519283928361249a565b0390a138806110f3565b906105539161245f565b9061055391612592612faf565b90610553916125a8611c4b6004611c4584610e88565b906040516125ff60208201826125be8286612487565b03926125f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0948581018352826107c6565b5190209160016123cb86610e88565b1415612609575050565b8161256282600161263a7f532245a529e5e3ad856e316ec6aff407ed6f081c15e3a0f296a2e7c809b928ad96610e88565b01611912565b9061055391612585565b9061055391612657612faf565b906105539161266d611c4b6004611c4584610e88565b906040516126c460208201826126838286612487565b03926126b57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0948581018352826107c6565b5190209160056123cb86610e88565b14156126ce575050565b8161256282600561263a7ff6b14ad7ac41b7fb268432ff9325dec3d00b47cc932a71964fec300206c5775296610e88565b906105539161264a565b906127166108b283610971565b918252565b906bffffffffffffffffffffffff169052565b9061055361273a610807565b925461275c73ffffffffffffffffffffffffffffffffffffffff821685611710565b60a01c6020840161271b565b90815461277481612709565b92602061278381860192610ec8565b6000925b848410612795575050505050565b60018381926127a38561272e565b815201920193019290612787565b61052190612768565b6127c661052191610e78565b6127b1565b60207f6e697469616c697a696e67000000000000000000000000000000000000000000917f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981520152565b612821604091610d41565b610de0816127cb565b60206105219181815201612816565b1561284057565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152806112766004820161282a565b6128876128826000546111be565b612839565b6105536105536128b4565b610553612874565b6128a86128826000546111be565b61055361055333612aaf565b61055361289a565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729052565b6128ec602091610d1a565b610de0816128bc565b602061052191818152016128e1565b1561290b57565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280611276600482016128f5565b61055361294d6033546105e8565b73ffffffffffffffffffffffffffffffffffffffff163314612904565b61297261293f565b610553610553612a72565b61055361296a565b6105539061299161293f565b612a3f565b60207f6464726573730000000000000000000000000000000000000000000000000000917f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181520152565b6129ec604091610d4b565b610de081612996565b602061052191818152016129e1565b15612a0b57565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280611276600482016129f5565b61055390612a6473ffffffffffffffffffffffffffffffffffffffff82161515612a04565b612aaf565b61055390612985565b6000612a7f6033546105e8565b612a876114c6565b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e082604051a3565b612aba6033546105e8565b612ac3826114d6565b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b6105536128826000546111be565b610553612aec565b60207f6c6564207468726f7567682064656c656761746563616c6c0000000000000000917f555550535570677261646561626c653a206d757374206e6f742062652063616c81520152565b612b58604091610d55565b610de081612b02565b60206105219181815201612b4d565b15612b7757565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061127660048201612b61565b612bec73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163014612b70565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b60207f64656c656761746563616c6c0000000000000000000000000000000000000000917f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682081520152565b612c66604091610d5f565b610de081612c10565b60206105219181815201612c5b565b15612c8557565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061127660048201612c6f565b60207f6163746976652070726f78790000000000000000000000000000000000000000917f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682081520152565b612d0f604091610d5f565b610de081612cb9565b60206105219181815201612d04565b15612d2e57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061127660048201612d18565b61055390612ddf73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016612dac81301415612c7e565b612dd96120877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546105e8565b14612d27565b612e2c565b612dec610821565b9060278252565b612dfb61082e565b9060008252565b906127166108b283610849565b600090369037565b612e1f612df3565b9061055360208301612e0f565b61055390612e3981612e59565b612e41612e17565b90613229565b61055390612d62565b5061055361293f565b61055390612e50565b9061055391612ead73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016612dac81301415612c7e565b9061055391612ebb81612e59565b613341565b9061055391612e62565b612ed86128826000546111be565b610553610553612f24565b610553612eca565b612ef96128826000546111be565b610553612f1c565b612f0c6065546112a2565b606555565b612f0c60655461127a565b610553612f01565b610553612eeb565b7f5061757361626c653a20706175736564000000000000000000000000000000009052565b612f5c602091610d69565b610de081612f2c565b60206105219181815201612f51565b15612f7b57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061127660048201612f65565b610553612fc6612fc06065546111c7565b15610b8a565b612f74565b612fd3612faf565b610553612fde612f11565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25860405180611b4e3382610c5e565b610553612fcb565b61301d6130e2565b610553613028612f01565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa60405180611b4e3382610c5e565b610553613015565b7f5061757361626c653a206e6f74207061757365640000000000000000000000009052565b61308f602091610d73565b610de08161305f565b60206105219181815201613084565b156130ae57565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061127660048201613098565b6105536130f06065546111c7565b6130a7565b90816020910312613105575b5190565b61310d61051b565b613101565b60207f6961626c65555549440000000000000000000000000000000000000000000000917f45524331393637557067726164653a20756e737570706f727465642070726f7881520152565b613168604091610d7d565b610de081613112565b6020610521918181520161315d565b1561318757565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081528061127660048201613171565b60207f6f6e206973206e6f742055555053000000000000000000000000000000000000917f45524331393637557067726164653a206e657720696d706c656d656e7461746981520152565b613211604091610d06565b610de0816131bb565b60206105219181815201613206565b906132547f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143546111c7565b156132635750610553906134f9565b604051917f52d1902d00000000000000000000000000000000000000000000000000000000835260208360048173ffffffffffffffffffffffffffffffffffffffff85165afa60009381613321575b506132ee57505050506040517f08c379a0000000000000000000000000000000000000000000000000000000008152806112766004820161321a565b61331c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61055d9414613180565b61350e565b61333a9194506133313d826107c6565b3d8101906130f5565b92386132b2565b9061336c7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143546111c7565b1561337b5750610553906134f9565b604051917f52d1902d00000000000000000000000000000000000000000000000000000000835260208360048173ffffffffffffffffffffffffffffffffffffffff85165afa60009381613439575b5061340657505050506040517f08c379a0000000000000000000000000000000000000000000000000000000008152806112766004820161321a565b6134347f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61055d9414613180565b61354c565b6134499194506133313d826107c6565b92386133ca565b60207f6f74206120636f6e747261637400000000000000000000000000000000000000917f455243313936373a206e657720696d706c656d656e746174696f6e206973206e81520152565b6134a6604091610d87565b610de081613450565b6020610521918181520161349b565b156134c557565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280611276600482016134af565b61055390613509813b15156134be565b6114f8565b6135178161356f565b815115801590613544575b61352a575050565b61353c916135366135ec565b91613623565b5038806110f3565b506000613522565b6135558161356f565b8151158015906135675761352a575050565b506001613522565b613578816134f9565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b6000604051a2565b60207f206661696c656400000000000000000000000000000000000000000000000000917f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c81520152565b6135f4612de4565b90610553602083016135a1565b3d1561361b576136103d612e02565b903d6000602084013e565b606090610553565b6000806105219493602081519101845af461363c613601565b916136c5565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000009052565b613672602091610d91565b610de081613642565b60206105219181815201613667565b1561369157565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152806112766004820161367b565b9192606091156136ee5750508151156136dc575090565b6136e8903b151561368a565b38611665565b909392610553925061370c565b906020610521928181520190611118565b80519092501561371f5750805190602001fd5b61127691506040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352600483016136fb56fea3646970667358221220850d936ddbef130d2f3a7a31a3a4a471ed04a461868b73e83e7c73c2a16e45d06c6578706572696d656e74616cf564736f6c634300080b0041",
                "constructorSrcmap": "551:8110:1:-:0;;;;;;-1:-1:-1;551:8110:1;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2367:53;;;:::i;:::-;;;:::i;:::-;:::o;928:3965:16:-;1332:4;1324:13;;928:3965::o;551:8110:1:-;;;;;;;:::o;:::-;;-1:-1:-1;;;551:8110:1;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;-1:-1:-1;551:8110:1;;-1:-1:-1;;;551:8110:1;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;551:8110:1;;;;:::o;:::-;;6007:13:15;551:8110:1;;:::i;:::-;6007:13:15;551:8110:1;:::o;:::-;;;;:::o;:::-;;;;;;;;:::i;5939:280:15:-;551:8110:1;;6007:13:15;551:8110:1;5998:66:15;551:8110:1;;;;;6006:14:15;5998:66;:::i;:::-;551:8110:1;6078:31:15;;6074:139;;5939:280::o;6074:139::-;6125:30;;:::i;:::-;6174:28;551:8110:1;;6174:28:15;;;;:::i;:::-;;;;6074:139;",
                "file": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol",
                "immutables": [
                    {
                        "length": 32,
                        "offset": 11205,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    },
                    {
                        "length": 32,
                        "offset": 11648,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    },
                    {
                        "length": 32,
                        "offset": 11905,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    }
                ],
                "internalFunctions": {},
                "is_static_address": false,
                "lang": "Solidity",
                "methods": [
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 2367,
                            "size": 53
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeToAndCall",
                        "notpayable": false,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "4f1ef286",
                        "sourceBytes": {
                            "begin": 3901,
                            "size": 220
                        },
                        "stateMutability": "payable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 2314,
                            "size": 198
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCollectionSymbol",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionId",
                            "_symbol"
                        ],
                        "returns": [],
                        "sighash": "c3c3219d",
                        "sourceBytes": {
                            "begin": 7072,
                            "size": 438
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCollectionName",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionId",
                            "_name"
                        ],
                        "returns": [],
                        "sighash": "c755379f",
                        "sourceBytes": {
                            "begin": 6476,
                            "size": 422
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "astId": 601,
                                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                        "containingContract": "LibShare",
                                        "structMembers": [
                                            {
                                                "name": "account",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Share",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "createCollection",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_name",
                            "_symbol",
                            "_uri",
                            "_description",
                            "royalties"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "58f70c22",
                        "sourceBytes": {
                            "begin": 3681,
                            "size": 1004
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 2064,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "calldata",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCollectionURI",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionId",
                            "_uri"
                        ],
                        "returns": [],
                        "sighash": "27f054aa",
                        "sourceBytes": {
                            "begin": 5903,
                            "size": 416
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "proxiableUUID",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "52d1902d",
                        "sourceBytes": {
                            "begin": 3006,
                            "size": 131
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "piNFTMethodsAddress",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e0177934",
                        "sourceBytes": {
                            "begin": 1681,
                            "size": 34
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "astId": 601,
                                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                        "containingContract": "LibShare",
                                        "structMembers": [
                                            {
                                                "name": "account",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Share",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setRoyaltiesForCollection",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionId",
                            "royalties"
                        ],
                        "returns": [],
                        "sighash": "88da3635",
                        "sourceBytes": {
                            "begin": 4875,
                            "size": 874
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "unpause",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "3f4ba83a",
                        "sourceBytes": {
                            "begin": 2830,
                            "size": 65
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "paused",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "5c975abb",
                        "sourceBytes": {
                            "begin": 1858,
                            "size": 84
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "changeCollectionMethodImplementation",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "newCollectionMethods"
                        ],
                        "returns": [],
                        "sighash": "90abfd4b",
                        "sourceBytes": {
                            "begin": 3089,
                            "size": 172
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionMethodAddress",
                            "_piNFTMethodsAddress"
                        ],
                        "returns": [],
                        "sighash": "485cc955",
                        "sourceBytes": {
                            "begin": 2426,
                            "size": 331
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "royaltiesForCollection",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e65d6456",
                        "sourceBytes": {
                            "begin": 1538,
                            "size": 66
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "pause",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "8456cb59",
                        "sourceBytes": {
                            "begin": 2763,
                            "size": 61
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 1441,
                            "size": 85
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setCollectionDescription",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionId",
                            "_description"
                        ],
                        "returns": [],
                        "sighash": "cd4e8ae3",
                        "sourceBytes": {
                            "begin": 7699,
                            "size": 478
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeTo",
                        "notpayable": true,
                        "originalFile": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation"
                        ],
                        "returns": [],
                        "sighash": "3659cfe6",
                        "sourceBytes": {
                            "begin": 3387,
                            "size": 195
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "collectionId",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3d26bb67",
                        "sourceBytes": {
                            "begin": 1611,
                            "size": 27
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getCollectionRoyalties",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [
                            "_collectionId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "astId": 601,
                                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                        "containingContract": "LibShare",
                                        "structMembers": [
                                            {
                                                "name": "account",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Share",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "sighash": "e1e9fce8",
                        "sourceBytes": {
                            "begin": 8409,
                            "size": 178
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "collections",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "fdbda0ec",
                        "sourceBytes": {
                            "begin": 1382,
                            "size": 53
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "CollectionFactory",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "addressToCollectionId",
                        "notpayable": true,
                        "originalFile": "contracts/CollectionFactory.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "7788bff5",
                        "sourceBytes": {
                            "begin": 1442,
                            "size": 56
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    }
                ],
                "name": "CollectionFactory",
                "original_file": "contracts/CollectionFactory.sol",
                "solidityTypes": [
                    {
                        "astId": 32,
                        "canonicalId": "contracts/CollectionFactory.sol|CollectionFactory.CollectionMeta",
                        "containingContract": "CollectionFactory",
                        "structMembers": [
                            {
                                "name": "name",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "symbol",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "URI",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "contractAddress",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "owner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "description",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "CollectionMeta",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 601,
                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                        "containingContract": "LibShare",
                        "structMembers": [
                            {
                                "name": "account",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Share",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 9289,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol|MathUpgradeable.Rounding",
                        "containingContract": "MathUpgradeable",
                        "enumMembers": [
                            {
                                "name": "Down"
                            },
                            {
                                "name": "Up"
                            },
                            {
                                "name": "Zero"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 8000,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                        "containingContract": "Math",
                        "enumMembers": [
                            {
                                "name": "Down"
                            },
                            {
                                "name": "Up"
                            },
                            {
                                "name": "Zero"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 3323,
                        "canonicalId": "contracts/piNFTMethods.sol|piNFTMethods.Commission",
                        "containingContract": "piNFTMethods",
                        "structMembers": [
                            {
                                "name": "commission",
                                "type": {
                                    "astId": 601,
                                    "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                    "containingContract": "LibShare",
                                    "structMembers": [
                                        {
                                            "name": "account",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "primitiveName": "uint96",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Share",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "name": "isValid",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Commission",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 1268,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Counters.sol|Counters.Counter",
                        "containingContract": "Counters",
                        "structMembers": [
                            {
                                "name": "_value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Counter",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5258,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.AddressSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "AddressSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5261,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.BooleanSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "BooleanSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5264,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.Bytes32Slot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Bytes32Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5267,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.Uint256Slot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Uint256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5270,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.StringSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "StringSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5273,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.BytesSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "structName": "BytesSlot",
                        "type": "UserDefinedStruct"
                    }
                ],
                "sourceBytes": {
                    "begin": 551,
                    "size": 8110
                },
                "srcmap": "551:8110:1:-:0;;;;;;;;;;-1:-1:-1;551:8110:1;;;:::i;:::-;-1:-1:-1;551:8110:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;1681:34;551:8110;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;1513:6:7;551:8110:1;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;1928:7:17;551:8110:1;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;1611:27;551:8110;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;1442:56;551:8110;;;;;;:::o;1442:56::-;;;;;:::i;:::-;;:::i;551:8110::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;971:66:13;551:8110:1;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;1538:66;551:8110;;;;;;:::o;:::-;;;1382:53;551:8110;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;;1538:66;;;;:::i;:::-;551:8110;;;1538:66;;;;;;;;:::i;:::-;551:8110;;;;;;;;;1538:66;:::o;:::-;;;;;;;551:8110;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;551:8110:1;;;-1:-1:-1;551:8110:1;;-1:-1:-1;551:8110:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;1382:53::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;551:8110;1382:53;;;551:8110;;:::i;:::-;1382:53;;;551:8110;1382:53;;;551:8110;;:::i;:::-;1382:53;;;:::i;551:8110::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;3302:13:15;551:8110:1;;:::i;:::-;3302:13:15;551:8110:1;:::o;:::-;;;;;;:::o;:::-;;;;:::o;:::-;;3302:13:15;551:8110:1;;:::i;:::-;;3302:13:15;551:8110:1;;:::i;:::-;3551:1:15;551:8110:1;;:::o;:::-;;;;;;;;:::i;3246:506:15:-;;3636:1;3246:506;3302:13;551:8110:1;;3325:201:15;551:8110:1;;;;;3301:14:15;3347:34;;;;;;3246:506;3346:108;;;;3246:506;3325:201;;:::i;:::-;3536:16;;;:::i;:::-;3562:65;;3246:506;3636:1;:::i;:::-;3647:99;;3246:506::o;3647:99::-;3681:21;;:::i;:::-;3721:14;551:8110:1;;3721:14:15;;;;:::i;:::-;;;;3647:99;;3562:65;3596:20;;:::i;:::-;3562:65;;3346:108;3426:4;;3387:45;3426:4;1713:19:25;:23;3387:45:15;:::i;:::-;:66;;;;3346:108;;;;;3387:66;3452:1;551:8110:1;;;;3436:17:15;3387:66;;;3347:34;3380:1;551:8110:1;;;3365:16:15;;-1:-1:-1;3347:34:15;;551:8110:1;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;2648:50;551:8110;;:::i;:::-;2648:50;551:8110;:::o;:::-;;;2708:42;551:8110;;;;;:::i;:::-;;;:::o;:::-;;2758:6:7;551:8110:1;;:::i;:::-;2758:6:7;551:8110:1;:::o;:::-;;;;;2758:6:7;551:8110:1;;:::i;:::-;;;1312:66:13;551:8110:1;;;;;:::i;:::-;;;;;;;;;:::i;2426:331::-;;2648:50;2708:42;2426:331;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;2648:50;:::i;:::-;2708:42;:::i;2426:331::-;;;;;:::i;1303:62:7:-;;;:::i;:::-;1357:1;2763:61:1;;:::i;:::-;;;:::i;1303:62:7:-;;;:::i;:::-;1357:1;2830:65:1;;:::i;:::-;;;:::i;1303:62:7:-;1357:1;1303:62;;;:::i;:::-;3208:46:1;3089:172;3208:46;:::i;3089:172::-;;;;:::i;1447:72:17:-;;3681:1004:1;1447:72:17;;;;;;;:::i;:::-;3681:1004:1;:::i;551:8110::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;:::o;:::-;;;3961:14;551:8110;;:::i;:::-;3961:14;551:8110;:::o;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;551:8110:1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;551:8110:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;3681:1004::-;;;4050:175;3681:1004;4621:57;3681:1004;;;3961:14;551:8110;3961:14;551:8110;;:::i;:::-;3961:14;:::i;:::-;;;;;:::i;:::-;3945:30;551:8110;4050:175;551:8110;4192:23;551:8110;;:::i;:::-;;;4050:175;;;;551:8110;4050:175;;4133:4;;;4101:10;4050:175;;;;:::i;:::-;;:13;;:175;;;;;;;3681:1004;-1:-1:-1;4050:175:1;;;3681:1004;551:8110;4595:9;551:8110;;4268:163;4442:36;551:8110;4268:163;4621:57;551:8110;;;4268:163;551:8110;;:::i;:::-;4268:163;;;:::i;:::-;4050:175;4268:163;;;:::i;:::-;;551:8110;;;;;:::i;:::-;;4268:163;;;:::i;:::-;;;;;;;:::i;:::-;;4101:10;4268:163;;;;:::i;:::-;;;;;:::i;:::-;4442:26;;;:::i;:::-;:36;:::i;:::-;4488:56;:40;;;;:::i;:::-;:56;:::i;:::-;4595:9;;:::i;:::-;551:8110;;4621:57;;;;;:::i;:::-;;;;3681:1004::o;4050:175::-;4621:57;4050:175;;;;4268:163;4442:36;4050:175;4268:163;4050:175;4595:9;4050:175;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;1447:72:17;;1511:1;1447:72;;;:::i;:::-;1511:1;:::i;551:8110:1:-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;2901:182::-;;3075:1;2901:182;2959:106;2980:32;;:26;;;:::i;:::-;:32;;:::i;:::-;551:8110;;3016:10;2980:46;2959:106;:::i;:::-;3075:1;:::i;551:8110::-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;4875:874::-;;;5052:67;5080:2;551:8110;;5060:22;;5052:67;:::i;:::-;5129:44;5136:37;;;:::i;:::-;5129:44;:::i;:::-;;5222:13;;5259:3;5237:20;551:8110;;5237:20;:::i;:::-;;;;;;5569:34;5259:3;5303:12;5278:130;5303:36;:20;:12;;;;:::i;:::-;;:20;:::i;:::-;:36;:::i;:::-;;;5278:130;:::i;:::-;5569:34;5585:18;5430;5422:63;5430:23;:18;:12;;;;;:::i;:::-;;:18;;:::i;:::-;:23;:::i;:::-;;;5422:63;:::i;:::-;5499:56;:42;:37;;;:::i;:::-;:42;:::i;:::-;5542:12;;;;:::i;:::-;;5499:56;;:::i;:::-;5585:12;;;;:::i;5569:34::-;;;:::i;:::-;5259:3;;:::i;:::-;5222:13;;;5237:20;5694:48;5237:20;;;5623:55;5647:4;5694:48;5237:20;;;;5631;;5623:55;:::i;:::-;551:8110;;5694:48;;;;;:::i;:::-;;;;4875:874::o;:::-;;;;;:::i;1447:72:17:-;;1511:1;1447:72;;;;:::i;:::-;2901:182:1;3075:1;2901:182;;2959:106;2980:32;;:26;;;:::i;2959:106::-;3075:1;:::i;551:8110::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;551:8110:1;;-1:-1:-1;551:8110:1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;551:8110:1;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;5903:416::-;551:8110;;6075:108;6085:22;;;551:8110;;;;;;:::i;:::-;6085:22;;;;;;;;;;;;:::i;:::-;551:8110;6075:33;;6151:26;:30;:26;;;:::i;:::-;:30;551:8110;6134:48;551:8110;;6134:48;;551:8110;6085:22;6134:48;;551:8110;;;:::i;:::-;6134:48;;;;;;;;:::i;:::-;551:8110;6124:59;;6075:108;:::i;:::-;;;6058:255;;5903:416;;;:::o;6058:255::-;6265:37;6208:26;:37;6265;6208:26;;6151:30;6208:26;;;:::i;:::-;:30;:37;:::i;:::-;551:8110;;6265:37;;;;;:::i;:::-;;;;6058:255;;;;;5903:416;;;;;;:::i;1447:72:17:-;;1511:1;1447:72;;;:::i;:::-;2901:182:1;3075:1;2901:182;2959:106;2980:32;;:26;;;:::i;2959:106::-;3075:1;:::i;551:8110::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;6476:422::-;;551:8110;;6648:110;6658:23;;;551:8110;;;;;:::i;:::-;6658:23;;;;;;;;;;;;:::i;:::-;551:8110;6648:34;;6725:26;;;;:::i;:::-;551:8110;6708:49;551:8110;;6708:49;;551:8110;6658:23;6708:49;;551:8110;;;:::i;6648:110::-;;;6631:261;;6476:422;;:::o;6631:261::-;6783:26;:39;:26;;6842:39;6783:26;;:::i;:::-;:39;:::i;:::-;6842;551:8110;;6842:39;;;;;:::i;:::-;;;;6631:261;;;;6476:422;;;;;:::i;1447:72:17:-;;1511:1;1447:72;;;:::i;:::-;2901:182:1;3075:1;2901:182;2959:106;2980:32;;:26;;;:::i;2959:106::-;7072:438;551:8110;;7248:114;7258:25;;;551:8110;;;;;:::i;:::-;7258:25;;;;;;;;;;;;:::i;:::-;551:8110;7248:36;;7327:26;:33;:26;;;:::i;7248:114::-;;;7231:273;;7072:438;;:::o;7231:273::-;7387:26;:43;:26;7327:33;7387:26;7450:43;7387:26;;:::i;:::-;:33;:43;:::i;7072:438::-;;;;;:::i;1447:72:17:-;;1511:1;1447:72;;;:::i;:::-;2901:182:1;3075:1;2901:182;2959:106;2980:32;;:26;;;:::i;2959:106::-;7699:478;551:8110;;7885:124;7895:30;;;551:8110;;;;;:::i;:::-;7895:30;;;;;;;;;;;;:::i;:::-;551:8110;7885:41;;7969:26;:38;:26;;;:::i;7885:124::-;;;7868:303;;7699:478;;:::o;7868:303::-;8034:26;:53;:26;7969:38;8034:26;8107:53;8034:26;;:::i;7699:478::-;;;;;:::i;551:8110::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;8409:178::-;8543:37;8536:44;8409:178;8543:37;:::i;:::-;8536:44;:::i;551:8110::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;5328:125:15:-;5366:69;551:8110:1;5374:13:15;551:8110:1;;:::i;:::-;5366:69:15;:::i;:::-;5445:1;1003:95:7;;:::i;:::-;;;:::i;5328:125:15:-;5366:69;551:8110:1;5374:13:15;551:8110:1;;:::i;5366:69:15:-;5445:1;1195:12:7;929:10:26;1195:12:7;:::i;1104:111::-;;;:::i;551:8110:1:-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;1599:130:7:-;1654:68;551:8110:1;1513:6:7;551:8110:1;;:::i;:::-;;;929:10:26;1662:23:7;1654:68;:::i;1303:62::-;;;:::i;:::-;1357:1;2147:10;;:::i;2064:101::-;;;:::i;1303:62::-;1357:1;1303:62;;;:::i;:::-;1357:1;:::i;551:8110:1:-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;2314:198:7:-;2496:8;2314:198;2394:73;551:8110:1;;;2402:22:7;;2394:73;:::i;:::-;2496:8;:::i;2314:198::-;;;;:::i;2666:187::-;551:8110:1;;2758:6:7;551:8110:1;;:::i;:::-;2774:17:7;;:::i;:::-;2806:40;551:8110:1;;;2806:40:7;2666:187::o;:::-;551:8110:1;2758:6:7;551:8110:1;;:::i;:::-;2774:17:7;;;:::i;:::-;2806:40;;551:8110:1;;2806:40:7;2666:187::o;5328:125:15:-;5366:69;551:8110:1;5374:13:15;551:8110:1;;:::i;1042:67:16:-;;;:::i;551:8110:1:-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;2274:144:16:-;2308:92;551:8110:1;2333:6:16;551:8110:1;2324:4:16;2316:23;2308:92;:::i;:::-;1312:66:13;2274:144:16;:::o;551:8110:1:-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;1842:226:16:-;2060:1;1842:226;1963:87;551:8110:1;1898:6:16;551:8110:1;1873:80:16;1889:4;;1881:23;;1873:80;:::i;:::-;1971:30;551:8110:1;1312:66:13;551:8110:1;;:::i;1971:30:16:-;;1963:87;:::i;:::-;2060:1;:::i;551:8110:1:-;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;3565:1:16;551:8110:1;;:::o;:::-;;;;;;:::i;:::-;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;:::i;3387:195:16:-;3569:5;3387:195;3486:17;;;:::i;:::-;3555:12;;:::i;:::-;3569:5;;:::i;3387:195::-;;;;:::i;1303:62:7:-;;;;:::i;8593:66:1:-;;;;:::i;1842:226:16:-;;2060:1;1842:226;1963:87;551:8110:1;1898:6:16;551:8110:1;1873:80:16;1889:4;;1881:23;;1873:80;:::i;1963:87::-;3901:220;4109:4;3901:220;4034:17;;;:::i;:::-;4109:4;:::i;3901:220::-;;;;;:::i;5328:125:15:-;5366:69;551:8110:1;5374:13:15;551:8110:1;;:::i;5366:69:15:-;5445:1;1063:97:17;;:::i;:::-;;;:::i;5328:125:15:-;5366:69;551:8110:1;5374:13:15;551:8110:1;;:::i;5366:69:15:-;5445:1;;:::i;551:8110:1:-;;1239:15:17;551:8110:1;;:::i;:::-;1239:15:17;551:8110:1;:::o;:::-;;2488:14:17;551:8110:1;;:::i;1166:95:17:-;1239:15;;:::i;1166:95::-;;;:::i;551:8110:1:-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;2010:106:17:-;2071:38;2079:9;551:8110:1;1928:7:17;551:8110:1;;:::i;:::-;2079:9:17;;:::i;:::-;2071:38;:::i;1447:72::-;;;:::i;:::-;1511:1;2488:14;;:::i;:::-;2517:20;551:8110:1;;929:10:26;2517:20:17;929:10:26;2517:20:17;;:::i;2429:115::-;;;:::i;1697:66::-;;;:::i;:::-;1755:1;2734:15;;:::i;:::-;2764:22;551:8110:1;;929:10:26;2764:22:17;929:10:26;2764:22:17;;:::i;2676:117::-;;;:::i;551:8110:1:-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;2188:106:17:-;2246:41;551:8110:1;1928:7:17;551:8110:1;;:::i;:::-;2246:41:17;:::i;971:66:13:-;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;551:8110:1;;;971:66:13;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;2820:944::-;;551:8110:1;971:66:13;551:8110:1;;:::i;:::-;971:66:13;;;3330:17;;;;:::i;3232:526::-;551:8110:1;;3383:63:13;551:8110:1;3383:63:13;;;551:8110:1;3383:63:13;551:8110:1;;;;3383:63:13;;3565:1:16;;3383:63:13;;;3232:526;-1:-1:-1;3379:302:13;;551:8110:1;;;;;;3610:56:13;;;;;3383:63;3610:56;;;:::i;3379:302::-;3488:82;1312:66;3737:9;3496:28;;3488:82;:::i;:::-;3737:9;:::i;3383:63::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;2820:944;;551:8110:1;971:66:13;551:8110:1;;:::i;:::-;971:66:13;;;3330:17;;;;:::i;3232:526::-;551:8110:1;;3383:63:13;551:8110:1;3383:63:13;;;551:8110:1;3383:63:13;551:8110:1;;;;3383:63:13;;;;;;;3232:526;-1:-1:-1;3379:302:13;;551:8110:1;;;;;;3610:56:13;;;;;3383:63;3610:56;;;:::i;3379:302::-;3488:82;1312:66;3737:9;3496:28;;3488:82;:::i;:::-;3737:9;:::i;3383:63::-;;;;;;;;;:::i;:::-;;;;;551:8110:1;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;1699:281:13:-;1888:85;1699:281;1772:106;1713:19:25;;:23;;1772:106:13;:::i;:::-;1888:85;:::i;2372:276::-;2491:17;;;:::i;:::-;551:8110:1;;2523:15:13;;;:28;;;2372:276;2519:123;;2372:276;;:::o;2519:123::-;6799:77:25;551:8110:1;;;:::i;:::-;6799:77:25;;:::i;:::-;;2519:123:13;;;;2523:28;;3565:1:16;2523:28:13;;2372:276;2491:17;;;:::i;:::-;551:8110:1;;2523:15:13;;;:28;;;2519:123;;2372:276;;:::o;2523:28::-;;4109:4:16;2523:28:13;;2086:152;2171:17;;;:::i;:::-;2204:27;;551:8110:1;;2204:27:13;2086:152::o;551:8110:1:-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;7069:325:25;7276:25;7069:325;7318:69;7069:325;;7276:25;;;;;;;;;;:::i;:::-;7318:69;;:::i;551:8110:1:-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;7682:628:25:-;;;551:8110:1;;7886:418:25;;;551:8110:1;;;;7917:22:25;7913:286;;8212:17;;:::o;7913:286::-;8124:60;1713:19;;:23;;8124:60;:::i;:::-;7913:286;;;7886:418;8280:12;;;;;;;:::i;551:8110:1:-;;;;;;;;;;;:::i;8832:540:25:-;551:8110:1;;8832:540:25;;-1:-1:-1;8991:21:25;:17;;9163:142;;;;;;;8987:379;9335:20;551:8110:1;;;;9335:20:25;;;;;;;;;;:::i",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 1759,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint8",
                                "type": "Primitive"
                            },
                            "label": "_initialized",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_uint8"
                        },
                        {
                            "astId": 1762,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "bool",
                                "type": "Primitive"
                            },
                            "label": "_initializing",
                            "offset": 1,
                            "slot": "0",
                            "type": "t_bool"
                        },
                        {
                            "astId": 1962,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1600",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "staticArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "staticArraySize": "50",
                                "type": "StaticArray"
                            },
                            "label": "__gap",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_array(t_uint256)50_storage"
                        },
                        {
                            "astId": 644,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "_owner",
                            "offset": 0,
                            "slot": "51",
                            "type": "t_address"
                        },
                        {
                            "astId": 764,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1568",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "staticArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "staticArraySize": "49",
                                "type": "StaticArray"
                            },
                            "label": "__gap",
                            "offset": 0,
                            "slot": "52",
                            "type": "t_array(t_uint256)49_storage"
                        },
                        {
                            "astId": 922,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "bool",
                                "type": "Primitive"
                            },
                            "label": "_paused",
                            "offset": 0,
                            "slot": "101",
                            "type": "t_bool"
                        },
                        {
                            "astId": 1027,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1568",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "staticArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "staticArraySize": "49",
                                "type": "StaticArray"
                            },
                            "label": "__gap",
                            "offset": 0,
                            "slot": "102",
                            "type": "t_array(t_uint256)49_storage"
                        },
                        {
                            "astId": 2296,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1600",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "staticArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "staticArraySize": "50",
                                "type": "StaticArray"
                            },
                            "label": "__gap",
                            "offset": 0,
                            "slot": "151",
                            "type": "t_array(t_uint256)50_storage"
                        },
                        {
                            "astId": 900,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "1600",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "staticArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "staticArraySize": "50",
                                "type": "StaticArray"
                            },
                            "label": "__gap",
                            "offset": 0,
                            "slot": "201",
                            "type": "t_array(t_uint256)50_storage"
                        },
                        {
                            "astId": 37,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "192",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "astId": 32,
                                    "canonicalId": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol|CollectionFactory.CollectionMeta",
                                    "containingContract": "CollectionFactory",
                                    "structMembers": [
                                        {
                                            "name": "name",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "0",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "type": "StringType"
                                            }
                                        },
                                        {
                                            "name": "symbol",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "1",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "type": "StringType"
                                            }
                                        },
                                        {
                                            "name": "URI",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "2",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "type": "StringType"
                                            }
                                        },
                                        {
                                            "name": "contractAddress",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "20",
                                                        "offset": 0,
                                                        "slot": "3",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "owner",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "20",
                                                        "offset": 0,
                                                        "slot": "4",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "description",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "5",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "type": "StringType"
                                            }
                                        }
                                    ],
                                    "structName": "CollectionMeta",
                                    "type": "UserDefinedStruct"
                                },
                                "type": "Mapping"
                            },
                            "label": "collections",
                            "offset": 0,
                            "slot": "251",
                            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)32_storage)"
                        },
                        {
                            "astId": 41,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "20",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "type": "Mapping"
                            },
                            "label": "addressToCollectionId",
                            "offset": 0,
                            "slot": "252",
                            "type": "t_mapping(t_address,t_uint256)"
                        },
                        {
                            "astId": 47,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "dynamicArrayBaseType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "32",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "astId": 601,
                                        "canonicalId": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/utils/LibShare.sol|LibShare.Share",
                                        "containingContract": "LibShare",
                                        "structMembers": [
                                            {
                                                "name": "account",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "20",
                                                            "offset": 0,
                                                            "slot": "0",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "12",
                                                            "offset": 20,
                                                            "slot": "0",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint96",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Share",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Array"
                                },
                                "type": "Mapping"
                            },
                            "label": "royaltiesForCollection",
                            "offset": 0,
                            "slot": "253",
                            "type": "t_mapping(t_uint256,t_array(t_struct(Share)601_storage)dyn_storage)"
                        },
                        {
                            "astId": 49,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "collectionId",
                            "offset": 0,
                            "slot": "254",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 51,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "collectionMethodAddress",
                            "offset": 0,
                            "slot": "255",
                            "type": "t_address"
                        },
                        {
                            "astId": 53,
                            "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "address",
                                "type": "Primitive"
                            },
                            "label": "piNFTMethodsAddress",
                            "offset": 0,
                            "slot": "256",
                            "type": "t_address"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_address_payable": {
                            "encoding": "inplace",
                            "label": "address payable",
                            "numberOfBytes": "20"
                        },
                        "t_array(t_struct(Share)601_storage)dyn_storage": {
                            "base": "t_struct(Share)601_storage",
                            "encoding": "dynamic_array",
                            "label": "struct LibShare.Share[]",
                            "numberOfBytes": "32"
                        },
                        "t_array(t_uint256)49_storage": {
                            "base": "t_uint256",
                            "encoding": "inplace",
                            "label": "uint256[49]",
                            "numberOfBytes": "1568"
                        },
                        "t_array(t_uint256)50_storage": {
                            "base": "t_uint256",
                            "encoding": "inplace",
                            "label": "uint256[50]",
                            "numberOfBytes": "1600"
                        },
                        "t_bool": {
                            "encoding": "inplace",
                            "label": "bool",
                            "numberOfBytes": "1"
                        },
                        "t_mapping(t_address,t_uint256)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => uint256)",
                            "numberOfBytes": "32",
                            "value": "t_uint256"
                        },
                        "t_mapping(t_uint256,t_array(t_struct(Share)601_storage)dyn_storage)": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => struct LibShare.Share[])",
                            "numberOfBytes": "32",
                            "value": "t_array(t_struct(Share)601_storage)dyn_storage"
                        },
                        "t_mapping(t_uint256,t_struct(CollectionMeta)32_storage)": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)",
                            "numberOfBytes": "32",
                            "value": "t_struct(CollectionMeta)32_storage"
                        },
                        "t_string_storage": {
                            "encoding": "bytes",
                            "label": "string",
                            "numberOfBytes": "32"
                        },
                        "t_struct(CollectionMeta)32_storage": {
                            "encoding": "inplace",
                            "label": "struct CollectionFactory.CollectionMeta",
                            "members": [
                                {
                                    "astId": 21,
                                    "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                                    "label": "name",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_string_storage"
                                },
                                {
                                    "astId": 23,
                                    "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                                    "label": "symbol",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_string_storage"
                                },
                                {
                                    "astId": 25,
                                    "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                                    "label": "URI",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_string_storage"
                                },
                                {
                                    "astId": 27,
                                    "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                                    "label": "contractAddress",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_address"
                                },
                                {
                                    "astId": 29,
                                    "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                                    "label": "owner",
                                    "offset": 0,
                                    "slot": "4",
                                    "type": "t_address"
                                },
                                {
                                    "astId": 31,
                                    "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                                    "label": "description",
                                    "offset": 0,
                                    "slot": "5",
                                    "type": "t_string_storage"
                                }
                            ],
                            "numberOfBytes": "192"
                        },
                        "t_struct(Share)601_storage": {
                            "encoding": "inplace",
                            "label": "struct LibShare.Share",
                            "members": [
                                {
                                    "astId": 598,
                                    "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                                    "label": "account",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_address_payable"
                                },
                                {
                                    "astId": 600,
                                    "contract": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol:CollectionFactory",
                                    "label": "value",
                                    "offset": 20,
                                    "slot": "0",
                                    "type": "t_uint96"
                                }
                            ],
                            "numberOfBytes": "32"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        },
                        "t_uint8": {
                            "encoding": "inplace",
                            "label": "uint8",
                            "numberOfBytes": "1"
                        },
                        "t_uint96": {
                            "encoding": "inplace",
                            "label": "uint96",
                            "numberOfBytes": "12"
                        }
                    }
                },
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [
            "00000000ce4604a0000000000000000000000003",
            "00000000ce4604a0000000000000000000000006"
        ],
        "primary_contract": "CollectionFactory",
        "primary_contract_address": "00000000ce4604a0000000000000000000000001",
        "prototypeFor": [],
        "sdc_name": "CollectionFactory.sol_0",
        "sourceDir": ".",
        "srclist": {
            "0": "contracts/AconomyERC2771Context.sol",
            "1": "contracts/CollectionFactory.sol",
            "2": "contracts/CollectionMethods.sol",
            "3": "contracts/Libraries/LibCollection.sol",
            "4": "contracts/piNFT.sol",
            "5": "contracts/piNFTMethods.sol",
            "6": "contracts/utils/LibShare.sol",
            "7": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
            "8": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC165Upgradeable.sol",
            "9": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
            "10": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol",
            "11": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC721Upgradeable.sol",
            "12": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
            "13": "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
            "14": "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
            "15": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
            "16": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
            "17": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
            "18": "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
            "19": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
            "20": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
            "21": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
            "22": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
            "23": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
            "24": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
            "25": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
            "26": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
            "27": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
            "28": "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
            "29": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
            "30": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
            "31": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
            "32": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
            "33": "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
            "34": "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol",
            "35": "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
            "36": "node_modules/@openzeppelin/contracts/proxy/Clones.sol",
            "37": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
            "38": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
            "39": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
            "40": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
            "41": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
            "42": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
            "43": "node_modules/@openzeppelin/contracts/utils/Address.sol",
            "44": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "45": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
            "46": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
            "47": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
            "48": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
            "49": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
            "50": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    },
    "LibCollection_00000000ce4604a0000000000000000000000003": {
        "contracts": [
            {
                "address": "00000000ce4604a0000000000000000000000003",
                "allMethods": [
                    {
                        "contractName": "LibCollection",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": true,
                        "name": "deployCollectionAddress",
                        "notpayable": true,
                        "originalFile": "contracts/Libraries/LibCollection.sol",
                        "paramNames": [
                            "_collectionOwner",
                            "_collectionFactoryAddress",
                            "_name",
                            "_symbol",
                            "_collectionMethods"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "d7d5c6f4",
                        "sourceBytes": {
                            "begin": 742,
                            "size": 520
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    }
                ],
                "bytecode": "60806040526004361015610018575b61001661008a565b005b60003560e01c63d7d5c6f41461002d5761000e565b307f00000000000000000000000000000000000000000000000000000000000000001461007d575b61007961006d61006436610223565b939290926103d9565b604051918291826102d6565b0390f35b61008561008a565b610055565b50600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116141561008a57565b600435906100bc82610090565b565b602435906100bc82610090565b608435906100bc82610090565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761014a575b604052565b6101526100d8565b610145565b906100bc6040519283610108565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff81116101a1575b01160190565b6101a96100d8565b61019b565b90826000939282370152565b906100bc919392936101d36101ce83610165565b610157565b94828652828201116101ea575b60208501906101ae565b6101f261008a565b6101e0565b906102139181601f82011215610216575b6020813591016101ba565b90565b61021e61008a565b610208565b9060a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126102af575b6102576100af565b916102606100be565b91610299604435926102868167ffffffffffffffff958681116102a2575b6004016101f7565b936064359081116102a2576004016101f7565b906102136100cb565b6102aa61008a565b61027e565b6102b761008a565b61024f565b73ffffffffffffffffffffffffffffffffffffffff169052565b6020810192916100bc91906102bc565b60009103126102f157565b6102f961008a565b6100bc565b6016815260200190565b60209181520190565b918091926000905b82821061033757501161032b575b5050565b60009101523880610327565b91508060209183015181860152018291610319565b601f61038461019b6020947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe094805193848093610308565b96879101610311565b926103ad61021395936103a3866103be956102bc565b60208601906102bc565b60806040850152608084019061034c565b91606081840391015261034c565b506040513d6000823e3d90fd5b6103e66000939295610517565b948373ffffffffffffffffffffffffffffffffffffffff871692833b1561047f575b610441604051978896879586947f2016a0d20000000000000000000000000000000000000000000000000000000086526004860161038d565b03925af18015610472575b610455575b5090565b61046c906104633d82610108565b3d8101906102e6565b38610451565b61047a6103cc565b61044c565b61048761008a565b610408565b7f455243313136373a20637265617465206661696c6564000000000000000000009052565b6104bc6020916102fe565b6104c58161048c565b0190565b602061021391818152016104b1565b156104df57565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280610513600482016104c9565b0390fd5b6e5af43d82803e903d91602b57fd5bf390763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c161760005260781b17602052603760096000f0906100bc73ffffffffffffffffffffffffffffffffffffffff831615156104d856fea364697066735822122004ee0c6ff1dcaaecb6d4af4b753055e92ed069140e72b33063f99d60193d460d6c6578706572696d656e74616cf564736f6c634300080b0041",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": true,
                    "optimizerRuns": 1000000,
                    "type": "SolcParameters",
                    "viaIR": true
                },
                "compilerVersion": "0.8.11",
                "constructorBytecode": "6080806040523461001d575b6105c190816100318239308160300152f35b61002561002a565b61000b565b50600080fdfe60806040526004361015610018575b61001661008a565b005b60003560e01c63d7d5c6f41461002d5761000e565b307f00000000000000000000000000000000000000000000000000000000000000001461007d575b61007961006d61006436610223565b939290926103d9565b604051918291826102d6565b0390f35b61008561008a565b610055565b50600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116141561008a57565b600435906100bc82610090565b565b602435906100bc82610090565b608435906100bc82610090565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761014a575b604052565b6101526100d8565b610145565b906100bc6040519283610108565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff81116101a1575b01160190565b6101a96100d8565b61019b565b90826000939282370152565b906100bc919392936101d36101ce83610165565b610157565b94828652828201116101ea575b60208501906101ae565b6101f261008a565b6101e0565b906102139181601f82011215610216575b6020813591016101ba565b90565b61021e61008a565b610208565b9060a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126102af575b6102576100af565b916102606100be565b91610299604435926102868167ffffffffffffffff958681116102a2575b6004016101f7565b936064359081116102a2576004016101f7565b906102136100cb565b6102aa61008a565b61027e565b6102b761008a565b61024f565b73ffffffffffffffffffffffffffffffffffffffff169052565b6020810192916100bc91906102bc565b60009103126102f157565b6102f961008a565b6100bc565b6016815260200190565b60209181520190565b918091926000905b82821061033757501161032b575b5050565b60009101523880610327565b91508060209183015181860152018291610319565b601f61038461019b6020947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe094805193848093610308565b96879101610311565b926103ad61021395936103a3866103be956102bc565b60208601906102bc565b60806040850152608084019061034c565b91606081840391015261034c565b506040513d6000823e3d90fd5b6103e66000939295610517565b948373ffffffffffffffffffffffffffffffffffffffff871692833b1561047f575b610441604051978896879586947f2016a0d20000000000000000000000000000000000000000000000000000000086526004860161038d565b03925af18015610472575b610455575b5090565b61046c906104633d82610108565b3d8101906102e6565b38610451565b61047a6103cc565b61044c565b61048761008a565b610408565b7f455243313136373a20637265617465206661696c6564000000000000000000009052565b6104bc6020916102fe565b6104c58161048c565b0190565b602061021391818152016104b1565b156104df57565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815280610513600482016104c9565b0390fd5b6e5af43d82803e903d91602b57fd5bf390763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c161760005260781b17602052603760096000f0906100bc73ffffffffffffffffffffffffffffffffffffffff831615156104d856fea364697066735822122004ee0c6ff1dcaaecb6d4af4b753055e92ed069140e72b33063f99d60193d460d6c6578706572696d656e74616cf564736f6c634300080b0041",
                "constructorSrcmap": "144:1120:3:-:0;;;;;;;-1:-1:-1;144:1120:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;",
                "file": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol",
                "immutables": [],
                "internalFunctions": {},
                "is_static_address": false,
                "lang": "Solidity",
                "methods": [
                    {
                        "contractName": "LibCollection",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": true,
                        "name": "deployCollectionAddress",
                        "notpayable": true,
                        "originalFile": "contracts/Libraries/LibCollection.sol",
                        "paramNames": [
                            "_collectionOwner",
                            "_collectionFactoryAddress",
                            "_name",
                            "_symbol",
                            "_collectionMethods"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "d7d5c6f4",
                        "sourceBytes": {
                            "begin": 742,
                            "size": 520
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    }
                ],
                "name": "LibCollection",
                "original_file": "contracts/Libraries/LibCollection.sol",
                "solidityTypes": [
                    {
                        "astId": 32,
                        "canonicalId": "contracts/CollectionFactory.sol|CollectionFactory.CollectionMeta",
                        "containingContract": "CollectionFactory",
                        "structMembers": [
                            {
                                "name": "name",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "symbol",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "URI",
                                "type": {
                                    "type": "StringType"
                                }
                            },
                            {
                                "name": "contractAddress",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "owner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "description",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "CollectionMeta",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 601,
                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                        "containingContract": "LibShare",
                        "structMembers": [
                            {
                                "name": "account",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Share",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 9289,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol|MathUpgradeable.Rounding",
                        "containingContract": "MathUpgradeable",
                        "enumMembers": [
                            {
                                "name": "Down"
                            },
                            {
                                "name": "Up"
                            },
                            {
                                "name": "Zero"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 8000,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/math/Math.sol|Math.Rounding",
                        "containingContract": "Math",
                        "enumMembers": [
                            {
                                "name": "Down"
                            },
                            {
                                "name": "Up"
                            },
                            {
                                "name": "Zero"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 3323,
                        "canonicalId": "contracts/piNFTMethods.sol|piNFTMethods.Commission",
                        "containingContract": "piNFTMethods",
                        "structMembers": [
                            {
                                "name": "commission",
                                "type": {
                                    "astId": 601,
                                    "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                    "containingContract": "LibShare",
                                    "structMembers": [
                                        {
                                            "name": "account",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "primitiveName": "uint96",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Share",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "name": "isValid",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Commission",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 1268,
                        "canonicalId": "node_modules/@openzeppelin/contracts/utils/Counters.sol|Counters.Counter",
                        "containingContract": "Counters",
                        "structMembers": [
                            {
                                "name": "_value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Counter",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5258,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.AddressSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "AddressSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5261,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.BooleanSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "BooleanSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5264,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.Bytes32Slot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Bytes32Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5267,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.Uint256Slot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Uint256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5270,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.StringSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "StringSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5273,
                        "canonicalId": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol|StorageSlotUpgradeable.BytesSlot",
                        "containingContract": "StorageSlotUpgradeable",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "structName": "BytesSlot",
                        "type": "UserDefinedStruct"
                    }
                ],
                "sourceBytes": {
                    "begin": 144,
                    "size": 1120
                },
                "srcmap": "144:1120:3:-:0;;;;;;;;;-1:-1:-1;144:1120:3;;:::i;:::-;-1:-1:-1;144:1120:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;742:520;1014:32;1056:161;742:520;;;1014:32;:::i;:::-;144:1120;;;;;1056:161;;;;;;742:520;1056:161;144:1120;;1056:161;;;;;;;144:1120;1056:161;;;;;;:::i;:::-;;;;;;;;;742:520;1056:161;;742:520;1227:28;742:520;:::o;1056:161::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;144:1120;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;973:759:36;1101:558;973:759;1101:558;;;;;;;;;;;;;;;;;;144:1120:3;1668:57:36;144:1120:3;;;1676:22:36;;1668:57;:::i",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [],
        "primary_contract": "LibCollection",
        "primary_contract_address": "00000000ce4604a0000000000000000000000003",
        "prototypeFor": [],
        "sdc_name": "CollectionFactory.sol_0_LibCollection",
        "sourceDir": ".",
        "srclist": {
            "0": "contracts/AconomyERC2771Context.sol",
            "1": "contracts/CollectionFactory.sol",
            "2": "contracts/CollectionMethods.sol",
            "3": "contracts/Libraries/LibCollection.sol",
            "4": "contracts/piNFT.sol",
            "5": "contracts/piNFTMethods.sol",
            "6": "contracts/utils/LibShare.sol",
            "7": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
            "8": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC165Upgradeable.sol",
            "9": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
            "10": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol",
            "11": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC721Upgradeable.sol",
            "12": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
            "13": "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
            "14": "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
            "15": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
            "16": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
            "17": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
            "18": "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
            "19": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
            "20": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
            "21": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
            "22": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
            "23": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
            "24": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
            "25": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
            "26": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
            "27": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
            "28": "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
            "29": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
            "30": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
            "31": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
            "32": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
            "33": "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
            "34": "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol",
            "35": "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
            "36": "node_modules/@openzeppelin/contracts/proxy/Clones.sol",
            "37": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
            "38": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
            "39": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
            "40": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
            "41": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
            "42": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
            "43": "node_modules/@openzeppelin/contracts/utils/Address.sol",
            "44": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "45": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
            "46": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
            "47": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
            "48": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
            "49": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
            "50": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    },
    "LibShare_00000000ce4604a0000000000000000000000006": {
        "contracts": [
            {
                "address": "00000000ce4604a0000000000000000000000006",
                "allMethods": [
                    {
                        "contractName": "LibShare",
                        "fullArgs": [
                            {
                                "location": "storage",
                                "typeDesc": {
                                    "astId": 601,
                                    "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                    "containingContract": "LibShare",
                                    "structMembers": [
                                        {
                                            "name": "account",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "primitiveName": "uint96",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Share",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": true,
                        "name": "setCommission",
                        "notpayable": true,
                        "originalFile": "contracts/utils/LibShare.sol",
                        "paramNames": [
                            "_setShare",
                            "_commission"
                        ],
                        "returns": [],
                        "sighash": "87ebb9b5",
                        "sourceBytes": {
                            "begin": 390,
                            "size": 210
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    }
                ],
                "bytecode": "608080604052600436101561001a575b5061001861007b565b005b60003560e01c6387ebb9b51461002f5761000f565b600090307f00000000000000000000000000000000000000000000000000000000000000001461006e575b61006c610066366100a7565b906101b5565bf35b61007661007b565b61005a565b50600080fd5b6bffffffffffffffffffffffff8116141561007b57565b602435906100a582610081565b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60409101126100e1575b600435906100de610098565b90565b6100e961007b565b6100d2565b1561007b57565b7fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161790565b9073ffffffffffffffffffffffffffffffffffffffff610155911682546100f5565b9055565b907fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9160a01b1691161790565b906bffffffffffffffffffffffff61015591168254610159565b906100a5916101d66113246bffffffffffffffffffffffff841611156100ee565b6101e03382610133565b61019b56fea3646970667358221220bcdd61fedc3e0c1e1eac7f49ecba0fb46881eaa0ef4e06d3b53497fb1b60cedc6c6578706572696d656e74616cf564736f6c634300080b0041",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": true,
                    "optimizerRuns": 1000000,
                    "type": "SolcParameters",
                    "viaIR": true
                },
                "compilerVersion": "0.8.11",
                "constructorBytecode": "6080806040523461001d575b61022990816100318239308160350152f35b61002561002a565b61000b565b50600080fdfe608080604052600436101561001a575b5061001861007b565b005b60003560e01c6387ebb9b51461002f5761000f565b600090307f00000000000000000000000000000000000000000000000000000000000000001461006e575b61006c610066366100a7565b906101b5565bf35b61007661007b565b61005a565b50600080fd5b6bffffffffffffffffffffffff8116141561007b57565b602435906100a582610081565b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60409101126100e1575b600435906100de610098565b90565b6100e961007b565b6100d2565b1561007b57565b7fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161790565b9073ffffffffffffffffffffffffffffffffffffffff610155911682546100f5565b9055565b907fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9160a01b1691161790565b906bffffffffffffffffffffffff61015591168254610159565b906100a5916101d66113246bffffffffffffffffffffffff841611156100ee565b6101e03382610133565b61019b56fea3646970667358221220bcdd61fedc3e0c1e1eac7f49ecba0fb46881eaa0ef4e06d3b53497fb1b60cedc6c6578706572696d656e74616cf564736f6c634300080b0041",
                "constructorSrcmap": "57:545:6:-:0;;;;;;;-1:-1:-1;57:545:6;;;;;;;;;;;;;;;:::i;:::-;;;;;;;",
                "file": "/home/dell/Documents/Aconomy/aconomy-contract/contracts/CollectionFactory.sol",
                "immutables": [],
                "internalFunctions": {},
                "is_static_address": false,
                "lang": "Solidity",
                "methods": [
                    {
                        "contractName": "LibShare",
                        "fullArgs": [
                            {
                                "location": "storage",
                                "typeDesc": {
                                    "astId": 601,
                                    "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                                    "containingContract": "LibShare",
                                    "structMembers": [
                                        {
                                            "name": "account",
                                            "type": {
                                                "primitiveName": "address",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "primitiveName": "uint96",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Share",
                                    "type": "UserDefinedStruct"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": true,
                        "name": "setCommission",
                        "notpayable": true,
                        "originalFile": "contracts/utils/LibShare.sol",
                        "paramNames": [
                            "_setShare",
                            "_commission"
                        ],
                        "returns": [],
                        "sighash": "87ebb9b5",
                        "sourceBytes": {
                            "begin": 390,
                            "size": 210
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    }
                ],
                "name": "LibShare",
                "original_file": "contracts/utils/LibShare.sol",
                "solidityTypes": [
                    {
                        "astId": 601,
                        "canonicalId": "contracts/utils/LibShare.sol|LibShare.Share",
                        "containingContract": "LibShare",
                        "structMembers": [
                            {
                                "name": "account",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint96",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Share",
                        "type": "UserDefinedStruct"
                    }
                ],
                "sourceBytes": {
                    "begin": 57,
                    "size": 545
                },
                "srcmap": "57:545:6:-:0;;;;;;;;;;-1:-1:-1;57:545:6;;;:::i;:::-;-1:-1:-1;57:545:6;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;390:210::-;;564:29;390:210;477:28;500:4;57:545;;;485:19;;477:28;:::i;:::-;515:39;543:10;515:39;;:::i;:::-;564:29;:::i",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [],
        "primary_contract": "LibShare",
        "primary_contract_address": "00000000ce4604a0000000000000000000000006",
        "prototypeFor": [],
        "sdc_name": "CollectionFactory.sol_0_LibShare",
        "sourceDir": ".",
        "srclist": {
            "0": "contracts/AconomyERC2771Context.sol",
            "1": "contracts/CollectionFactory.sol",
            "2": "contracts/CollectionMethods.sol",
            "3": "contracts/Libraries/LibCollection.sol",
            "4": "contracts/piNFT.sol",
            "5": "contracts/piNFTMethods.sol",
            "6": "contracts/utils/LibShare.sol",
            "7": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
            "8": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC165Upgradeable.sol",
            "9": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
            "10": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol",
            "11": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC721Upgradeable.sol",
            "12": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
            "13": "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
            "14": "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
            "15": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
            "16": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
            "17": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
            "18": "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
            "19": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
            "20": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
            "21": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
            "22": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
            "23": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
            "24": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
            "25": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
            "26": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
            "27": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
            "28": "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
            "29": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
            "30": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
            "31": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
            "32": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
            "33": "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
            "34": "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol",
            "35": "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
            "36": "node_modules/@openzeppelin/contracts/proxy/Clones.sol",
            "37": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
            "38": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
            "39": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
            "40": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
            "41": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
            "42": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
            "43": "node_modules/@openzeppelin/contracts/utils/Address.sol",
            "44": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "45": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
            "46": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
            "47": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
            "48": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
            "49": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
            "50": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    }
}