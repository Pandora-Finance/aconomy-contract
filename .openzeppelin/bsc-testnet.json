{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xaA1e8f59a1B28810d0c70e153900Bb8B0AAD5512",
      "txHash": "0x49b4b1b57b5074654bdf28c06b6cf0303d73591bc27a263bcf1784f4aa326a63",
      "kind": "uups"
    },
    {
      "address": "0xDdba6B04B7fc3e80d420d47087Ce037d22018b09",
      "txHash": "0xc98c92b7450c70a83cd081c53a2e415c89d4c9f490f93f9ef637569b6ed18ca3",
      "kind": "uups"
    },
    {
      "address": "0xcd9Dc7978F9f673f22D6355e4F204ce495eA75D6",
      "txHash": "0x59de488e09c33e4b5ca7c989a9be971c6c6ed77a24ac9efa130bc3de2a04713b",
      "kind": "uups"
    },
    {
      "address": "0x5736B67650AB96f8AC5b48650ffdbE0865684a43",
      "txHash": "0xf6edd2c0f88c78954dbc826647841344433834cc2b6d1f4c05577ca366df57d0",
      "kind": "uups"
    },
    {
      "address": "0x5245BFeA04899bA59A2D5AC50EA6F337cE302ee6",
      "txHash": "0x090cb2d98cfc6e68e05fb7dd36ea80b7d4a06d064693aa0a0e6b9a85072f973d",
      "kind": "uups"
    },
    {
      "address": "0x7F0B2759660FBFd7633FC21f964aAd96C07ED574",
      "txHash": "0x48be0b00f66b36d96512e61a31ac52c50b8572de75991ef2cca56e8a06df56e6",
      "kind": "uups"
    },
    {
      "address": "0xC7F349E132a52758Cfbe23B6eD95DC9a3Fa0966a",
      "txHash": "0x2812bda60742950ca3e526c762e146b0864a9d34a14fd581e3895fbb357af86d",
      "kind": "uups"
    },
    {
      "address": "0xFC0055fbb420B1141d75686844ca60F193643200",
      "txHash": "0x02fc912d78232361806bb0394c591b11ca25bdc10b3bfee890a71c30c059cd63",
      "kind": "uups"
    },
    {
      "address": "0x7ccb552C64eA25F996C9aaC81A8BeBafE7912317",
      "txHash": "0x645662f988ca22ffe7787937f5502784f13f3364e6e62cac9dc3b250642bb507",
      "kind": "uups"
    },
    {
      "address": "0x4fD139774ab37DCC37ff261F5fF3f13C9eDd5C94",
      "txHash": "0x2c8ad88399cd1a5e161d2e6fa01d3e24abbe656ccde25754a16d17cfe35c1204",
      "kind": "uups"
    },
    {
      "address": "0xd2dF2B47a1935c511395Cd0a8389594178782E36",
      "txHash": "0xd7948681905d92feebb2c4a0297b2b33ec734d8d24a7e0890bdf772b2821d075",
      "kind": "uups"
    },
    {
      "address": "0xb0Dc0D02C33535BaaE307417483F3FB8681ceb1D",
      "txHash": "0x9159c8e9a1737f5801fb1643d764fe1b96e4ebeed3b4760e58822ce31ac75f86",
      "kind": "uups"
    },
    {
      "address": "0x4077162709f5a67368B49D536D3FCBFb283846C9",
      "txHash": "0xc3e0e23b8359d77aa952196f8ce5b355388bd77ab6abe88c9f0b340f8b0c6e25",
      "kind": "uups"
    },
    {
      "address": "0x40f93832c01977C5A5e486B6FeA8bAeC612E3871",
      "txHash": "0x4f136396f7d5f27418db4baf43c89276b9693c53287fac8c0bd78199d70f422a",
      "kind": "uups"
    }
  ],
  "impls": {
    "63113f1fcd8c3a8f77781200c5a65123fd1f9ee70b908a4b46bdd8092aca60f0": {
      "address": "0x6419CDb3c211e966AeE44D711e38C83862A2e200",
      "txHash": "0xd8d7de26ef726a31f8293c430ef2b254909f3552c091ebcf22210f970ef11aa0",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "trustedForwarders",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AconomyERC2771Context",
            "src": "contracts/AconomyERC2771Context.sol:13"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "152",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "piMarketAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:23"
          },
          {
            "label": "erc20Balances",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:26"
          },
          {
            "label": "erc20Contracts",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:30"
          },
          {
            "label": "erc20ContractIndex",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:33"
          },
          {
            "label": "NFTowner",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:36"
          },
          {
            "label": "withdrawnAmount",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:39"
          },
          {
            "label": "approvedValidator",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:42"
          },
          {
            "label": "validatorCommissions",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Commission)21005_storage))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Commission)21005_storage))": {
            "label": "mapping(address => mapping(uint256 => struct piNFTMethods.Commission))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Commission)21005_storage)": {
            "label": "mapping(uint256 => struct piNFTMethods.Commission)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Commission)21005_storage": {
            "label": "struct piNFTMethods.Commission",
            "members": [
              {
                "label": "commission",
                "type": "t_struct(Share)24979_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isValid",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Share)24979_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "0445c6d5194eb9f751e291493bda97651ad0a2a497a0bed89dff22a84ad89e17": {
      "address": "0x13D46D0b1C410b8615b8f8867941dfB55709C2e3",
      "txHash": "0x1bd3d7ee487c0a7a5d010d152121bfe876277657b77c6ee16bcb9cc26276b6e3",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)11207_storage)",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:41"
          },
          {
            "label": "addressToCollectionId",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:43"
          },
          {
            "label": "royaltiesForCollection",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)24979_storage)dyn_storage)",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:46"
          },
          {
            "label": "collectionId",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:48"
          },
          {
            "label": "collectionMethodAddress",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:49"
          },
          {
            "label": "piNFTMethodsAddress",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Share)24979_storage)dyn_storage": {
            "label": "struct LibShare.Share[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)24979_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollectionMeta)11207_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionMeta)11207_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "URI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Share)24979_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "5b9ab988adaa5125d0779e94c09734289c7b8dc2df291bdea876aac132723561": {
      "address": "0x1d9F475Bb11F2206721C8372dAB631953Ed0D967",
      "txHash": "0x0688a5051c84a8f178cbd07969834a6e27663b516739fed4a1ad0ff86a7fee38",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "attestationService",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(AttestationServices)11174",
            "contract": "poolRegistry",
            "src": "contracts/poolRegistry.sol:26"
          },
          {
            "label": "lenderAttestationSchemaId",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "poolRegistry",
            "src": "contracts/poolRegistry.sol:27"
          },
          {
            "label": "borrowerAttestationSchemaId",
            "offset": 0,
            "slot": "303",
            "type": "t_bytes32",
            "contract": "poolRegistry",
            "src": "contracts/poolRegistry.sol:28"
          },
          {
            "label": "_attestingSchemaId",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "poolRegistry",
            "src": "contracts/poolRegistry.sol:29"
          },
          {
            "label": "AconomyFeeAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "poolRegistry",
            "src": "contracts/poolRegistry.sol:30"
          },
          {
            "label": "FundingPoolAddress",
            "offset": 0,
            "slot": "306",
            "type": "t_address",
            "contract": "poolRegistry",
            "src": "contracts/poolRegistry.sol:31"
          },
          {
            "label": "ClosedPools",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "poolRegistry",
            "src": "contracts/poolRegistry.sol:33"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "poolRegistry",
            "src": "contracts/poolRegistry.sol:35"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_struct(poolDetail)23678_storage)",
            "contract": "poolRegistry",
            "src": "contracts/poolRegistry.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(AttestationServices)11174": {
            "label": "contract AttestationServices",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(poolDetail)23678_storage)": {
            "label": "mapping(uint256 => struct poolRegistry.poolDetail)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)10188_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9873_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)9873_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(poolDetail)23678_storage": {
            "label": "struct poolRegistry.poolDetail",
            "members": [
              {
                "label": "poolAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "URI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "APR",
                "type": "t_uint16",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "poolFeePercent",
                "type": "t_uint16",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "lenderAttestationRequired",
                "type": "t_bool",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "verifiedLendersForPool",
                "type": "t_struct(AddressSet)10188_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lenderAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "paymentCycleDuration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "paymentDefaultDuration",
                "type": "t_uint32",
                "offset": 4,
                "slot": "7"
              },
              {
                "label": "loanExpirationTime",
                "type": "t_uint32",
                "offset": 8,
                "slot": "7"
              },
              {
                "label": "borrowerAttestationRequired",
                "type": "t_bool",
                "offset": 12,
                "slot": "7"
              },
              {
                "label": "verifiedBorrowersForPool",
                "type": "t_struct(AddressSet)10188_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "borrowerAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6d6e4c62181a7842c26e32d20c42f18583aa631ad4a6d7bcafaee090a570b2bc": {
      "address": "0xF1B524909b176A1b9B454CC7F859a55c9653C602",
      "txHash": "0x5fb8e349575f143a9c1794766d296b2a6b866fe56a842d6393620ac0e45247d6",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "loanId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "poolStorage",
            "src": "contracts/poolStorage.sol:14"
          },
          {
            "label": "loans",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Loan)24939_storage)",
            "contract": "poolStorage",
            "src": "contracts/poolStorage.sol:17"
          },
          {
            "label": "poolLoans",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "poolStorage",
            "src": "contracts/poolStorage.sol:20"
          },
          {
            "label": "borrowerActiveLoans",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(UintSet)10345_storage)",
            "contract": "poolStorage",
            "src": "contracts/poolStorage.sol:100"
          },
          {
            "label": "totalERC20Amount",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "poolStorage",
            "src": "contracts/poolStorage.sol:104"
          },
          {
            "label": "borrowerLoans",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "poolStorage",
            "src": "contracts/poolStorage.sol:107"
          },
          {
            "label": "loanDefaultDuration",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "poolStorage",
            "src": "contracts/poolStorage.sol:108"
          },
          {
            "label": "loanExpirationDuration",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "poolStorage",
            "src": "contracts/poolStorage.sol:109"
          },
          {
            "label": "lenderLendAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "poolStorage",
            "src": "contracts/poolStorage.sol:113"
          },
          {
            "label": "poolRegistryAddress",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "poolStorage",
            "src": "contracts/poolStorage.sol:115"
          },
          {
            "label": "AconomyFeeAddress",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "poolStorage",
            "src": "contracts/poolStorage.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "13",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "62",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "112",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "113",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "162",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "163",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "212",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20)5000": {
            "label": "contract ERC20",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)24884": {
            "label": "enum poolStorage.LoanState",
            "members": [
              "PENDING",
              "CANCELLED",
              "ACCEPTED",
              "PAID"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)10345_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Loan)24939_storage)": {
            "label": "mapping(uint256 => struct poolStorage.Loan)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)",
            "numberOfBytes": "32"
          },
          "t_struct(Loan)24939_storage": {
            "label": "struct poolStorage.Loan",
            "members": [
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lender",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "poolId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "loanDetails",
                "type": "t_struct(LoanDetails)24908_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "terms",
                "type": "t_struct(Terms)24921_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)24884",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(LoanDetails)24908_storage": {
            "label": "struct poolStorage.LoanDetails",
            "members": [
              {
                "label": "lendingToken",
                "type": "t_contract(ERC20)5000",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalRepaid",
                "type": "t_struct(Payment)24889_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timestamp",
                "type": "t_uint32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint32",
                "offset": 4,
                "slot": "4"
              },
              {
                "label": "lastRepaidTimestamp",
                "type": "t_uint32",
                "offset": 8,
                "slot": "4"
              },
              {
                "label": "loanDuration",
                "type": "t_uint32",
                "offset": 12,
                "slot": "4"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16",
                "offset": 16,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Payment)24889_storage": {
            "label": "struct poolStorage.Payment",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "interest",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)9873_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Terms)24921_storage": {
            "label": "struct poolStorage.Terms",
            "members": [
              {
                "label": "paymentCycleAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "monthlyCycleInterest",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "paymentCycle",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "APR",
                "type": "t_uint16",
                "offset": 4,
                "slot": "2"
              },
              {
                "label": "installments",
                "type": "t_uint32",
                "offset": 6,
                "slot": "2"
              },
              {
                "label": "installmentsPaid",
                "type": "t_uint32",
                "offset": 10,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UintSet)10345_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9873_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ea5e19dfcc901b9cfc25d58690361c50880753f905db7822bcb5aaf89d5dc7e8": {
      "address": "0xB93bA9945614995e2Efe35d27b547Da5A3bbA954",
      "txHash": "0x6cadcaefb0f1e29f0ecb33203a54502db4d4a898454e2f7459696f1810e79d44",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "NFTid",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "NFTlendingBorrowing",
            "src": "contracts/NFTlendingBorrowing.sol:27"
          },
          {
            "label": "AconomyFeeAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "NFTlendingBorrowing",
            "src": "contracts/NFTlendingBorrowing.sol:28"
          },
          {
            "label": "NFTdetails",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_struct(NFTdetail)17903_storage)",
            "contract": "NFTlendingBorrowing",
            "src": "contracts/NFTlendingBorrowing.sol:84"
          },
          {
            "label": "Bids",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidDetail)17926_storage)dyn_storage)",
            "contract": "NFTlendingBorrowing",
            "src": "contracts/NFTlendingBorrowing.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(BidDetail)17926_storage)dyn_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidDetail)17926_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.BidDetail[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTdetail)17903_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.NFTdetail)",
            "numberOfBytes": "32"
          },
          "t_struct(BidDetail)17926_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint32",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "expiration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "ERC20Address",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "Amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "withdrawn",
                "type": "t_bool",
                "offset": 2,
                "slot": "7"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool",
                "offset": 3,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(NFTdetail)17903_storage": {
            "label": "struct NFTlendingBorrowing.NFTdetail",
            "members": [
              {
                "label": "NFTtokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIdOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "duration",
                "type": "t_uint32",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "expiration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expectedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "percent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "listed",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              },
              {
                "label": "repaid",
                "type": "t_bool",
                "offset": 4,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "09b72fa2694ea423fb815a7a11b6ce6f4fcd2daaf9c57657e7ddf6d998cb089a": {
      "address": "0xd6BF5860C885cCeE00F7373385E4fb9E0763d83d",
      "txHash": "0xf40d57a104cb389f5f06d81fe1cf849809252ea421a9698be6ff0e4f1a0d9b0e",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "trustedForwarders",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AconomyERC2771Context",
            "src": "contracts/AconomyERC2771Context.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)6705_storage",
            "contract": "piNFT",
            "src": "contracts/piNFT.sol:23"
          },
          {
            "label": "piNFTMethodsAddress",
            "offset": 0,
            "slot": "453",
            "type": "t_address",
            "contract": "piNFT",
            "src": "contracts/piNFT.sol:24"
          },
          {
            "label": "royaltiesByTokenId",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)24979_storage)dyn_storage)",
            "contract": "piNFT",
            "src": "contracts/piNFT.sol:27"
          },
          {
            "label": "royaltiesForValidator",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)24979_storage)dyn_storage)",
            "contract": "piNFT",
            "src": "contracts/piNFT.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Share)24979_storage)dyn_storage": {
            "label": "struct LibShare.Share[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)24979_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)6705_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Share)24979_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "7333f17285bf4c35359de68a19ba08413fe23ba3b1ef7883c6ba2c72cf5e6f06": {
      "address": "0x0e33Ec7059eFd5835c4281d5c198b03fA1391C78",
      "txHash": "0xfc7707e89a604c316771b6028028a9bb7aae0a427157765090bee70abc06c200",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_saleIdCounter",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)6705_storage",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:30"
          },
          {
            "label": "_swapIdCounter",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)6705_storage",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:31"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:99"
          },
          {
            "label": "collectionFactoryAddress",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:100"
          },
          {
            "label": "piNFTMethodsAddress",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:101"
          },
          {
            "label": "_tokenMeta",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(TokenMeta)19084_storage)",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:102"
          },
          {
            "label": "Bids",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidOrder)19097_storage)dyn_storage)",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:103"
          },
          {
            "label": "_swaps",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(Swap)19112_storage)",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(BidOrder)19097_storage)dyn_storage": {
            "label": "struct piMarket.BidOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidOrder)19097_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct piMarket.BidOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Swap)19112_storage)": {
            "label": "mapping(uint256 => struct piMarket.Swap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMeta)19084_storage)": {
            "label": "mapping(uint256 => struct piMarket.TokenMeta)",
            "numberOfBytes": "32"
          },
          "t_struct(BidOrder)19097_storage": {
            "label": "struct piMarket.BidOrder",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "saleId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sellerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "buyerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "withdrawn",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)6705_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Swap)19112_storage": {
            "label": "struct piMarket.Swap",
            "members": [
              {
                "label": "initiatorNFTAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "initiator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "initiatorNftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "requestedTokenOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requestedTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "requestedTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(TokenMeta)19084_storage": {
            "label": "struct piMarket.TokenMeta",
            "members": [
              {
                "label": "saleId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenContractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "directSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidSale",
                "type": "t_bool",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_bool",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "bidStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "bidEndTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "currentOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "currency",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7bbe2c4209ce8f76e792944e88ba6e9bed0a4538cbbe128c11c6651b69441b61": {
      "address": "0x905191a825c9720018971843F8C653640352066e",
      "txHash": "0x5b1ca12faa26a3ac31b1ed6c80d4daa35dd6ad40f4220e99d413ed0b5f65288f",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "trustedForwarders",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AconomyERC2771Context",
            "src": "contracts/AconomyERC2771Context.sol:13"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "152",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "piMarketAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:24"
          },
          {
            "label": "erc20Balances",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:27"
          },
          {
            "label": "erc20Contracts",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:31"
          },
          {
            "label": "erc20ContractIndex",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:34"
          },
          {
            "label": "NFTowner",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:37"
          },
          {
            "label": "withdrawnAmount",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:40"
          },
          {
            "label": "approvedValidator",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:43"
          },
          {
            "label": "validatorCommissions",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Commission)12013_storage))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Commission)12013_storage))": {
            "label": "mapping(address => mapping(uint256 => struct piNFTMethods.Commission))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Commission)12013_storage)": {
            "label": "mapping(uint256 => struct piNFTMethods.Commission)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Commission)12013_storage": {
            "label": "struct piNFTMethods.Commission",
            "members": [
              {
                "label": "commission",
                "type": "t_struct(Share)13318_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isValid",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Share)13318_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "e898805b669012b962ec3a5e546a6f1c6f9d49536e47e227637b4f66019dd16f": {
      "address": "0x6F121FfFc7Fe7c9C328d0Adf0C0545e6B993AdBc",
      "txHash": "0x0d3cedefe081c378af02769f0486be4985f2ccfc1d69627fa20e24bc934f1603",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)7686_storage)",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:41"
          },
          {
            "label": "addressToCollectionId",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:43"
          },
          {
            "label": "royaltiesForCollection",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)13318_storage)dyn_storage)",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:46"
          },
          {
            "label": "collectionId",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:48"
          },
          {
            "label": "collectionMethodAddress",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:49"
          },
          {
            "label": "piNFTMethodsAddress",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Share)13318_storage)dyn_storage": {
            "label": "struct LibShare.Share[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)13318_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollectionMeta)7686_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionMeta)7686_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "URI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Share)13318_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "d2ad2a155b6e6d1bf94e0ab7c85471a0adc3f472c3867de51d74ff2f670395bd": {
      "address": "0xAde9647cd88412c70889aa16dcFEc7c82B64BA81",
      "txHash": "0xed01f6bfe521b24203174caa1ce9adc53693c66bc5d1f7af70bb3882bd755700",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "trustedForwarders",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AconomyERC2771Context",
            "src": "contracts/AconomyERC2771Context.sol:13"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "152",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "piMarketAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:24"
          },
          {
            "label": "erc20Balances",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:27"
          },
          {
            "label": "erc20Contracts",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:31"
          },
          {
            "label": "erc20ContractIndex",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:34"
          },
          {
            "label": "NFTowner",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:37"
          },
          {
            "label": "withdrawnAmount",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:40"
          },
          {
            "label": "approvedValidator",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:43"
          },
          {
            "label": "validatorCommissions",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Commission)12013_storage))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Commission)12013_storage))": {
            "label": "mapping(address => mapping(uint256 => struct piNFTMethods.Commission))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Commission)12013_storage)": {
            "label": "mapping(uint256 => struct piNFTMethods.Commission)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Commission)12013_storage": {
            "label": "struct piNFTMethods.Commission",
            "members": [
              {
                "label": "commission",
                "type": "t_struct(Share)13318_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isValid",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Share)13318_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "c45c92f40f4b7ea23e8f9d0f018af01708252f7f96a4d2003adb71c44931b594": {
      "address": "0x9C84b334C80662C8Dbc124b68502AE1Eed6f3b9A",
      "txHash": "0x655261c55381a38f8589b9a02c2b7870f5a7c0db020797c229866ff07d68f4b0",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)7686_storage)",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:41"
          },
          {
            "label": "addressToCollectionId",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:43"
          },
          {
            "label": "royaltiesForCollection",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)13318_storage)dyn_storage)",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:46"
          },
          {
            "label": "collectionId",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:48"
          },
          {
            "label": "collectionMethodAddress",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:49"
          },
          {
            "label": "piNFTMethodsAddress",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Share)13318_storage)dyn_storage": {
            "label": "struct LibShare.Share[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)13318_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollectionMeta)7686_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionMeta)7686_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "URI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Share)13318_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "f2d0a813541cc8e8541dd8d91f8e6a2066585c510653eaf396406d00658145cb": {
      "address": "0x207187Bd1e9d5cbD98d12CC9bfc858ee97e7CdFb",
      "txHash": "0x9fd1cbe9743ade64d6043b7cd39f1c4573ba566c8e0f4a9ef1e6cbd28fd68301",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "NFTid",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "NFTlendingBorrowing",
            "src": "contracts/NFTlendingBorrowing.sol:27"
          },
          {
            "label": "AconomyFeeAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "NFTlendingBorrowing",
            "src": "contracts/NFTlendingBorrowing.sol:28"
          },
          {
            "label": "NFTdetails",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_struct(NFTdetail)17971_storage)",
            "contract": "NFTlendingBorrowing",
            "src": "contracts/NFTlendingBorrowing.sol:84"
          },
          {
            "label": "Bids",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidDetail)17994_storage)dyn_storage)",
            "contract": "NFTlendingBorrowing",
            "src": "contracts/NFTlendingBorrowing.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(BidDetail)17994_storage)dyn_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidDetail)17994_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.BidDetail[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTdetail)17971_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.NFTdetail)",
            "numberOfBytes": "32"
          },
          "t_struct(BidDetail)17994_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint32",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "expiration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "ERC20Address",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "Amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "withdrawn",
                "type": "t_bool",
                "offset": 2,
                "slot": "7"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool",
                "offset": 3,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(NFTdetail)17971_storage": {
            "label": "struct NFTlendingBorrowing.NFTdetail",
            "members": [
              {
                "label": "NFTtokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIdOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "duration",
                "type": "t_uint32",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "expiration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expectedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "percent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "listed",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              },
              {
                "label": "repaid",
                "type": "t_bool",
                "offset": 4,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "db464373180f0734662a0f9c63da2c63828963e18e6c811686c2de2b64785788": {
      "address": "0x11c1c2d66ED9Ff0266cd076c1E93dD90B079D631",
      "txHash": "0xdc8131b175f387d14d12d1c0570f7b3b309e48ebebe396a9eef158c5a832bfaf",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_saleIdCounter",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)6093_storage",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:30"
          },
          {
            "label": "_swapIdCounter",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)6093_storage",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:31"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:99"
          },
          {
            "label": "collectionFactoryAddress",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:100"
          },
          {
            "label": "piNFTMethodsAddress",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:101"
          },
          {
            "label": "_tokenMeta",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(TokenMeta)10091_storage)",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:102"
          },
          {
            "label": "Bids",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidOrder)10104_storage)dyn_storage)",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:103"
          },
          {
            "label": "_swaps",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_struct(Swap)10119_storage)",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(BidOrder)10104_storage)dyn_storage": {
            "label": "struct piMarket.BidOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidOrder)10104_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct piMarket.BidOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Swap)10119_storage)": {
            "label": "mapping(uint256 => struct piMarket.Swap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMeta)10091_storage)": {
            "label": "mapping(uint256 => struct piMarket.TokenMeta)",
            "numberOfBytes": "32"
          },
          "t_struct(BidOrder)10104_storage": {
            "label": "struct piMarket.BidOrder",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "saleId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sellerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "buyerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "withdrawn",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)6093_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Swap)10119_storage": {
            "label": "struct piMarket.Swap",
            "members": [
              {
                "label": "initiatorNFTAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "initiator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "initiatorNftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "requestedTokenOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requestedTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "requestedTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(TokenMeta)10091_storage": {
            "label": "struct piMarket.TokenMeta",
            "members": [
              {
                "label": "saleId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenContractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "directSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidSale",
                "type": "t_bool",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_bool",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "bidStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "bidEndTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "currentOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "currency",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
