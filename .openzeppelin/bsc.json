{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xB14E9f145757c41FE67Dc558cE6fa4fDED6E445A",
      "txHash": "0xd4b5f60cda7e777fd451ca745a83b44f994fc4388699c04d39ad91e2a93d1e5c",
      "kind": "uups"
    },
    {
      "address": "0x5482123b4dFe9Ca7bC46C293a396Ba3919B463d4",
      "txHash": "0x2cb6e8c33d1df29e3696a2601b0fbb912b391e0d4a1e6140c8dfc6cbf51ea599",
      "kind": "uups"
    },
    {
      "address": "0xe863156db51dB94252bB36fE3bB843a575363657",
      "txHash": "0x3dd437b7e0b53795742a4bd84e42751c30e48576a43b599001efb741b3f26884",
      "kind": "uups"
    },
    {
      "address": "0xd6592153fc169fDE7F58a6E0277cCc9B939ab3Da",
      "txHash": "0x406419a5435406e223034eb9a2171a130e45e296832d46bc35e40b8e6ee4762c",
      "kind": "uups"
    },
    {
      "address": "0xE31922336Ce3c6Cd65bB4aA707fB62A0445aD6c1",
      "txHash": "0x8054ba17df719bebb5fc583c49a58f7f0e8ed420febaa8d5bdb7079c1c1b52de",
      "kind": "uups"
    },
    {
      "address": "0xE83248fd4e1152B87Ec7E2610dE176F00ad3c39a",
      "txHash": "0x671e7b074a8e9885735aff7d790ecc68df0d4740c6d14112ab9e4db06f7bdb5f",
      "kind": "uups"
    }
  ],
  "impls": {
    "5e17f77158822751dd07c5658dc9e2fc9ef2ff0101b3347c18ac3ee5b1809d5b": {
      "address": "0x99f415db2d20608Ba82CcA828225847561CA8112",
      "txHash": "0xdb7744fd0e3e986b87558cf39f1f1f28699e2c15f72ce31e2f6cfc02c1e09224",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "trustedForwarders",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AconomyERC2771Context",
            "src": "contracts/AconomyERC2771Context.sol:13"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "152",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "piMarketAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:22"
          },
          {
            "label": "erc20Balances",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:25"
          },
          {
            "label": "erc20Contracts",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:29"
          },
          {
            "label": "erc20ContractIndex",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:32"
          },
          {
            "label": "NFTowner",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:35"
          },
          {
            "label": "withdrawnAmount",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:38"
          },
          {
            "label": "approvedValidator",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:41"
          },
          {
            "label": "validatorCommissions",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Commission)12083_storage))",
            "contract": "piNFTMethods",
            "src": "contracts/piNFTMethods.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Commission)12083_storage))": {
            "label": "mapping(address => mapping(uint256 => struct piNFTMethods.Commission))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Commission)12083_storage)": {
            "label": "mapping(uint256 => struct piNFTMethods.Commission)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Commission)12083_storage": {
            "label": "struct piNFTMethods.Commission",
            "members": [
              {
                "label": "commission",
                "type": "t_struct(Share)13398_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isValid",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Share)13398_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "d3c148d8f41d7c19528284bf118ca494cb75735dfb4056326f295d9e1b6a90bc": {
      "address": "0x01E12fc60E04892f075E7c700A3DA6a8e77b4932",
      "txHash": "0x0c24126c140c672b6f6fb5f9c512754cd9158993472dabe69cd3b4eb83ccf26e",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collections",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)7707_storage)",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:41"
          },
          {
            "label": "addressToCollectionId",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:43"
          },
          {
            "label": "royaltiesForCollection",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)13398_storage)dyn_storage)",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:46"
          },
          {
            "label": "collectionId",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:48"
          },
          {
            "label": "collectionMethodAddress",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:49"
          },
          {
            "label": "piNFTMethodsAddress",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CollectionFactory",
            "src": "contracts/CollectionFactory.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Share)13398_storage)dyn_storage": {
            "label": "struct LibShare.Share[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)13398_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollectionMeta)7707_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionMeta)7707_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "URI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Share)13398_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "b01f89f25ba059596fe44a56b245cf9bec938bb03568dff910b9b3351efde275": {
      "address": "0xa827c2fe0Ba194a10FAC9F14c03568ed983c45c4",
      "txHash": "0x5942cd91cbf66ecee5017ec89c2936c19f4724ab12e3fa19981517ff93e5c2c5",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "trustedForwarders",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AconomyERC2771Context",
            "src": "contracts/AconomyERC2771Context.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "452",
            "type": "t_struct(Counter)6093_storage",
            "contract": "piNFT",
            "src": "contracts/piNFT.sol:21"
          },
          {
            "label": "piNFTMethodsAddress",
            "offset": 0,
            "slot": "453",
            "type": "t_address",
            "contract": "piNFT",
            "src": "contracts/piNFT.sol:22"
          },
          {
            "label": "royaltiesByTokenId",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)13398_storage)dyn_storage)",
            "contract": "piNFT",
            "src": "contracts/piNFT.sol:25"
          },
          {
            "label": "royaltiesForValidator",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)13398_storage)dyn_storage)",
            "contract": "piNFT",
            "src": "contracts/piNFT.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Share)13398_storage)dyn_storage": {
            "label": "struct LibShare.Share[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)13398_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)6093_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Share)13398_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "b58cf92a7dcefc1afd73b7c007069cb2be27fa5486e2935a26ce50d5beaaac57": {
      "address": "0x7a3Cb2A59405a90DA796b035993CC34234dEE7e3",
      "txHash": "0x0f4bb1b294bc42278ec81eb5cf11ed9308958a81eef869e37501cd96c7efb11b",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_saleIdCounter",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)6093_storage",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:28"
          },
          {
            "label": "_swapIdCounter",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)6093_storage",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:29"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:97"
          },
          {
            "label": "collectionFactoryAddress",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:98"
          },
          {
            "label": "piNFTMethodsAddress",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:99"
          },
          {
            "label": "piNFTaddress",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:100"
          },
          {
            "label": "_tokenMeta",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_struct(TokenMeta)10143_storage)",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:101"
          },
          {
            "label": "Bids",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidOrder)10156_storage)dyn_storage)",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:102"
          },
          {
            "label": "_swaps",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_struct(Swap)10171_storage)",
            "contract": "piMarket",
            "src": "contracts/piMarket.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(BidOrder)10156_storage)dyn_storage": {
            "label": "struct piMarket.BidOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidOrder)10156_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct piMarket.BidOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Swap)10171_storage)": {
            "label": "mapping(uint256 => struct piMarket.Swap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMeta)10143_storage)": {
            "label": "mapping(uint256 => struct piMarket.TokenMeta)",
            "numberOfBytes": "32"
          },
          "t_struct(BidOrder)10156_storage": {
            "label": "struct piMarket.BidOrder",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "saleId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sellerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "buyerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "withdrawn",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)6093_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Swap)10171_storage": {
            "label": "struct piMarket.Swap",
            "members": [
              {
                "label": "initiatorNFTAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "initiator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "initiatorNftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "requestedTokenOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requestedTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "requestedTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_bool",
                "offset": 20,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(TokenMeta)10143_storage": {
            "label": "struct piMarket.TokenMeta",
            "members": [
              {
                "label": "saleId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenContractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "directSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bidSale",
                "type": "t_bool",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_bool",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "fromCollection",
                "type": "t_bool",
                "offset": 3,
                "slot": "4"
              },
              {
                "label": "bidEndTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "currentOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "currency",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "52157c003cbdee2f691a4fbde8028f1466cf8ad8ab9a104f6a0e8140a878ea34": {
      "address": "0x94e74e9b6389486C0BaFD6EE9CD97Fd3E6ab4F1D",
      "txHash": "0xfdda79f82cb3cb33d1a36b560f915aa924c5317c085f983208b4030cb44d59f7",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "validatorStakes",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_struct(StakeDetail)26169_storage)",
            "contract": "validatorStake",
            "src": "contracts/validatorStake.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(StakeDetail)26169_storage)": {
            "label": "mapping(address => struct validatorStake.StakeDetail)",
            "numberOfBytes": "32"
          },
          "t_struct(StakeDetail)26169_storage": {
            "label": "struct validatorStake.StakeDetail",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "refundedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ERC20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8fead059af844d5367cc52942d206f3fd741d3fc5e5013615c1350f5bda8b5b8": {
      "address": "0x243F07684DC02016d08b293c101673fb6c3Ff554",
      "txHash": "0x18d39bc379af9deeceb95ba2112626b9c6c4f23ae9f9318999c14e768acc29b6",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "NFTid",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "NFTlendingBorrowing",
            "src": "contracts/NFTlendingBorrowing.sol:24"
          },
          {
            "label": "AconomyFeeAddress",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "NFTlendingBorrowing",
            "src": "contracts/NFTlendingBorrowing.sol:25"
          },
          {
            "label": "NFTdetails",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_struct(NFTdetail)12995_storage)",
            "contract": "NFTlendingBorrowing",
            "src": "contracts/NFTlendingBorrowing.sol:82"
          },
          {
            "label": "Bids",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidDetail)13018_storage)dyn_storage)",
            "contract": "NFTlendingBorrowing",
            "src": "contracts/NFTlendingBorrowing.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(BidDetail)13018_storage)dyn_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidDetail)13018_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.BidDetail[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTdetail)12995_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.NFTdetail)",
            "numberOfBytes": "32"
          },
          "t_struct(BidDetail)13018_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint32",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "expiration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "ERC20Address",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "Amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "withdrawn",
                "type": "t_bool",
                "offset": 2,
                "slot": "7"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool",
                "offset": 3,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(NFTdetail)12995_storage": {
            "label": "struct NFTlendingBorrowing.NFTdetail",
            "members": [
              {
                "label": "NFTtokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenIdOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "duration",
                "type": "t_uint32",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "expiration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expectedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "percent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "listed",
                "type": "t_bool",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool",
                "offset": 3,
                "slot": "5"
              },
              {
                "label": "repaid",
                "type": "t_bool",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 5,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
