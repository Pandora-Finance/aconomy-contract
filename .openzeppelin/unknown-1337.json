{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xBA29a9af871eeee1c739E28A13668c5d6801189E",
      "txHash": "0xae1305526b370176326df5b01f13b0cb0d3d03806185b0edb5ef0f144fc32cbf",
      "kind": "uups"
    },
    {
      "address": "0x7e3C5d1c28e8448fc7DE982B17d4bb7056b50877",
      "txHash": "0x89477bbfdb0e0e537ddb755e97092dab6870727835e59c8c45ecb10b09d8afda",
      "kind": "uups"
    },
    {
      "address": "0xB9A4334c2425feA249aee5636E5494f4B46149c4",
      "txHash": "0x2b103a4bff72a5ff010dd7d4440c775bb7d0f1c6bd047033c456d64680c6c72d",
      "kind": "uups"
    },
    {
      "address": "0x89AFfadeeeCF69A64B921AbC3a82f541fDc2E8F6",
      "txHash": "0x8a4ffbd63964369273b4410b10d9afd8da9453d4eb81537658217b418ca01532",
      "kind": "uups"
    },
    {
      "address": "0x1C00Cc159DFd6C94d226BA101D58bE282A704bC3",
      "txHash": "0x58be401e30ae65b49bf5f8c6ce7a9323ee920a277f49c8f7dcc162c18cd73b05",
      "kind": "uups"
    },
    {
      "address": "0x050b06c83705569Ef2d6813ED6750569AAA8AAe4",
      "txHash": "0xc8d0cd3f892e1c94634ebb3fa5aca2a8a128fc79504d98e10c560831471c0f50",
      "kind": "uups"
    },
    {
      "address": "0x8e8A6B44c666C8e81A248C9ca65393d735AEeB07",
      "txHash": "0x9abcec31514b16d85d0510d466d45968d98bda9737c44d0453c1fe650e6f3eca",
      "kind": "uups"
    },
    {
      "address": "0xbBF5A4A01a90798b5Fa486b105Ca0A6129d303B7",
      "txHash": "0xb318ce04548744fda6468a3dc6f0102f4af15d7519ac053ed9a127c33c7744fe",
      "kind": "uups"
    },
    {
      "address": "0xfe05F28a4354a18F6fd7035bf3052b6369185765",
      "txHash": "0xd8d4b44db37e6e68e346b8d9fcaece7531f2ba71b15f97fe30338603f6f98bea",
      "kind": "uups"
    },
    {
      "address": "0x7fAD91F11E28836D1C6328c5E9445F3B6870F15E",
      "txHash": "0xffcb665bcef531187a93cb75deacebd3208b504b32d64eb61dcfddcd837e5850",
      "kind": "uups"
    },
    {
      "address": "0x380D2d6197825783e5cdF2ba50759DBC0b202625",
      "txHash": "0x8c625580386d36aa4f4b93eac70d794bcc53d37e9cb6aaa3325e4b975ec465a6",
      "kind": "uups"
    },
    {
      "address": "0xE8b6AA3314F73425e12Dd558F446B88aB80F9dA7",
      "txHash": "0xbef24d3860ce26bb9ad6abf50df397fecf7a5f095490a429a59d942acfbe9ec7",
      "kind": "uups"
    },
    {
      "address": "0x7c4C6091315f5B8C95C502810A3d1d6d5D117F5f",
      "txHash": "0x4cdd21e2b7f85db579adce767dd5e0f2aa44606e66e18977fa00380d5811b6b8",
      "kind": "uups"
    },
    {
      "address": "0xccE9048C50A9Ddd5a0cCC483330230C9CfeC0A20",
      "txHash": "0x2d24275d6aafaf6733214e675e4ada7340dd7c7672db30f9b28bf20251062c13",
      "kind": "uups"
    },
    {
      "address": "0xdc5e0AaDF289f4315892B7367545017495e5b486",
      "txHash": "0x266d6ab63b672dc75e478920a87d8681d49457416a182110e8738260c99ccfc6",
      "kind": "uups"
    },
    {
      "address": "0x795481d4434874A3d921517fbD97284CA5163741",
      "txHash": "0x6beb9a98dac1562ba09a9d6816f79534c2b5766c5c680266c299d52ddef13113",
      "kind": "uups"
    },
    {
      "address": "0xd7C5D8D22F980A58e4a593B66ca46360E44A5E13",
      "txHash": "0x1817f271dd8d5f95756e298d3ab414e90e940c2087c0797cc325aefdb9142c8d",
      "kind": "uups"
    },
    {
      "address": "0x6b6563EF59EfFE9a0a34498816B4DD036A5f5567",
      "txHash": "0x1143c3adb2eb6ad9f11dd50e77dcae91a9fde257e123d47b83ac4b0db0bcd077",
      "kind": "uups"
    },
    {
      "address": "0xB9f78ce5397844d1ca89a9183426611370F4576e",
      "txHash": "0xa5721c2703ea7894157834f9542462d60bb0f1f6f9800ec665331b47ca23d47d",
      "kind": "uups"
    },
    {
      "address": "0x48e18663bF932F4bB8880F04872D45e67163ce2E",
      "txHash": "0x963b7176c197a109d0ed6c7c4c53360f0f10caa0cb17148e86ea3714ced27975",
      "kind": "uups"
    },
    {
      "address": "0x03A3b1564bAdC448d41475E39C566A208705E339",
      "txHash": "0xcd4f34cda86d0fb1a06c9717f520cb859826946dd64f3725a37fb8629566585f",
      "kind": "uups"
    },
    {
      "address": "0x9Afe1e944294A03450d024A0155615FD17EA9ae2",
      "txHash": "0xf35049ccc400c4626eab10b7a1c9eab90e918db09a7b70ea79b662f210e4ae4f",
      "kind": "uups"
    },
    {
      "address": "0x8F6f65Cdd8946424B3C8683b5837a6357384478c",
      "txHash": "0x90393ceb5c946faa65871aece39a003c97348b56a78e355ce9de6a95f066fb5b",
      "kind": "uups"
    },
    {
      "address": "0xFb129f2B51edEE64E37252f741a10Df2C839908D",
      "txHash": "0x11b79b040c0f1f2727ca7a2f2067157ee1cf9a443aeb4f7bcb1725192fff187a",
      "kind": "uups"
    },
    {
      "address": "0x2358C30Fc971f17B7141cEFBdfd326106eF11e4A",
      "txHash": "0xf064b5e17a4e96e34188d6b249936ff216a1cdf21f9f169f9f330104e4fe0451",
      "kind": "uups"
    },
    {
      "address": "0xf0B88f6BAC2ed014fCE41F4EBaD6aaBdf24A8eC6",
      "txHash": "0x45051669600bcf26feb8c0a0fd1a182ce6886d955dc9e39ee6f3892e45db8806",
      "kind": "uups"
    },
    {
      "address": "0x50ddc47eD85eac6a6BE00Aa65aF41582B2439d03",
      "txHash": "0xae956c29609e250c5341a793cafe20cfdceda705441c9ae93e2f93421a055f74",
      "kind": "uups"
    },
    {
      "address": "0xA449bA6F49321e340b222Af429A0D0B0b6bbaFeF",
      "txHash": "0x2ccf61164c3be1176593b6b3bd84fe5450ad57c60ee795a7a145c639559da219",
      "kind": "uups"
    },
    {
      "address": "0x0a6090442E3b4418F548175c274269331B315a50",
      "txHash": "0x94f198d55eb612c35ae137401ff3134a4afb9d6f72b15cd3ccd406a8b61ccb21",
      "kind": "uups"
    },
    {
      "address": "0x2c4c8036BB0dB149768001c3705D47E4F3BdCbFc",
      "txHash": "0xa6a8103b7ee72f874b89221d71e3ce0273ebdde42cb78f9f729006f0ac78c33e",
      "kind": "uups"
    },
    {
      "address": "0x466fbb562722ecbd9c8fcF4f950B8989C35a90c7",
      "txHash": "0xbcc29bd1dbd884b77a3bfbe2574b1431b4e931a0f6f48c3857e493a0310973be",
      "kind": "uups"
    },
    {
      "address": "0x2be3aFACE7e456C7d838600Dce93cE41e592EaD0",
      "txHash": "0x286d6128f0821ea175f0a3f356a092530b1d8fff5c363d34256ea48270357f5b",
      "kind": "uups"
    },
    {
      "address": "0x4ACf78FBdF83EA66714bDA824D7590932F4De780",
      "txHash": "0x9d08922dbe2a773a86235d5b3953aa279f6228af4569f47139630f6b297542f9",
      "kind": "uups"
    },
    {
      "address": "0xd6De36B184C606ffA9510Af1C30E17b121524f92",
      "txHash": "0x72252c3dd7d3e37b6d76cf030c9228ce9571b365d7079e18a3e20c65c7a3dcf1",
      "kind": "uups"
    },
    {
      "address": "0xf7C96ab595648B3289beC381c2A35b0693daA9d9",
      "txHash": "0x5998c34a8a12256562bc8b389abd71e59a51d33fb74f29cb329b3111d7d7a7b9",
      "kind": "uups"
    },
    {
      "address": "0x7DAd4Ce42Df410D8766aB8a5d5E1C6d0334Bf22f",
      "txHash": "0x9e7836243f99aee1b9dd1e48544d841428f6c2c96672a20934c630d7c5ef82c2",
      "kind": "uups"
    },
    {
      "address": "0x2B6236B2bDA5139B79113a0290A4c30e77f5eb5f",
      "txHash": "0xeabaca469f403f53ac93cd4453ff644ec537fd1da07c8d43fd8af7e475f650d6",
      "kind": "uups"
    },
    {
      "address": "0xB8147cF19eFdC6651Df73A4d21eEa9380d698e62",
      "txHash": "0x8a2ff5dd4a4da9e468f1aa238012db6445b62532c265135ea9fdbadec06800d5",
      "kind": "uups"
    },
    {
      "address": "0x4183deFfE7cD1DEe9Cd679E07C13b20f5B3614d3",
      "txHash": "0xdfaf5ce55b99cfde6b34c8f0e912b43aef406d5c9cb1ce823c01ca19890e97d8",
      "kind": "uups"
    },
    {
      "address": "0xca27A85F500a799cE74ab06E66790355a13465e2",
      "txHash": "0x0e7a21845270eb428f899f470e5e12069140176f618c6626414647b8b5e3874d",
      "kind": "uups"
    },
    {
      "address": "0x98D3C2dc7137aDBc5b460CE8C0E379FfA042ee8E",
      "txHash": "0xe1073231c59750ff1bd184753686e80f4431a50bf1e569677df85f57b7c4a3f6",
      "kind": "uups"
    },
    {
      "address": "0x73E5171ffCE911c1D7585Dacd610fA8647Cb36ee",
      "txHash": "0x8afc783bd7bf1fd47fe5ea463d0e9a9be2ffbdfd19f3266c35e2a607c8b288cc",
      "kind": "uups"
    },
    {
      "address": "0x463DAcad39e1e4de50855144C51F1dcEC7f07D51",
      "txHash": "0x6f4122e19af39ba729c41a50d1e609869dd8239c673104fa9506018871193a7a",
      "kind": "uups"
    },
    {
      "address": "0xBA465E19db30d70E43687395232A0D83289d9568",
      "txHash": "0xb6015cbc5f2ee766373fa7f77129ade19b76644dcf6d6a817cc5da2e0fa151a4",
      "kind": "uups"
    },
    {
      "address": "0x83af8e4661cA70a1fBFdC27d21Ee22ed8a94b8Cf",
      "txHash": "0x3f08945bb019b53ac5d4f148ecde8df5816c3c49173eda2d872a76d79f7fdbdb",
      "kind": "uups"
    },
    {
      "address": "0x275b7214915497Ee06Bfbdc014C16EF5f601ed3e",
      "txHash": "0xb01f4b2391588335eee1d3da6041517c01f1bbf4446f0a2a27b4f747bca9927a",
      "kind": "uups"
    },
    {
      "address": "0x50e0Ed0BD0476Ae33ea42D36b60AE417E313E4F3",
      "txHash": "0xa22f8950d4bc1b5071c6315aab94cb13ae17583083aded36ab8b130b947ded18",
      "kind": "uups"
    },
    {
      "address": "0xB271D4dff47Fe8423901bdc2cF6de0C3C1af8FDe",
      "txHash": "0x1d68e28762c5a2f704933675f2f1771f7877d49a16bf6d6b7f8b036465ee807d",
      "kind": "uups"
    },
    {
      "address": "0x7B09411936D8bFd8383482c43c55317a40c795A6",
      "txHash": "0x54e5032fcd4c5f9a9994e9563f8b60f535fa9a4602b8493c029b8e1961d76309",
      "kind": "uups"
    }
  ],
  "impls": {
    "1d99dab652fa88778f55494961589f2571d3d2aa810c7aad3105003a5a5f29be": {
      "address": "0x50e0Ed0BD0476Ae33ea42D36b60AE417E313E4F3",
      "txHash": "0xa6ba5a68fcc64465c2d7ab5efaf35316567f9c1707b32a22844e64c50cd1ed02",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "AconomyERC2771Context",
            "label": "trustedForwarders",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/AconomyERC2771Context.sol:13"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "piNFTMethods",
            "label": "erc20Balances",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/piNFTMethods.sol:22"
          },
          {
            "contract": "piNFTMethods",
            "label": "erc20Contracts",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/piNFTMethods.sol:26"
          },
          {
            "contract": "piNFTMethods",
            "label": "erc20ContractIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/piNFTMethods.sol:29"
          },
          {
            "contract": "piNFTMethods",
            "label": "NFTowner",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "../project:/contracts/piNFTMethods.sol:32"
          },
          {
            "contract": "piNFTMethods",
            "label": "withdrawnAmount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/piNFTMethods.sol:35"
          },
          {
            "contract": "piNFTMethods",
            "label": "approvedValidator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "../project:/contracts/piNFTMethods.sol:38"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => address[]))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "16e27173e3c8b7b8139edfd68c6519d0978fec57a1217c3920d763faaf297f6f": {
      "address": "0x482af87CE1550B2ad99544007D0EE24a8c49636B",
      "txHash": "0xd19820fd26e37ee3e649bba296afcd39f4e878acfd0fb1062ae8ebe106f955c7",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "AconomyERC2771Context",
            "label": "trustedForwarders",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/AconomyERC2771Context.sol:13"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "piNFTMethods",
            "label": "erc20Balances",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/piNFTMethods.sol:22"
          },
          {
            "contract": "piNFTMethods",
            "label": "erc20Contracts",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/piNFTMethods.sol:26"
          },
          {
            "contract": "piNFTMethods",
            "label": "erc20ContractIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/piNFTMethods.sol:29"
          },
          {
            "contract": "piNFTMethods",
            "label": "NFTowner",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "../project:/contracts/piNFTMethods.sol:32"
          },
          {
            "contract": "piNFTMethods",
            "label": "withdrawnAmount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/piNFTMethods.sol:35"
          },
          {
            "contract": "piNFTMethods",
            "label": "approvedValidator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "../project:/contracts/piNFTMethods.sol:38"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => address[]))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c57a90cd8d04e4b8a722491cc67fad5f4d2d12a123f7aeb5926fc9fc4bb37f6e": {
      "address": "0x134797b4c4838052C00F23790C14da76D366E874",
      "txHash": "0x185b00eda8e8dc38c7b94e8180edd0fdbe7c674f3516f5e7bf212ae249ff7db9",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "AconomyERC2771Context",
            "label": "trustedForwarders",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/AconomyERC2771Context.sol:13"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "piNFTMethods",
            "label": "erc20Balances",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/piNFTMethods.sol:22"
          },
          {
            "contract": "piNFTMethods",
            "label": "erc20Contracts",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/piNFTMethods.sol:26"
          },
          {
            "contract": "piNFTMethods",
            "label": "erc20ContractIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "../project:/contracts/piNFTMethods.sol:29"
          },
          {
            "contract": "piNFTMethods",
            "label": "NFTowner",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "../project:/contracts/piNFTMethods.sol:32"
          },
          {
            "contract": "piNFTMethods",
            "label": "withdrawnAmount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/piNFTMethods.sol:35"
          },
          {
            "contract": "piNFTMethods",
            "label": "approvedValidator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "../project:/contracts/piNFTMethods.sol:38"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => address[]))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "1a672b0716e7d2f2909c76ae9cae8962383dae6620b1e56e03cae4d607f905e7": {
      "address": "0xB36Ab4EBb182abCa4E08c78Be20Fd35215eA8A69",
      "txHash": "0x05ba492491ee9932f9c014d95c4c6f06f53a7ea35848670c8bdcb0a65c4f3ba7",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CollectionFactory",
            "label": "collections",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:36"
          },
          {
            "contract": "CollectionFactory",
            "label": "addressToCollectionId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CollectionFactory.sol:38"
          },
          {
            "contract": "CollectionFactory",
            "label": "royaltiesForCollection",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)23186_storage)dyn_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:41"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionId",
            "type": "t_uint256",
            "src": "../project:/contracts/CollectionFactory.sol:43"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionMethodAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:44"
          },
          {
            "contract": "CollectionFactory",
            "label": "piNFTMethodsAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(CollectionMeta)10628_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)23186_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])"
          },
          "t_array(t_struct(Share)23186_storage)dyn_storage": {
            "label": "struct LibShare.Share[]"
          },
          "t_struct(Share)23186_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "55fc3a859ccf463c4ac7d832cebb055ae0e6d8fe5afd26f7a7e2b2fa0d268787": {
      "address": "0xc080fc0D13C6C58439a264Fa8669E16eAc21A3Fb",
      "txHash": "0xe0ceea1bbb466e8f935e882a81893503c675ad225ca56abeb47b10072df4e1aa",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CollectionFactory",
            "label": "collections",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:36"
          },
          {
            "contract": "CollectionFactory",
            "label": "addressToCollectionId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CollectionFactory.sol:38"
          },
          {
            "contract": "CollectionFactory",
            "label": "royaltiesForCollection",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)23226_storage)dyn_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:41"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionId",
            "type": "t_uint256",
            "src": "../project:/contracts/CollectionFactory.sol:43"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionMethodAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:44"
          },
          {
            "contract": "CollectionFactory",
            "label": "piNFTMethodsAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(CollectionMeta)10628_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)23226_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])"
          },
          "t_array(t_struct(Share)23226_storage)dyn_storage": {
            "label": "struct LibShare.Share[]"
          },
          "t_struct(Share)23226_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3c6e1b96a5181af93a0fd0e131540ed63957efabf041380dbfa2168d9db425dc": {
      "address": "0x0d06E4625a0b3EF42Bb0D2bc246D0968e98D5bE4",
      "txHash": "0xf6ce149cbccd146eadc35a3158c125591a9e438bf5971271c376e7b375165fd0",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "poolRegistry",
            "label": "attestationService",
            "type": "t_contract(AttestationServices)10598",
            "src": "../project:/contracts/poolRegistry.sol:20"
          },
          {
            "contract": "poolRegistry",
            "label": "lenderAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:21"
          },
          {
            "contract": "poolRegistry",
            "label": "borrowerAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:22"
          },
          {
            "contract": "poolRegistry",
            "label": "_attestingSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:23"
          },
          {
            "contract": "poolRegistry",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:24"
          },
          {
            "contract": "poolRegistry",
            "label": "FundingPoolAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:25"
          },
          {
            "contract": "poolRegistry",
            "label": "ClosedPools",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/poolRegistry.sol:27"
          },
          {
            "contract": "poolRegistry",
            "label": "poolCount",
            "type": "t_uint256",
            "src": "../project:/contracts/poolRegistry.sol:29"
          },
          {
            "contract": "poolRegistry",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(poolDetail)22049_storage)",
            "src": "../project:/contracts/poolRegistry.sol:65"
          }
        ],
        "types": {
          "t_contract(AttestationServices)10598": {
            "label": "contract AttestationServices"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(poolDetail)22049_storage)": {
            "label": "mapping(uint256 => struct poolRegistry.poolDetail)"
          },
          "t_struct(poolDetail)22049_storage": {
            "label": "struct poolRegistry.poolDetail",
            "members": [
              {
                "label": "poolAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "poolFeePercent",
                "type": "t_uint16"
              },
              {
                "label": "lenderAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedLendersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "lenderAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "paymentCycleDuration",
                "type": "t_uint32"
              },
              {
                "label": "paymentDefaultDuration",
                "type": "t_uint32"
              },
              {
                "label": "loanExpirationTime",
                "type": "t_uint32"
              },
              {
                "label": "borrowerAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedBorrowersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "borrowerAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(AddressSet)9612_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "ff4e1f559dc49d2449d564413c87182ff24362a0b10f173b5e8ab92e332f6aa2": {
      "address": "0xc663A1f50d82c0343ee20c14BB4B227395e4513E",
      "txHash": "0x1c57fe5d3272db64a0a0e4df723cac93e3b65045d793da5198ff3b6e3e0a6214",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CollectionFactory",
            "label": "collections",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:36"
          },
          {
            "contract": "CollectionFactory",
            "label": "addressToCollectionId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CollectionFactory.sol:38"
          },
          {
            "contract": "CollectionFactory",
            "label": "royaltiesForCollection",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)23229_storage)dyn_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:41"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionId",
            "type": "t_uint256",
            "src": "../project:/contracts/CollectionFactory.sol:43"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionMethodAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:44"
          },
          {
            "contract": "CollectionFactory",
            "label": "piNFTMethodsAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(CollectionMeta)10628_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)23229_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])"
          },
          "t_array(t_struct(Share)23229_storage)dyn_storage": {
            "label": "struct LibShare.Share[]"
          },
          "t_struct(Share)23229_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4ea007982a27ed41369cdf84a88f9d34adcc4ce7c1be297d6a9c1dc15db4fb37": {
      "address": "0xFe9675Da6DCe7dB6E197E7F7768E50BA932E9635",
      "txHash": "0x2e8aa97c20eb7c75cfd5e837a1baddcb56910c200ce15ad6e2cf7205a3df9076",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "poolRegistry",
            "label": "attestationService",
            "type": "t_contract(AttestationServices)10598",
            "src": "../project:/contracts/poolRegistry.sol:20"
          },
          {
            "contract": "poolRegistry",
            "label": "lenderAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:21"
          },
          {
            "contract": "poolRegistry",
            "label": "borrowerAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:22"
          },
          {
            "contract": "poolRegistry",
            "label": "_attestingSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:23"
          },
          {
            "contract": "poolRegistry",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:24"
          },
          {
            "contract": "poolRegistry",
            "label": "FundingPoolAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:25"
          },
          {
            "contract": "poolRegistry",
            "label": "ClosedPools",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/poolRegistry.sol:27"
          },
          {
            "contract": "poolRegistry",
            "label": "poolCount",
            "type": "t_uint256",
            "src": "../project:/contracts/poolRegistry.sol:29"
          },
          {
            "contract": "poolRegistry",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(poolDetail)22053_storage)",
            "src": "../project:/contracts/poolRegistry.sol:65"
          }
        ],
        "types": {
          "t_contract(AttestationServices)10598": {
            "label": "contract AttestationServices"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(poolDetail)22053_storage)": {
            "label": "mapping(uint256 => struct poolRegistry.poolDetail)"
          },
          "t_struct(poolDetail)22053_storage": {
            "label": "struct poolRegistry.poolDetail",
            "members": [
              {
                "label": "poolAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "poolFeePercent",
                "type": "t_uint16"
              },
              {
                "label": "lenderAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedLendersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "lenderAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "paymentCycleDuration",
                "type": "t_uint32"
              },
              {
                "label": "paymentDefaultDuration",
                "type": "t_uint32"
              },
              {
                "label": "loanExpirationTime",
                "type": "t_uint32"
              },
              {
                "label": "borrowerAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedBorrowersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "borrowerAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(AddressSet)9612_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "2f6cca2f01f8bfd9c102b78c8ac890b326c0ebda91f60c706cbf6772fca18b58": {
      "address": "0x3da6607D3d6175a0b2276A7ff0f6F4D37638F85b",
      "txHash": "0xe253abde16805a24da3007b30a4cc17a8d8a443d48c9f344c2e9bd0be4504bbe",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "poolStorage",
            "label": "loanId",
            "type": "t_uint256",
            "src": "../project:/contracts/poolStorage.sol:14"
          },
          {
            "contract": "poolStorage",
            "label": "loans",
            "type": "t_mapping(t_uint256,t_struct(Loan)23189_storage)",
            "src": "../project:/contracts/poolStorage.sol:17"
          },
          {
            "contract": "poolStorage",
            "label": "poolLoans",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:20"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerActiveLoans",
            "type": "t_mapping(t_address,t_struct(UintSet)9769_storage)",
            "src": "../project:/contracts/poolStorage.sol:100"
          },
          {
            "contract": "poolStorage",
            "label": "totalERC20Amount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:104"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerLoans",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/poolStorage.sol:107"
          },
          {
            "contract": "poolStorage",
            "label": "loanDefaultDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:108"
          },
          {
            "contract": "poolStorage",
            "label": "loanExpirationDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:109"
          },
          {
            "contract": "poolStorage",
            "label": "lenderLendAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/poolStorage.sol:113"
          },
          {
            "contract": "poolStorage",
            "label": "poolRegistryAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:115"
          },
          {
            "contract": "poolStorage",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:116"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(Loan)23189_storage)": {
            "label": "mapping(uint256 => struct poolStorage.Loan)"
          },
          "t_struct(Loan)23189_storage": {
            "label": "struct poolStorage.Loan",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "poolId",
                "type": "t_uint256"
              },
              {
                "label": "loanDetails",
                "type": "t_struct(LoanDetails)23158_storage"
              },
              {
                "label": "terms",
                "type": "t_struct(Terms)23171_storage"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)23134"
              }
            ]
          },
          "t_struct(LoanDetails)23158_storage": {
            "label": "struct poolStorage.LoanDetails",
            "members": [
              {
                "label": "lendingToken",
                "type": "t_contract(ERC20)4597"
              },
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "totalRepaid",
                "type": "t_struct(Payment)23139_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "lastRepaidTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "loanDuration",
                "type": "t_uint32"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              }
            ]
          },
          "t_struct(Terms)23171_storage": {
            "label": "struct poolStorage.Terms",
            "members": [
              {
                "label": "paymentCycleAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyCycleInterest",
                "type": "t_uint256"
              },
              {
                "label": "paymentCycle",
                "type": "t_uint32"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "installments",
                "type": "t_uint32"
              },
              {
                "label": "installmentsPaid",
                "type": "t_uint32"
              }
            ]
          },
          "t_enum(LoanState)23134": {
            "label": "enum poolStorage.LoanState",
            "members": [
              "PENDING",
              "CANCELLED",
              "ACCEPTED",
              "PAID"
            ]
          },
          "t_contract(ERC20)4597": {
            "label": "contract ERC20"
          },
          "t_struct(Payment)23139_storage": {
            "label": "struct poolStorage.Payment",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)9769_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)9769_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "efc5c5be86a2b9f86a6924952f3d53ff54e47f6bae80b770396e428f5b9190f9": {
      "address": "0xdb6DA7e7976b75bA5018bfC256da7f241bdb0e35",
      "txHash": "0xb8d2ddb43e26756091535e99816ab545a21f3da3912d9cf70eb2a462d14927d0",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTid",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:19"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:20"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTdetails",
            "type": "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:73"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:76"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.NFTdetail)"
          },
          "t_struct(NFTdetail)16370_storage": {
            "label": "struct NFTlendingBorrowing.NFTdetail",
            "members": [
              {
                "label": "NFTtokenId",
                "type": "t_uint256"
              },
              {
                "label": "tokenIdOwner",
                "type": "t_address"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expectedAmount",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "listed",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              },
              {
                "label": "repaid",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.BidDetail[])"
          },
          "t_array(t_struct(BidDetail)16391_storage)dyn_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail[]"
          },
          "t_struct(BidDetail)16391_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expiration",
                "type": "t_uint256"
              },
              {
                "label": "bidderAddress",
                "type": "t_address"
              },
              {
                "label": "ERC20Address",
                "type": "t_address"
              },
              {
                "label": "Amount",
                "type": "t_uint256"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "483b506de08cf4e19b4a25f60058bfcaf155f3f54553e4824304aa42be28a6ee": {
      "address": "0x99611F08990c14a9A5619d01ab279e6fEE697AFE",
      "txHash": "0xc112012dd1bb1701b82b0ff8afbc6814644759933b8496ef916757025ca81581",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "piMarket",
            "label": "_saleIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:23"
          },
          {
            "contract": "piMarket",
            "label": "_swapIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:24"
          },
          {
            "contract": "piMarket",
            "label": "feeAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:92"
          },
          {
            "contract": "piMarket",
            "label": "collectionFactoryAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:93"
          },
          {
            "contract": "piMarket",
            "label": "_tokenMeta",
            "type": "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)",
            "src": "../project:/contracts/piMarket.sol:94"
          },
          {
            "contract": "piMarket",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)",
            "src": "../project:/contracts/piMarket.sol:95"
          },
          {
            "contract": "piMarket",
            "label": "_swaps",
            "type": "t_mapping(t_uint256,t_struct(Swap)17616_storage)",
            "src": "../project:/contracts/piMarket.sol:96"
          }
        ],
        "types": {
          "t_struct(Counter)6289_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)": {
            "label": "mapping(uint256 => struct piMarket.TokenMeta)"
          },
          "t_struct(TokenMeta)17588_storage": {
            "label": "struct piMarket.TokenMeta",
            "members": [
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "tokenContractAddress",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "directSale",
                "type": "t_bool"
              },
              {
                "label": "bidSale",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "bidStartTime",
                "type": "t_uint256"
              },
              {
                "label": "bidEndTime",
                "type": "t_uint256"
              },
              {
                "label": "currentOwner",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct piMarket.BidOrder[])"
          },
          "t_array(t_struct(BidOrder)17601_storage)dyn_storage": {
            "label": "struct piMarket.BidOrder[]"
          },
          "t_struct(BidOrder)17601_storage": {
            "label": "struct piMarket.BidOrder",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "sellerAddress",
                "type": "t_address"
              },
              {
                "label": "buyerAddress",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Swap)17616_storage)": {
            "label": "mapping(uint256 => struct piMarket.Swap)"
          },
          "t_struct(Swap)17616_storage": {
            "label": "struct piMarket.Swap",
            "members": [
              {
                "label": "initiatorNFTAddress",
                "type": "t_address"
              },
              {
                "label": "initiator",
                "type": "t_address"
              },
              {
                "label": "initiatorNftId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenOwner",
                "type": "t_address"
              },
              {
                "label": "requestedTokenId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "44ee265bd89c334a74732a94eaddab09ade80010a296e18e3d8ec1c6e570b668": {
      "address": "0xb00f4608418C16bdAcb598becb1Baa6910a17a0d",
      "txHash": "0x0bfbd746682155f85099751d597ec4cc1de9ecfa533dec7436c9a4c3acb4bb47",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CollectionFactory",
            "label": "collections",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:36"
          },
          {
            "contract": "CollectionFactory",
            "label": "addressToCollectionId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CollectionFactory.sol:38"
          },
          {
            "contract": "CollectionFactory",
            "label": "royaltiesForCollection",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)23229_storage)dyn_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:41"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionId",
            "type": "t_uint256",
            "src": "../project:/contracts/CollectionFactory.sol:43"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionMethodAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:44"
          },
          {
            "contract": "CollectionFactory",
            "label": "piNFTMethodsAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(CollectionMeta)10628_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)23229_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])"
          },
          "t_array(t_struct(Share)23229_storage)dyn_storage": {
            "label": "struct LibShare.Share[]"
          },
          "t_struct(Share)23229_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f744167a3f8b0d16d2921a877b31d906e3be163a2c21660d3bf6a3b2d59b5743": {
      "address": "0x08dD5DeFE0DDC463f9D6d4Ce1AE055A97950470d",
      "txHash": "0xf0bf47dfae9c49dac63fa7280f481a3c9b8873e6557269e2d40914d90b6f4d63",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "poolRegistry",
            "label": "attestationService",
            "type": "t_contract(AttestationServices)10598",
            "src": "../project:/contracts/poolRegistry.sol:20"
          },
          {
            "contract": "poolRegistry",
            "label": "lenderAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:21"
          },
          {
            "contract": "poolRegistry",
            "label": "borrowerAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:22"
          },
          {
            "contract": "poolRegistry",
            "label": "_attestingSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:23"
          },
          {
            "contract": "poolRegistry",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:24"
          },
          {
            "contract": "poolRegistry",
            "label": "FundingPoolAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:25"
          },
          {
            "contract": "poolRegistry",
            "label": "ClosedPools",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/poolRegistry.sol:27"
          },
          {
            "contract": "poolRegistry",
            "label": "poolCount",
            "type": "t_uint256",
            "src": "../project:/contracts/poolRegistry.sol:29"
          },
          {
            "contract": "poolRegistry",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(poolDetail)22053_storage)",
            "src": "../project:/contracts/poolRegistry.sol:65"
          }
        ],
        "types": {
          "t_contract(AttestationServices)10598": {
            "label": "contract AttestationServices"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(poolDetail)22053_storage)": {
            "label": "mapping(uint256 => struct poolRegistry.poolDetail)"
          },
          "t_struct(poolDetail)22053_storage": {
            "label": "struct poolRegistry.poolDetail",
            "members": [
              {
                "label": "poolAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "poolFeePercent",
                "type": "t_uint16"
              },
              {
                "label": "lenderAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedLendersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "lenderAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "paymentCycleDuration",
                "type": "t_uint32"
              },
              {
                "label": "paymentDefaultDuration",
                "type": "t_uint32"
              },
              {
                "label": "loanExpirationTime",
                "type": "t_uint32"
              },
              {
                "label": "borrowerAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedBorrowersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "borrowerAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(AddressSet)9612_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "25368d56ea96b39481be197eff8ec52b6c69077552326ef93a7eb2a3b3239ded": {
      "address": "0xaDfBAEF8802649e53D523e528b298978c1925434",
      "txHash": "0x898dd308fce0268e0eeaaf69eb8774cf06383cd73c2e78c75300ad454ecf2918",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "poolStorage",
            "label": "loanId",
            "type": "t_uint256",
            "src": "../project:/contracts/poolStorage.sol:14"
          },
          {
            "contract": "poolStorage",
            "label": "loans",
            "type": "t_mapping(t_uint256,t_struct(Loan)23189_storage)",
            "src": "../project:/contracts/poolStorage.sol:17"
          },
          {
            "contract": "poolStorage",
            "label": "poolLoans",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:20"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerActiveLoans",
            "type": "t_mapping(t_address,t_struct(UintSet)9769_storage)",
            "src": "../project:/contracts/poolStorage.sol:100"
          },
          {
            "contract": "poolStorage",
            "label": "totalERC20Amount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:104"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerLoans",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/poolStorage.sol:107"
          },
          {
            "contract": "poolStorage",
            "label": "loanDefaultDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:108"
          },
          {
            "contract": "poolStorage",
            "label": "loanExpirationDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:109"
          },
          {
            "contract": "poolStorage",
            "label": "lenderLendAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/poolStorage.sol:113"
          },
          {
            "contract": "poolStorage",
            "label": "poolRegistryAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:115"
          },
          {
            "contract": "poolStorage",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:116"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(Loan)23189_storage)": {
            "label": "mapping(uint256 => struct poolStorage.Loan)"
          },
          "t_struct(Loan)23189_storage": {
            "label": "struct poolStorage.Loan",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "poolId",
                "type": "t_uint256"
              },
              {
                "label": "loanDetails",
                "type": "t_struct(LoanDetails)23158_storage"
              },
              {
                "label": "terms",
                "type": "t_struct(Terms)23171_storage"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)23134"
              }
            ]
          },
          "t_struct(LoanDetails)23158_storage": {
            "label": "struct poolStorage.LoanDetails",
            "members": [
              {
                "label": "lendingToken",
                "type": "t_contract(ERC20)4597"
              },
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "totalRepaid",
                "type": "t_struct(Payment)23139_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "lastRepaidTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "loanDuration",
                "type": "t_uint32"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              }
            ]
          },
          "t_struct(Terms)23171_storage": {
            "label": "struct poolStorage.Terms",
            "members": [
              {
                "label": "paymentCycleAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyCycleInterest",
                "type": "t_uint256"
              },
              {
                "label": "paymentCycle",
                "type": "t_uint32"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "installments",
                "type": "t_uint32"
              },
              {
                "label": "installmentsPaid",
                "type": "t_uint32"
              }
            ]
          },
          "t_enum(LoanState)23134": {
            "label": "enum poolStorage.LoanState",
            "members": [
              "PENDING",
              "CANCELLED",
              "ACCEPTED",
              "PAID"
            ]
          },
          "t_contract(ERC20)4597": {
            "label": "contract ERC20"
          },
          "t_struct(Payment)23139_storage": {
            "label": "struct poolStorage.Payment",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)9769_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)9769_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "46c38c06207ab7ce8711f7f41e97e8488bfb3afec90210aebe278bc488eb3e6d": {
      "address": "0x8ca2c10861a8D160B2dB98545F2eb4fB2C144C27",
      "txHash": "0x70239b4527232b5a0c50e25d213fcfb60b0f09e6e8393875537d1bb9c59854a5",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTid",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:19"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:20"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTdetails",
            "type": "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:73"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:76"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.NFTdetail)"
          },
          "t_struct(NFTdetail)16370_storage": {
            "label": "struct NFTlendingBorrowing.NFTdetail",
            "members": [
              {
                "label": "NFTtokenId",
                "type": "t_uint256"
              },
              {
                "label": "tokenIdOwner",
                "type": "t_address"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expectedAmount",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "listed",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              },
              {
                "label": "repaid",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.BidDetail[])"
          },
          "t_array(t_struct(BidDetail)16391_storage)dyn_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail[]"
          },
          "t_struct(BidDetail)16391_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expiration",
                "type": "t_uint256"
              },
              {
                "label": "bidderAddress",
                "type": "t_address"
              },
              {
                "label": "ERC20Address",
                "type": "t_address"
              },
              {
                "label": "Amount",
                "type": "t_uint256"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "989ddaa5e1b7e15f7db9166684dba2fc407a184f36119c5474fc0269b1736779": {
      "address": "0xaeB0f6EF9100b86dbd67aEe7c687b2C5cE41Caa1",
      "txHash": "0x262830175b46a5cd6a1b5f6e412245fa59f30e24d90e8fa6453ad92eaff8a3c8",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "piMarket",
            "label": "_saleIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:23"
          },
          {
            "contract": "piMarket",
            "label": "_swapIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:24"
          },
          {
            "contract": "piMarket",
            "label": "feeAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:92"
          },
          {
            "contract": "piMarket",
            "label": "collectionFactoryAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:93"
          },
          {
            "contract": "piMarket",
            "label": "_tokenMeta",
            "type": "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)",
            "src": "../project:/contracts/piMarket.sol:94"
          },
          {
            "contract": "piMarket",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)",
            "src": "../project:/contracts/piMarket.sol:95"
          },
          {
            "contract": "piMarket",
            "label": "_swaps",
            "type": "t_mapping(t_uint256,t_struct(Swap)17616_storage)",
            "src": "../project:/contracts/piMarket.sol:96"
          }
        ],
        "types": {
          "t_struct(Counter)6289_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)": {
            "label": "mapping(uint256 => struct piMarket.TokenMeta)"
          },
          "t_struct(TokenMeta)17588_storage": {
            "label": "struct piMarket.TokenMeta",
            "members": [
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "tokenContractAddress",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "directSale",
                "type": "t_bool"
              },
              {
                "label": "bidSale",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "bidStartTime",
                "type": "t_uint256"
              },
              {
                "label": "bidEndTime",
                "type": "t_uint256"
              },
              {
                "label": "currentOwner",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct piMarket.BidOrder[])"
          },
          "t_array(t_struct(BidOrder)17601_storage)dyn_storage": {
            "label": "struct piMarket.BidOrder[]"
          },
          "t_struct(BidOrder)17601_storage": {
            "label": "struct piMarket.BidOrder",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "sellerAddress",
                "type": "t_address"
              },
              {
                "label": "buyerAddress",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Swap)17616_storage)": {
            "label": "mapping(uint256 => struct piMarket.Swap)"
          },
          "t_struct(Swap)17616_storage": {
            "label": "struct piMarket.Swap",
            "members": [
              {
                "label": "initiatorNFTAddress",
                "type": "t_address"
              },
              {
                "label": "initiator",
                "type": "t_address"
              },
              {
                "label": "initiatorNftId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenOwner",
                "type": "t_address"
              },
              {
                "label": "requestedTokenId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "bee1e0b9eee258d7ab23ebf6254d46312a5bcd19bf318124a94d3812d437e407": {
      "address": "0x46A0EdFe8EaF97D5e0a92A470f4F3F3FF47539d1",
      "txHash": "0x2e4d82ce1d49a0e32e978181544d40a8d3e51494e88b5f97764bceb43e7d7558",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CollectionFactory",
            "label": "collections",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:36"
          },
          {
            "contract": "CollectionFactory",
            "label": "addressToCollectionId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CollectionFactory.sol:38"
          },
          {
            "contract": "CollectionFactory",
            "label": "royaltiesForCollection",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)23229_storage)dyn_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:41"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionId",
            "type": "t_uint256",
            "src": "../project:/contracts/CollectionFactory.sol:43"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionMethodAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:44"
          },
          {
            "contract": "CollectionFactory",
            "label": "piNFTMethodsAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(CollectionMeta)10628_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)23229_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])"
          },
          "t_array(t_struct(Share)23229_storage)dyn_storage": {
            "label": "struct LibShare.Share[]"
          },
          "t_struct(Share)23229_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "af532081b56a199bb7c53da446ed233a0c0ae842ef86004826ca873c4eaab6cb": {
      "address": "0x5474a9a3Ce23b892C46b8223920Bb3BB72941A88",
      "txHash": "0x7bad1172d3a69a9388ab74e218605bd91043f8c010a68da76f29f44cde999f98",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "poolRegistry",
            "label": "attestationService",
            "type": "t_contract(AttestationServices)10598",
            "src": "../project:/contracts/poolRegistry.sol:20"
          },
          {
            "contract": "poolRegistry",
            "label": "lenderAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:21"
          },
          {
            "contract": "poolRegistry",
            "label": "borrowerAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:22"
          },
          {
            "contract": "poolRegistry",
            "label": "_attestingSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:23"
          },
          {
            "contract": "poolRegistry",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:24"
          },
          {
            "contract": "poolRegistry",
            "label": "FundingPoolAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:25"
          },
          {
            "contract": "poolRegistry",
            "label": "ClosedPools",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/poolRegistry.sol:27"
          },
          {
            "contract": "poolRegistry",
            "label": "poolCount",
            "type": "t_uint256",
            "src": "../project:/contracts/poolRegistry.sol:29"
          },
          {
            "contract": "poolRegistry",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(poolDetail)22053_storage)",
            "src": "../project:/contracts/poolRegistry.sol:65"
          }
        ],
        "types": {
          "t_contract(AttestationServices)10598": {
            "label": "contract AttestationServices"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(poolDetail)22053_storage)": {
            "label": "mapping(uint256 => struct poolRegistry.poolDetail)"
          },
          "t_struct(poolDetail)22053_storage": {
            "label": "struct poolRegistry.poolDetail",
            "members": [
              {
                "label": "poolAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "poolFeePercent",
                "type": "t_uint16"
              },
              {
                "label": "lenderAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedLendersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "lenderAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "paymentCycleDuration",
                "type": "t_uint32"
              },
              {
                "label": "paymentDefaultDuration",
                "type": "t_uint32"
              },
              {
                "label": "loanExpirationTime",
                "type": "t_uint32"
              },
              {
                "label": "borrowerAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedBorrowersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "borrowerAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(AddressSet)9612_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "4f03706d44f9e433590d68a9240340b5bd1e327a884908eddc75c4c8f11119c5": {
      "address": "0xC11f7786B254d5b2F4c17A3DdA139268F5E8FCc8",
      "txHash": "0xcb42180f2a99f968274d275e0bc2d6e2490436eaf2c667a50507d32ee3828469",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "poolStorage",
            "label": "loanId",
            "type": "t_uint256",
            "src": "../project:/contracts/poolStorage.sol:14"
          },
          {
            "contract": "poolStorage",
            "label": "loans",
            "type": "t_mapping(t_uint256,t_struct(Loan)23189_storage)",
            "src": "../project:/contracts/poolStorage.sol:17"
          },
          {
            "contract": "poolStorage",
            "label": "poolLoans",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:20"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerActiveLoans",
            "type": "t_mapping(t_address,t_struct(UintSet)9769_storage)",
            "src": "../project:/contracts/poolStorage.sol:100"
          },
          {
            "contract": "poolStorage",
            "label": "totalERC20Amount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:104"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerLoans",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/poolStorage.sol:107"
          },
          {
            "contract": "poolStorage",
            "label": "loanDefaultDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:108"
          },
          {
            "contract": "poolStorage",
            "label": "loanExpirationDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:109"
          },
          {
            "contract": "poolStorage",
            "label": "lenderLendAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/poolStorage.sol:113"
          },
          {
            "contract": "poolStorage",
            "label": "poolRegistryAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:115"
          },
          {
            "contract": "poolStorage",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:116"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(Loan)23189_storage)": {
            "label": "mapping(uint256 => struct poolStorage.Loan)"
          },
          "t_struct(Loan)23189_storage": {
            "label": "struct poolStorage.Loan",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "poolId",
                "type": "t_uint256"
              },
              {
                "label": "loanDetails",
                "type": "t_struct(LoanDetails)23158_storage"
              },
              {
                "label": "terms",
                "type": "t_struct(Terms)23171_storage"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)23134"
              }
            ]
          },
          "t_struct(LoanDetails)23158_storage": {
            "label": "struct poolStorage.LoanDetails",
            "members": [
              {
                "label": "lendingToken",
                "type": "t_contract(ERC20)4597"
              },
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "totalRepaid",
                "type": "t_struct(Payment)23139_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "lastRepaidTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "loanDuration",
                "type": "t_uint32"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              }
            ]
          },
          "t_struct(Terms)23171_storage": {
            "label": "struct poolStorage.Terms",
            "members": [
              {
                "label": "paymentCycleAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyCycleInterest",
                "type": "t_uint256"
              },
              {
                "label": "paymentCycle",
                "type": "t_uint32"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "installments",
                "type": "t_uint32"
              },
              {
                "label": "installmentsPaid",
                "type": "t_uint32"
              }
            ]
          },
          "t_enum(LoanState)23134": {
            "label": "enum poolStorage.LoanState",
            "members": [
              "PENDING",
              "CANCELLED",
              "ACCEPTED",
              "PAID"
            ]
          },
          "t_contract(ERC20)4597": {
            "label": "contract ERC20"
          },
          "t_struct(Payment)23139_storage": {
            "label": "struct poolStorage.Payment",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)9769_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)9769_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "eae2ddf881e65e7f0f57389e5762295029f75729ce4d842c4851b09f62a036da": {
      "address": "0x5Ba62ce329eE22fBdda348136925A32091Cc689B",
      "txHash": "0x9dc9a196b354b84e15506a7e15922d65ea88dae0d9699907fe33d481c0c0d1cd",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTid",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:19"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:20"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTdetails",
            "type": "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:73"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:76"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.NFTdetail)"
          },
          "t_struct(NFTdetail)16370_storage": {
            "label": "struct NFTlendingBorrowing.NFTdetail",
            "members": [
              {
                "label": "NFTtokenId",
                "type": "t_uint256"
              },
              {
                "label": "tokenIdOwner",
                "type": "t_address"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expectedAmount",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "listed",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              },
              {
                "label": "repaid",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.BidDetail[])"
          },
          "t_array(t_struct(BidDetail)16391_storage)dyn_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail[]"
          },
          "t_struct(BidDetail)16391_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expiration",
                "type": "t_uint256"
              },
              {
                "label": "bidderAddress",
                "type": "t_address"
              },
              {
                "label": "ERC20Address",
                "type": "t_address"
              },
              {
                "label": "Amount",
                "type": "t_uint256"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "def5c76f6d637265942ef558b19b5d10a099d027983463e5100409510e51280b": {
      "address": "0xE634BEc9B8B1A67372c715C7C98d4B2ee0D31f71",
      "txHash": "0xd2fe9b93f7634add70cb68cd98757b1865d195efb7223b642d66bc8cc8876633",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "piMarket",
            "label": "_saleIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:23"
          },
          {
            "contract": "piMarket",
            "label": "_swapIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:24"
          },
          {
            "contract": "piMarket",
            "label": "feeAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:92"
          },
          {
            "contract": "piMarket",
            "label": "collectionFactoryAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:93"
          },
          {
            "contract": "piMarket",
            "label": "_tokenMeta",
            "type": "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)",
            "src": "../project:/contracts/piMarket.sol:94"
          },
          {
            "contract": "piMarket",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)",
            "src": "../project:/contracts/piMarket.sol:95"
          },
          {
            "contract": "piMarket",
            "label": "_swaps",
            "type": "t_mapping(t_uint256,t_struct(Swap)17616_storage)",
            "src": "../project:/contracts/piMarket.sol:96"
          }
        ],
        "types": {
          "t_struct(Counter)6289_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)": {
            "label": "mapping(uint256 => struct piMarket.TokenMeta)"
          },
          "t_struct(TokenMeta)17588_storage": {
            "label": "struct piMarket.TokenMeta",
            "members": [
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "tokenContractAddress",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "directSale",
                "type": "t_bool"
              },
              {
                "label": "bidSale",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "bidStartTime",
                "type": "t_uint256"
              },
              {
                "label": "bidEndTime",
                "type": "t_uint256"
              },
              {
                "label": "currentOwner",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct piMarket.BidOrder[])"
          },
          "t_array(t_struct(BidOrder)17601_storage)dyn_storage": {
            "label": "struct piMarket.BidOrder[]"
          },
          "t_struct(BidOrder)17601_storage": {
            "label": "struct piMarket.BidOrder",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "sellerAddress",
                "type": "t_address"
              },
              {
                "label": "buyerAddress",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Swap)17616_storage)": {
            "label": "mapping(uint256 => struct piMarket.Swap)"
          },
          "t_struct(Swap)17616_storage": {
            "label": "struct piMarket.Swap",
            "members": [
              {
                "label": "initiatorNFTAddress",
                "type": "t_address"
              },
              {
                "label": "initiator",
                "type": "t_address"
              },
              {
                "label": "initiatorNftId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenOwner",
                "type": "t_address"
              },
              {
                "label": "requestedTokenId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "cb9d82084de51b169a30ee0d6e5a9c8177f86f070aaaef941d54cd2b94881384": {
      "address": "0xc6a827E7AD4fcbf1E064A65d2B02fa9666bEDc42",
      "txHash": "0x94f692ac67f2e1688ef14f2d624629945037367849d629f18a3759f5e602674f",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CollectionFactory",
            "label": "collections",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:36"
          },
          {
            "contract": "CollectionFactory",
            "label": "addressToCollectionId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CollectionFactory.sol:38"
          },
          {
            "contract": "CollectionFactory",
            "label": "royaltiesForCollection",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)23229_storage)dyn_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:41"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionId",
            "type": "t_uint256",
            "src": "../project:/contracts/CollectionFactory.sol:43"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionMethodAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:44"
          },
          {
            "contract": "CollectionFactory",
            "label": "piNFTMethodsAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(CollectionMeta)10628_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)23229_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])"
          },
          "t_array(t_struct(Share)23229_storage)dyn_storage": {
            "label": "struct LibShare.Share[]"
          },
          "t_struct(Share)23229_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "29922167de6497c4df66c1e9f3c643e20650d1009e0abf71663dcb0014652a1f": {
      "address": "0x6fb3F54c81cE5AEeFC5b7f4D77497dCB08AdA934",
      "txHash": "0x7c549ab515b8c64839db6137f05e188e319df0151138176f08adc3ef6d090e43",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "poolRegistry",
            "label": "attestationService",
            "type": "t_contract(AttestationServices)10598",
            "src": "../project:/contracts/poolRegistry.sol:20"
          },
          {
            "contract": "poolRegistry",
            "label": "lenderAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:21"
          },
          {
            "contract": "poolRegistry",
            "label": "borrowerAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:22"
          },
          {
            "contract": "poolRegistry",
            "label": "_attestingSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:23"
          },
          {
            "contract": "poolRegistry",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:24"
          },
          {
            "contract": "poolRegistry",
            "label": "FundingPoolAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:25"
          },
          {
            "contract": "poolRegistry",
            "label": "ClosedPools",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/poolRegistry.sol:27"
          },
          {
            "contract": "poolRegistry",
            "label": "poolCount",
            "type": "t_uint256",
            "src": "../project:/contracts/poolRegistry.sol:29"
          },
          {
            "contract": "poolRegistry",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(poolDetail)22053_storage)",
            "src": "../project:/contracts/poolRegistry.sol:65"
          }
        ],
        "types": {
          "t_contract(AttestationServices)10598": {
            "label": "contract AttestationServices"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(poolDetail)22053_storage)": {
            "label": "mapping(uint256 => struct poolRegistry.poolDetail)"
          },
          "t_struct(poolDetail)22053_storage": {
            "label": "struct poolRegistry.poolDetail",
            "members": [
              {
                "label": "poolAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "poolFeePercent",
                "type": "t_uint16"
              },
              {
                "label": "lenderAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedLendersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "lenderAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "paymentCycleDuration",
                "type": "t_uint32"
              },
              {
                "label": "paymentDefaultDuration",
                "type": "t_uint32"
              },
              {
                "label": "loanExpirationTime",
                "type": "t_uint32"
              },
              {
                "label": "borrowerAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedBorrowersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "borrowerAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(AddressSet)9612_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "cab4f6cb34d6a70e8be0e44647024734176f3678f43ace28bb59595264792917": {
      "address": "0x3a997dC0c08060cF88f4C49B197a4354A6988b58",
      "txHash": "0xf504bfa176c0283e5d7d9ee32ba718f1492399a440c08ea10ad1a568892b3d38",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "poolStorage",
            "label": "loanId",
            "type": "t_uint256",
            "src": "../project:/contracts/poolStorage.sol:14"
          },
          {
            "contract": "poolStorage",
            "label": "loans",
            "type": "t_mapping(t_uint256,t_struct(Loan)23189_storage)",
            "src": "../project:/contracts/poolStorage.sol:17"
          },
          {
            "contract": "poolStorage",
            "label": "poolLoans",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:20"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerActiveLoans",
            "type": "t_mapping(t_address,t_struct(UintSet)9769_storage)",
            "src": "../project:/contracts/poolStorage.sol:100"
          },
          {
            "contract": "poolStorage",
            "label": "totalERC20Amount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:104"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerLoans",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/poolStorage.sol:107"
          },
          {
            "contract": "poolStorage",
            "label": "loanDefaultDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:108"
          },
          {
            "contract": "poolStorage",
            "label": "loanExpirationDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:109"
          },
          {
            "contract": "poolStorage",
            "label": "lenderLendAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/poolStorage.sol:113"
          },
          {
            "contract": "poolStorage",
            "label": "poolRegistryAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:115"
          },
          {
            "contract": "poolStorage",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:116"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(Loan)23189_storage)": {
            "label": "mapping(uint256 => struct poolStorage.Loan)"
          },
          "t_struct(Loan)23189_storage": {
            "label": "struct poolStorage.Loan",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "poolId",
                "type": "t_uint256"
              },
              {
                "label": "loanDetails",
                "type": "t_struct(LoanDetails)23158_storage"
              },
              {
                "label": "terms",
                "type": "t_struct(Terms)23171_storage"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)23134"
              }
            ]
          },
          "t_struct(LoanDetails)23158_storage": {
            "label": "struct poolStorage.LoanDetails",
            "members": [
              {
                "label": "lendingToken",
                "type": "t_contract(ERC20)4597"
              },
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "totalRepaid",
                "type": "t_struct(Payment)23139_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "lastRepaidTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "loanDuration",
                "type": "t_uint32"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              }
            ]
          },
          "t_struct(Terms)23171_storage": {
            "label": "struct poolStorage.Terms",
            "members": [
              {
                "label": "paymentCycleAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyCycleInterest",
                "type": "t_uint256"
              },
              {
                "label": "paymentCycle",
                "type": "t_uint32"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "installments",
                "type": "t_uint32"
              },
              {
                "label": "installmentsPaid",
                "type": "t_uint32"
              }
            ]
          },
          "t_enum(LoanState)23134": {
            "label": "enum poolStorage.LoanState",
            "members": [
              "PENDING",
              "CANCELLED",
              "ACCEPTED",
              "PAID"
            ]
          },
          "t_contract(ERC20)4597": {
            "label": "contract ERC20"
          },
          "t_struct(Payment)23139_storage": {
            "label": "struct poolStorage.Payment",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)9769_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)9769_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c0518006cec08b73c24db3a7fd46f98d4ea619ebad1704de073412359813bb79": {
      "address": "0x39FC011B5F707C7B1d463547a5d7876fc7397C72",
      "txHash": "0x5879c2a9d15d2081dd4792feda087ed801e5a0d6fa9fda4df124a250dadc45d0",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTid",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:19"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:20"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTdetails",
            "type": "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:73"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:76"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.NFTdetail)"
          },
          "t_struct(NFTdetail)16370_storage": {
            "label": "struct NFTlendingBorrowing.NFTdetail",
            "members": [
              {
                "label": "NFTtokenId",
                "type": "t_uint256"
              },
              {
                "label": "tokenIdOwner",
                "type": "t_address"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expectedAmount",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "listed",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              },
              {
                "label": "repaid",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.BidDetail[])"
          },
          "t_array(t_struct(BidDetail)16391_storage)dyn_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail[]"
          },
          "t_struct(BidDetail)16391_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expiration",
                "type": "t_uint256"
              },
              {
                "label": "bidderAddress",
                "type": "t_address"
              },
              {
                "label": "ERC20Address",
                "type": "t_address"
              },
              {
                "label": "Amount",
                "type": "t_uint256"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "5aec81e105d32a1346648b013692073b0a8d658ea74c580aea35126084ba7d92": {
      "address": "0xBc97428B452dBdb08Eda968eEEB3267D3bf98179",
      "txHash": "0xf6673d68c1cf345397db898b194f682ffb3a26fc1569e67bb853412900dabdfc",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "piMarket",
            "label": "_saleIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:23"
          },
          {
            "contract": "piMarket",
            "label": "_swapIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:24"
          },
          {
            "contract": "piMarket",
            "label": "feeAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:92"
          },
          {
            "contract": "piMarket",
            "label": "collectionFactoryAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:93"
          },
          {
            "contract": "piMarket",
            "label": "_tokenMeta",
            "type": "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)",
            "src": "../project:/contracts/piMarket.sol:94"
          },
          {
            "contract": "piMarket",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)",
            "src": "../project:/contracts/piMarket.sol:95"
          },
          {
            "contract": "piMarket",
            "label": "_swaps",
            "type": "t_mapping(t_uint256,t_struct(Swap)17616_storage)",
            "src": "../project:/contracts/piMarket.sol:96"
          }
        ],
        "types": {
          "t_struct(Counter)6289_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)": {
            "label": "mapping(uint256 => struct piMarket.TokenMeta)"
          },
          "t_struct(TokenMeta)17588_storage": {
            "label": "struct piMarket.TokenMeta",
            "members": [
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "tokenContractAddress",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "directSale",
                "type": "t_bool"
              },
              {
                "label": "bidSale",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "bidStartTime",
                "type": "t_uint256"
              },
              {
                "label": "bidEndTime",
                "type": "t_uint256"
              },
              {
                "label": "currentOwner",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct piMarket.BidOrder[])"
          },
          "t_array(t_struct(BidOrder)17601_storage)dyn_storage": {
            "label": "struct piMarket.BidOrder[]"
          },
          "t_struct(BidOrder)17601_storage": {
            "label": "struct piMarket.BidOrder",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "sellerAddress",
                "type": "t_address"
              },
              {
                "label": "buyerAddress",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Swap)17616_storage)": {
            "label": "mapping(uint256 => struct piMarket.Swap)"
          },
          "t_struct(Swap)17616_storage": {
            "label": "struct piMarket.Swap",
            "members": [
              {
                "label": "initiatorNFTAddress",
                "type": "t_address"
              },
              {
                "label": "initiator",
                "type": "t_address"
              },
              {
                "label": "initiatorNftId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenOwner",
                "type": "t_address"
              },
              {
                "label": "requestedTokenId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "20d1772895ba246269548dffaf211b1f30cd044d2aa1d173f15288885f28ce78": {
      "address": "0xb24008f95B2811845170D8eFfF25956aBDA8ba5d",
      "txHash": "0x372f2d85a5c26911809553fb7b5d2faac4270c4e92081a0f91363d343a6843a4",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CollectionFactory",
            "label": "collections",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:36"
          },
          {
            "contract": "CollectionFactory",
            "label": "addressToCollectionId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CollectionFactory.sol:38"
          },
          {
            "contract": "CollectionFactory",
            "label": "royaltiesForCollection",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)23229_storage)dyn_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:41"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionId",
            "type": "t_uint256",
            "src": "../project:/contracts/CollectionFactory.sol:43"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionMethodAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:44"
          },
          {
            "contract": "CollectionFactory",
            "label": "piNFTMethodsAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(CollectionMeta)10628_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)23229_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])"
          },
          "t_array(t_struct(Share)23229_storage)dyn_storage": {
            "label": "struct LibShare.Share[]"
          },
          "t_struct(Share)23229_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8e16b66582c2ba6cfd72e82a194ff3510e0f146058782aba7c68fa4d91f132b1": {
      "address": "0x14F0E8268d0220698434a2E91BD45444f18567e0",
      "txHash": "0xd7cfc4d9391ad5ad5b38f2bf72431670ca0bac2b8582b9c09525cf8f559de476",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "poolRegistry",
            "label": "attestationService",
            "type": "t_contract(AttestationServices)10598",
            "src": "../project:/contracts/poolRegistry.sol:20"
          },
          {
            "contract": "poolRegistry",
            "label": "lenderAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:21"
          },
          {
            "contract": "poolRegistry",
            "label": "borrowerAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:22"
          },
          {
            "contract": "poolRegistry",
            "label": "_attestingSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:23"
          },
          {
            "contract": "poolRegistry",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:24"
          },
          {
            "contract": "poolRegistry",
            "label": "FundingPoolAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:25"
          },
          {
            "contract": "poolRegistry",
            "label": "ClosedPools",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/poolRegistry.sol:27"
          },
          {
            "contract": "poolRegistry",
            "label": "poolCount",
            "type": "t_uint256",
            "src": "../project:/contracts/poolRegistry.sol:29"
          },
          {
            "contract": "poolRegistry",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(poolDetail)22053_storage)",
            "src": "../project:/contracts/poolRegistry.sol:65"
          }
        ],
        "types": {
          "t_contract(AttestationServices)10598": {
            "label": "contract AttestationServices"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(poolDetail)22053_storage)": {
            "label": "mapping(uint256 => struct poolRegistry.poolDetail)"
          },
          "t_struct(poolDetail)22053_storage": {
            "label": "struct poolRegistry.poolDetail",
            "members": [
              {
                "label": "poolAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "poolFeePercent",
                "type": "t_uint16"
              },
              {
                "label": "lenderAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedLendersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "lenderAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "paymentCycleDuration",
                "type": "t_uint32"
              },
              {
                "label": "paymentDefaultDuration",
                "type": "t_uint32"
              },
              {
                "label": "loanExpirationTime",
                "type": "t_uint32"
              },
              {
                "label": "borrowerAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedBorrowersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "borrowerAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(AddressSet)9612_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "595e1048feefac437c3faac4ba7ac897b4bf9828cd14adee95b8e0f4d34038ed": {
      "address": "0x4b7Df1d43df8b8e1B49c88B88e48AAb878011852",
      "txHash": "0x92d724dde0fe31dde518b005e01393d4e378684d8951799ec1629fe20e5fb9f8",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "poolStorage",
            "label": "loanId",
            "type": "t_uint256",
            "src": "../project:/contracts/poolStorage.sol:14"
          },
          {
            "contract": "poolStorage",
            "label": "loans",
            "type": "t_mapping(t_uint256,t_struct(Loan)23189_storage)",
            "src": "../project:/contracts/poolStorage.sol:17"
          },
          {
            "contract": "poolStorage",
            "label": "poolLoans",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:20"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerActiveLoans",
            "type": "t_mapping(t_address,t_struct(UintSet)9769_storage)",
            "src": "../project:/contracts/poolStorage.sol:100"
          },
          {
            "contract": "poolStorage",
            "label": "totalERC20Amount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:104"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerLoans",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/poolStorage.sol:107"
          },
          {
            "contract": "poolStorage",
            "label": "loanDefaultDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:108"
          },
          {
            "contract": "poolStorage",
            "label": "loanExpirationDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:109"
          },
          {
            "contract": "poolStorage",
            "label": "lenderLendAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/poolStorage.sol:113"
          },
          {
            "contract": "poolStorage",
            "label": "poolRegistryAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:115"
          },
          {
            "contract": "poolStorage",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:116"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(Loan)23189_storage)": {
            "label": "mapping(uint256 => struct poolStorage.Loan)"
          },
          "t_struct(Loan)23189_storage": {
            "label": "struct poolStorage.Loan",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "poolId",
                "type": "t_uint256"
              },
              {
                "label": "loanDetails",
                "type": "t_struct(LoanDetails)23158_storage"
              },
              {
                "label": "terms",
                "type": "t_struct(Terms)23171_storage"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)23134"
              }
            ]
          },
          "t_struct(LoanDetails)23158_storage": {
            "label": "struct poolStorage.LoanDetails",
            "members": [
              {
                "label": "lendingToken",
                "type": "t_contract(ERC20)4597"
              },
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "totalRepaid",
                "type": "t_struct(Payment)23139_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "lastRepaidTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "loanDuration",
                "type": "t_uint32"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              }
            ]
          },
          "t_struct(Terms)23171_storage": {
            "label": "struct poolStorage.Terms",
            "members": [
              {
                "label": "paymentCycleAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyCycleInterest",
                "type": "t_uint256"
              },
              {
                "label": "paymentCycle",
                "type": "t_uint32"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "installments",
                "type": "t_uint32"
              },
              {
                "label": "installmentsPaid",
                "type": "t_uint32"
              }
            ]
          },
          "t_enum(LoanState)23134": {
            "label": "enum poolStorage.LoanState",
            "members": [
              "PENDING",
              "CANCELLED",
              "ACCEPTED",
              "PAID"
            ]
          },
          "t_contract(ERC20)4597": {
            "label": "contract ERC20"
          },
          "t_struct(Payment)23139_storage": {
            "label": "struct poolStorage.Payment",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)9769_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)9769_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b94b0942ec042c0b9b9ade685e455255eb1b061bc8ec759ccb7926a61f80c960": {
      "address": "0xCDcdDC0d3153ed52274C4D583208952B261a094D",
      "txHash": "0x377dcb0385918ea068246af6fedb5a1543d24696d9dd5f7c1638a55b8c55f02b",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTid",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:19"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:20"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTdetails",
            "type": "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:73"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:76"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.NFTdetail)"
          },
          "t_struct(NFTdetail)16370_storage": {
            "label": "struct NFTlendingBorrowing.NFTdetail",
            "members": [
              {
                "label": "NFTtokenId",
                "type": "t_uint256"
              },
              {
                "label": "tokenIdOwner",
                "type": "t_address"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expectedAmount",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "listed",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              },
              {
                "label": "repaid",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.BidDetail[])"
          },
          "t_array(t_struct(BidDetail)16391_storage)dyn_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail[]"
          },
          "t_struct(BidDetail)16391_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expiration",
                "type": "t_uint256"
              },
              {
                "label": "bidderAddress",
                "type": "t_address"
              },
              {
                "label": "ERC20Address",
                "type": "t_address"
              },
              {
                "label": "Amount",
                "type": "t_uint256"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e187fb16d6038d323d66167f70a1141ce73fccb664f9716505e45b872d6c90ba": {
      "address": "0x204C53cCE5e8c365bAeAee680b29502Cd6cA62F8",
      "txHash": "0xdd6cbbdf38b8d2268863be412a9423c410a656b07c583d047fe5b6d1a782ce2f",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "piMarket",
            "label": "_saleIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:23"
          },
          {
            "contract": "piMarket",
            "label": "_swapIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:24"
          },
          {
            "contract": "piMarket",
            "label": "feeAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:92"
          },
          {
            "contract": "piMarket",
            "label": "collectionFactoryAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:93"
          },
          {
            "contract": "piMarket",
            "label": "_tokenMeta",
            "type": "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)",
            "src": "../project:/contracts/piMarket.sol:94"
          },
          {
            "contract": "piMarket",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)",
            "src": "../project:/contracts/piMarket.sol:95"
          },
          {
            "contract": "piMarket",
            "label": "_swaps",
            "type": "t_mapping(t_uint256,t_struct(Swap)17616_storage)",
            "src": "../project:/contracts/piMarket.sol:96"
          }
        ],
        "types": {
          "t_struct(Counter)6289_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)": {
            "label": "mapping(uint256 => struct piMarket.TokenMeta)"
          },
          "t_struct(TokenMeta)17588_storage": {
            "label": "struct piMarket.TokenMeta",
            "members": [
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "tokenContractAddress",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "directSale",
                "type": "t_bool"
              },
              {
                "label": "bidSale",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "bidStartTime",
                "type": "t_uint256"
              },
              {
                "label": "bidEndTime",
                "type": "t_uint256"
              },
              {
                "label": "currentOwner",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct piMarket.BidOrder[])"
          },
          "t_array(t_struct(BidOrder)17601_storage)dyn_storage": {
            "label": "struct piMarket.BidOrder[]"
          },
          "t_struct(BidOrder)17601_storage": {
            "label": "struct piMarket.BidOrder",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "sellerAddress",
                "type": "t_address"
              },
              {
                "label": "buyerAddress",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Swap)17616_storage)": {
            "label": "mapping(uint256 => struct piMarket.Swap)"
          },
          "t_struct(Swap)17616_storage": {
            "label": "struct piMarket.Swap",
            "members": [
              {
                "label": "initiatorNFTAddress",
                "type": "t_address"
              },
              {
                "label": "initiator",
                "type": "t_address"
              },
              {
                "label": "initiatorNftId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenOwner",
                "type": "t_address"
              },
              {
                "label": "requestedTokenId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "954b12295f751baacbf4f47c93692e8181a50b629a1dfee3528beff94c3e02d8": {
      "address": "0x9C68CD0D21746816311FdAD9d315F996cb1cBbDb",
      "txHash": "0x3e6b246b77efd2a35a516664fbf6948c33c1ce8a288f143e58711a4a363e84d0",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CollectionFactory",
            "label": "collections",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:36"
          },
          {
            "contract": "CollectionFactory",
            "label": "addressToCollectionId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CollectionFactory.sol:38"
          },
          {
            "contract": "CollectionFactory",
            "label": "royaltiesForCollection",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)23229_storage)dyn_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:41"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionId",
            "type": "t_uint256",
            "src": "../project:/contracts/CollectionFactory.sol:43"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionMethodAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:44"
          },
          {
            "contract": "CollectionFactory",
            "label": "piNFTMethodsAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(CollectionMeta)10628_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)23229_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])"
          },
          "t_array(t_struct(Share)23229_storage)dyn_storage": {
            "label": "struct LibShare.Share[]"
          },
          "t_struct(Share)23229_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "65e90f2ee204963bf6b06cd7d94de686ef7f26f1fb12e15f35570917603fd187": {
      "address": "0xE47a68877177791f8fF946C17a426a0E64A11106",
      "txHash": "0x5a979d27a0255eaeba9f80a9928d06bd49fde44c941c629e10159425aaf87d69",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "poolRegistry",
            "label": "attestationService",
            "type": "t_contract(AttestationServices)10598",
            "src": "../project:/contracts/poolRegistry.sol:20"
          },
          {
            "contract": "poolRegistry",
            "label": "lenderAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:21"
          },
          {
            "contract": "poolRegistry",
            "label": "borrowerAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:22"
          },
          {
            "contract": "poolRegistry",
            "label": "_attestingSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:23"
          },
          {
            "contract": "poolRegistry",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:24"
          },
          {
            "contract": "poolRegistry",
            "label": "FundingPoolAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:25"
          },
          {
            "contract": "poolRegistry",
            "label": "ClosedPools",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/poolRegistry.sol:27"
          },
          {
            "contract": "poolRegistry",
            "label": "poolCount",
            "type": "t_uint256",
            "src": "../project:/contracts/poolRegistry.sol:29"
          },
          {
            "contract": "poolRegistry",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(poolDetail)22053_storage)",
            "src": "../project:/contracts/poolRegistry.sol:65"
          }
        ],
        "types": {
          "t_contract(AttestationServices)10598": {
            "label": "contract AttestationServices"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(poolDetail)22053_storage)": {
            "label": "mapping(uint256 => struct poolRegistry.poolDetail)"
          },
          "t_struct(poolDetail)22053_storage": {
            "label": "struct poolRegistry.poolDetail",
            "members": [
              {
                "label": "poolAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "poolFeePercent",
                "type": "t_uint16"
              },
              {
                "label": "lenderAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedLendersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "lenderAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "paymentCycleDuration",
                "type": "t_uint32"
              },
              {
                "label": "paymentDefaultDuration",
                "type": "t_uint32"
              },
              {
                "label": "loanExpirationTime",
                "type": "t_uint32"
              },
              {
                "label": "borrowerAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedBorrowersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "borrowerAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(AddressSet)9612_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "62f97656c80a7a86a354f32f16a6ad33eb39bc2eb67848db893995c2ba80bd3f": {
      "address": "0x743Ce992937cb38072d782BD6085c5969962B1cE",
      "txHash": "0xef463f070a7d01a2a70e9f0fc69c0b0f9457cda9e022df23e291ad28a465a30d",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "poolStorage",
            "label": "loanId",
            "type": "t_uint256",
            "src": "../project:/contracts/poolStorage.sol:14"
          },
          {
            "contract": "poolStorage",
            "label": "loans",
            "type": "t_mapping(t_uint256,t_struct(Loan)23189_storage)",
            "src": "../project:/contracts/poolStorage.sol:17"
          },
          {
            "contract": "poolStorage",
            "label": "poolLoans",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:20"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerActiveLoans",
            "type": "t_mapping(t_address,t_struct(UintSet)9769_storage)",
            "src": "../project:/contracts/poolStorage.sol:100"
          },
          {
            "contract": "poolStorage",
            "label": "totalERC20Amount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:104"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerLoans",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/poolStorage.sol:107"
          },
          {
            "contract": "poolStorage",
            "label": "loanDefaultDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:108"
          },
          {
            "contract": "poolStorage",
            "label": "loanExpirationDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:109"
          },
          {
            "contract": "poolStorage",
            "label": "lenderLendAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/poolStorage.sol:113"
          },
          {
            "contract": "poolStorage",
            "label": "poolRegistryAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:115"
          },
          {
            "contract": "poolStorage",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:116"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(Loan)23189_storage)": {
            "label": "mapping(uint256 => struct poolStorage.Loan)"
          },
          "t_struct(Loan)23189_storage": {
            "label": "struct poolStorage.Loan",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "poolId",
                "type": "t_uint256"
              },
              {
                "label": "loanDetails",
                "type": "t_struct(LoanDetails)23158_storage"
              },
              {
                "label": "terms",
                "type": "t_struct(Terms)23171_storage"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)23134"
              }
            ]
          },
          "t_struct(LoanDetails)23158_storage": {
            "label": "struct poolStorage.LoanDetails",
            "members": [
              {
                "label": "lendingToken",
                "type": "t_contract(ERC20)4597"
              },
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "totalRepaid",
                "type": "t_struct(Payment)23139_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "lastRepaidTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "loanDuration",
                "type": "t_uint32"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              }
            ]
          },
          "t_struct(Terms)23171_storage": {
            "label": "struct poolStorage.Terms",
            "members": [
              {
                "label": "paymentCycleAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyCycleInterest",
                "type": "t_uint256"
              },
              {
                "label": "paymentCycle",
                "type": "t_uint32"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "installments",
                "type": "t_uint32"
              },
              {
                "label": "installmentsPaid",
                "type": "t_uint32"
              }
            ]
          },
          "t_enum(LoanState)23134": {
            "label": "enum poolStorage.LoanState",
            "members": [
              "PENDING",
              "CANCELLED",
              "ACCEPTED",
              "PAID"
            ]
          },
          "t_contract(ERC20)4597": {
            "label": "contract ERC20"
          },
          "t_struct(Payment)23139_storage": {
            "label": "struct poolStorage.Payment",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)9769_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)9769_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5dc69987ed7fd10d60d8db92d91a7a63a9f5212d5823c85f17f7e874a9dbddac": {
      "address": "0xD86E1e9182440dD83FCBA689B91B41851F602D06",
      "txHash": "0xc9ac90f29a8223b8b288f7bf7d1baacbcd8e8fee489c7aa5cc0d5b0e752c3ee8",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTid",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:19"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:20"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTdetails",
            "type": "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:73"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:76"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.NFTdetail)"
          },
          "t_struct(NFTdetail)16370_storage": {
            "label": "struct NFTlendingBorrowing.NFTdetail",
            "members": [
              {
                "label": "NFTtokenId",
                "type": "t_uint256"
              },
              {
                "label": "tokenIdOwner",
                "type": "t_address"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expectedAmount",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "listed",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              },
              {
                "label": "repaid",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.BidDetail[])"
          },
          "t_array(t_struct(BidDetail)16391_storage)dyn_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail[]"
          },
          "t_struct(BidDetail)16391_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expiration",
                "type": "t_uint256"
              },
              {
                "label": "bidderAddress",
                "type": "t_address"
              },
              {
                "label": "ERC20Address",
                "type": "t_address"
              },
              {
                "label": "Amount",
                "type": "t_uint256"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "bd3dcb7cfc0d0750511b816e9c3271699988003406b25a5dbb568ed8b2aa1fcc": {
      "address": "0xb79b45901c08Bfd638831ce3752F0980ed3f702d",
      "txHash": "0x71d294d7328c00a746442d2f58d1a6245628c55675b83e63f70ef19779a77537",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "piMarket",
            "label": "_saleIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:23"
          },
          {
            "contract": "piMarket",
            "label": "_swapIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:24"
          },
          {
            "contract": "piMarket",
            "label": "feeAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:92"
          },
          {
            "contract": "piMarket",
            "label": "collectionFactoryAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:93"
          },
          {
            "contract": "piMarket",
            "label": "_tokenMeta",
            "type": "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)",
            "src": "../project:/contracts/piMarket.sol:94"
          },
          {
            "contract": "piMarket",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)",
            "src": "../project:/contracts/piMarket.sol:95"
          },
          {
            "contract": "piMarket",
            "label": "_swaps",
            "type": "t_mapping(t_uint256,t_struct(Swap)17616_storage)",
            "src": "../project:/contracts/piMarket.sol:96"
          }
        ],
        "types": {
          "t_struct(Counter)6289_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)": {
            "label": "mapping(uint256 => struct piMarket.TokenMeta)"
          },
          "t_struct(TokenMeta)17588_storage": {
            "label": "struct piMarket.TokenMeta",
            "members": [
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "tokenContractAddress",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "directSale",
                "type": "t_bool"
              },
              {
                "label": "bidSale",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "bidStartTime",
                "type": "t_uint256"
              },
              {
                "label": "bidEndTime",
                "type": "t_uint256"
              },
              {
                "label": "currentOwner",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct piMarket.BidOrder[])"
          },
          "t_array(t_struct(BidOrder)17601_storage)dyn_storage": {
            "label": "struct piMarket.BidOrder[]"
          },
          "t_struct(BidOrder)17601_storage": {
            "label": "struct piMarket.BidOrder",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "sellerAddress",
                "type": "t_address"
              },
              {
                "label": "buyerAddress",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Swap)17616_storage)": {
            "label": "mapping(uint256 => struct piMarket.Swap)"
          },
          "t_struct(Swap)17616_storage": {
            "label": "struct piMarket.Swap",
            "members": [
              {
                "label": "initiatorNFTAddress",
                "type": "t_address"
              },
              {
                "label": "initiator",
                "type": "t_address"
              },
              {
                "label": "initiatorNftId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenOwner",
                "type": "t_address"
              },
              {
                "label": "requestedTokenId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "64979cd542044cc57418ed4b827d6d7d4d93147891c465df8311ddca76129b81": {
      "address": "0x448027b084431B240Ba7c83CFc8f260aE0DD3287",
      "txHash": "0x086d1bb6a39cd6b9cbf0b5db5a7859754766a63541c6b52de916a5b62724ff71",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CollectionFactory",
            "label": "collections",
            "type": "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:36"
          },
          {
            "contract": "CollectionFactory",
            "label": "addressToCollectionId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CollectionFactory.sol:38"
          },
          {
            "contract": "CollectionFactory",
            "label": "royaltiesForCollection",
            "type": "t_mapping(t_uint256,t_array(t_struct(Share)23232_storage)dyn_storage)",
            "src": "../project:/contracts/CollectionFactory.sol:41"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionId",
            "type": "t_uint256",
            "src": "../project:/contracts/CollectionFactory.sol:43"
          },
          {
            "contract": "CollectionFactory",
            "label": "collectionMethodAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:44"
          },
          {
            "contract": "CollectionFactory",
            "label": "piNFTMethodsAddress",
            "type": "t_address",
            "src": "../project:/contracts/CollectionFactory.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(CollectionMeta)10628_storage)": {
            "label": "mapping(uint256 => struct CollectionFactory.CollectionMeta)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(CollectionMeta)10628_storage": {
            "label": "struct CollectionFactory.CollectionMeta",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "symbol",
                "type": "t_string_storage"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Share)23232_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibShare.Share[])"
          },
          "t_array(t_struct(Share)23232_storage)dyn_storage": {
            "label": "struct LibShare.Share[]"
          },
          "t_struct(Share)23232_storage": {
            "label": "struct LibShare.Share",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "22ab7443a6eaf3f4423fca46785f1194b18d982c6205b842ac90da8cef09f732": {
      "address": "0xd860787a619C0b0c4955CC4750dF07b076c5609F",
      "txHash": "0xcb5226548bc497c41dc718e2ebe0de9b453014376a5f2bd0004177790de2395c",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "poolRegistry",
            "label": "attestationService",
            "type": "t_contract(AttestationServices)10598",
            "src": "../project:/contracts/poolRegistry.sol:20"
          },
          {
            "contract": "poolRegistry",
            "label": "lenderAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:21"
          },
          {
            "contract": "poolRegistry",
            "label": "borrowerAttestationSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:22"
          },
          {
            "contract": "poolRegistry",
            "label": "_attestingSchemaId",
            "type": "t_bytes32",
            "src": "../project:/contracts/poolRegistry.sol:23"
          },
          {
            "contract": "poolRegistry",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:24"
          },
          {
            "contract": "poolRegistry",
            "label": "FundingPoolAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolRegistry.sol:25"
          },
          {
            "contract": "poolRegistry",
            "label": "ClosedPools",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/poolRegistry.sol:27"
          },
          {
            "contract": "poolRegistry",
            "label": "poolCount",
            "type": "t_uint256",
            "src": "../project:/contracts/poolRegistry.sol:29"
          },
          {
            "contract": "poolRegistry",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(poolDetail)22056_storage)",
            "src": "../project:/contracts/poolRegistry.sol:65"
          }
        ],
        "types": {
          "t_contract(AttestationServices)10598": {
            "label": "contract AttestationServices"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(poolDetail)22056_storage)": {
            "label": "mapping(uint256 => struct poolRegistry.poolDetail)"
          },
          "t_struct(poolDetail)22056_storage": {
            "label": "struct poolRegistry.poolDetail",
            "members": [
              {
                "label": "poolAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "URI",
                "type": "t_string_storage"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "poolFeePercent",
                "type": "t_uint16"
              },
              {
                "label": "lenderAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedLendersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "lenderAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "paymentCycleDuration",
                "type": "t_uint32"
              },
              {
                "label": "paymentDefaultDuration",
                "type": "t_uint32"
              },
              {
                "label": "loanExpirationTime",
                "type": "t_uint32"
              },
              {
                "label": "borrowerAttestationRequired",
                "type": "t_bool"
              },
              {
                "label": "verifiedBorrowersForPool",
                "type": "t_struct(AddressSet)9612_storage"
              },
              {
                "label": "borrowerAttestationIds",
                "type": "t_mapping(t_address,t_bytes32)"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(AddressSet)9612_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "79f06126294e1a0ae8c04befd99943ea2868fb5675e238e8a5a332af9032f123": {
      "address": "0x0B50FFd56F7b7Bf0febeC63C0D7692E1C15d544a",
      "txHash": "0x643d3b911b86552cfac042cecfccdb2a85ceca94cfb1ec4082c316186e4834c8",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "poolStorage",
            "label": "loanId",
            "type": "t_uint256",
            "src": "../project:/contracts/poolStorage.sol:14"
          },
          {
            "contract": "poolStorage",
            "label": "loans",
            "type": "t_mapping(t_uint256,t_struct(Loan)23192_storage)",
            "src": "../project:/contracts/poolStorage.sol:17"
          },
          {
            "contract": "poolStorage",
            "label": "poolLoans",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:20"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerActiveLoans",
            "type": "t_mapping(t_address,t_struct(UintSet)9769_storage)",
            "src": "../project:/contracts/poolStorage.sol:100"
          },
          {
            "contract": "poolStorage",
            "label": "totalERC20Amount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/poolStorage.sol:104"
          },
          {
            "contract": "poolStorage",
            "label": "borrowerLoans",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/poolStorage.sol:107"
          },
          {
            "contract": "poolStorage",
            "label": "loanDefaultDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:108"
          },
          {
            "contract": "poolStorage",
            "label": "loanExpirationDuration",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/poolStorage.sol:109"
          },
          {
            "contract": "poolStorage",
            "label": "lenderLendAmount",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/poolStorage.sol:113"
          },
          {
            "contract": "poolStorage",
            "label": "poolRegistryAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:115"
          },
          {
            "contract": "poolStorage",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/poolStorage.sol:116"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(Loan)23192_storage)": {
            "label": "mapping(uint256 => struct poolStorage.Loan)"
          },
          "t_struct(Loan)23192_storage": {
            "label": "struct poolStorage.Loan",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "poolId",
                "type": "t_uint256"
              },
              {
                "label": "loanDetails",
                "type": "t_struct(LoanDetails)23161_storage"
              },
              {
                "label": "terms",
                "type": "t_struct(Terms)23174_storage"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)23137"
              }
            ]
          },
          "t_struct(LoanDetails)23161_storage": {
            "label": "struct poolStorage.LoanDetails",
            "members": [
              {
                "label": "lendingToken",
                "type": "t_contract(ERC20)4597"
              },
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "totalRepaid",
                "type": "t_struct(Payment)23142_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint32"
              },
              {
                "label": "acceptedTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "lastRepaidTimestamp",
                "type": "t_uint32"
              },
              {
                "label": "loanDuration",
                "type": "t_uint32"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              }
            ]
          },
          "t_struct(Terms)23174_storage": {
            "label": "struct poolStorage.Terms",
            "members": [
              {
                "label": "paymentCycleAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyCycleInterest",
                "type": "t_uint256"
              },
              {
                "label": "paymentCycle",
                "type": "t_uint32"
              },
              {
                "label": "APR",
                "type": "t_uint16"
              },
              {
                "label": "installments",
                "type": "t_uint32"
              },
              {
                "label": "installmentsPaid",
                "type": "t_uint32"
              }
            ]
          },
          "t_enum(LoanState)23137": {
            "label": "enum poolStorage.LoanState",
            "members": [
              "PENDING",
              "CANCELLED",
              "ACCEPTED",
              "PAID"
            ]
          },
          "t_contract(ERC20)4597": {
            "label": "contract ERC20"
          },
          "t_struct(Payment)23142_storage": {
            "label": "struct poolStorage.Payment",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)9769_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)9769_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9297_storage"
              }
            ]
          },
          "t_struct(Set)9297_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f7a81b9072ce8a151f2ca46d42d7cbf4f74fd5a059e8697a06bdb9c2d39b9701": {
      "address": "0x66cE74438240051a8AF254c3123cf54ff37B767a",
      "txHash": "0x12985de9f4094501a07939c54384e50700c189ca577e782347e0c972596c0fdd",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTid",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:19"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "AconomyFeeAddress",
            "type": "t_address",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:20"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "NFTdetails",
            "type": "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:73"
          },
          {
            "contract": "NFTlendingBorrowing",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)",
            "src": "../project:/contracts/NFTlendingBorrowing.sol:76"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(NFTdetail)16370_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.NFTdetail)"
          },
          "t_struct(NFTdetail)16370_storage": {
            "label": "struct NFTlendingBorrowing.NFTdetail",
            "members": [
              {
                "label": "NFTtokenId",
                "type": "t_uint256"
              },
              {
                "label": "tokenIdOwner",
                "type": "t_address"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expectedAmount",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "listed",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              },
              {
                "label": "repaid",
                "type": "t_bool"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidDetail)16391_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NFTlendingBorrowing.BidDetail[])"
          },
          "t_array(t_struct(BidDetail)16391_storage)dyn_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail[]"
          },
          "t_struct(BidDetail)16391_storage": {
            "label": "struct NFTlendingBorrowing.BidDetail",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              },
              {
                "label": "duration",
                "type": "t_uint32"
              },
              {
                "label": "expiration",
                "type": "t_uint256"
              },
              {
                "label": "bidderAddress",
                "type": "t_address"
              },
              {
                "label": "ERC20Address",
                "type": "t_address"
              },
              {
                "label": "Amount",
                "type": "t_uint256"
              },
              {
                "label": "protocolFee",
                "type": "t_uint16"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              },
              {
                "label": "bidAccepted",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e84b023df65366b988962fefa875e89c357ae87babf9c6af480f72abdc7f8870": {
      "address": "0x918a720f2C47a575C781bBa60eb7D2Ab3ffb2F7a",
      "txHash": "0x30dc9befb0d1fb4f2e50e464a91292e4884dda1dd03b86d804fef96fc9d00e39",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "piMarket",
            "label": "_saleIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:23"
          },
          {
            "contract": "piMarket",
            "label": "_swapIdCounter",
            "type": "t_struct(Counter)6289_storage",
            "src": "../project:/contracts/piMarket.sol:24"
          },
          {
            "contract": "piMarket",
            "label": "feeAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:92"
          },
          {
            "contract": "piMarket",
            "label": "collectionFactoryAddress",
            "type": "t_address",
            "src": "../project:/contracts/piMarket.sol:93"
          },
          {
            "contract": "piMarket",
            "label": "_tokenMeta",
            "type": "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)",
            "src": "../project:/contracts/piMarket.sol:94"
          },
          {
            "contract": "piMarket",
            "label": "Bids",
            "type": "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)",
            "src": "../project:/contracts/piMarket.sol:95"
          },
          {
            "contract": "piMarket",
            "label": "_swaps",
            "type": "t_mapping(t_uint256,t_struct(Swap)17616_storage)",
            "src": "../project:/contracts/piMarket.sol:96"
          }
        ],
        "types": {
          "t_struct(Counter)6289_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(TokenMeta)17588_storage)": {
            "label": "mapping(uint256 => struct piMarket.TokenMeta)"
          },
          "t_struct(TokenMeta)17588_storage": {
            "label": "struct piMarket.TokenMeta",
            "members": [
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "tokenContractAddress",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "directSale",
                "type": "t_bool"
              },
              {
                "label": "bidSale",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_bool"
              },
              {
                "label": "bidStartTime",
                "type": "t_uint256"
              },
              {
                "label": "bidEndTime",
                "type": "t_uint256"
              },
              {
                "label": "currentOwner",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_struct(BidOrder)17601_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct piMarket.BidOrder[])"
          },
          "t_array(t_struct(BidOrder)17601_storage)dyn_storage": {
            "label": "struct piMarket.BidOrder[]"
          },
          "t_struct(BidOrder)17601_storage": {
            "label": "struct piMarket.BidOrder",
            "members": [
              {
                "label": "bidId",
                "type": "t_uint256"
              },
              {
                "label": "saleId",
                "type": "t_uint256"
              },
              {
                "label": "sellerAddress",
                "type": "t_address"
              },
              {
                "label": "buyerAddress",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "withdrawn",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Swap)17616_storage)": {
            "label": "mapping(uint256 => struct piMarket.Swap)"
          },
          "t_struct(Swap)17616_storage": {
            "label": "struct piMarket.Swap",
            "members": [
              {
                "label": "initiatorNFTAddress",
                "type": "t_address"
              },
              {
                "label": "initiator",
                "type": "t_address"
              },
              {
                "label": "initiatorNftId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenOwner",
                "type": "t_address"
              },
              {
                "label": "requestedTokenId",
                "type": "t_uint256"
              },
              {
                "label": "requestedTokenAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
