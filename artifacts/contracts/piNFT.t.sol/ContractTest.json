{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFetchTheTokenURIAndRoyalties",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintAnErc721TokenToAlice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testNameAndSymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600080546201000162ff00ff19909116179055600a80546001600160a01b031990811661abcd17909155600b805490911661beef17905534801561004757600080fd5b50616e31806100576000396000f3fe60806040523480156200001157600080fd5b5060043610620001755760003560e01c806389242f2911620000d3578063c88a5e6d1162000086578063c88a5e6d1462000307578063d06d8229146200031e578063d82555f11462000335578063e9a79a7b146200034c578063f8ccbf471462000363578063fa7626d4146200037757600080fd5b806389242f29146200028657806397754ae914620002905780639a8325a014620002a7578063af9bbe5f14620002be578063b9c071b414620002d5578063ba414fa614620002ec57600080fd5b80633a768463116200012c5780633a76846314620002165780633bf82db1146200022d578063469e290b14620002445780636ac11701146200024e5780636bce989b14620002585780636f597075146200026f57600080fd5b80630a9254e4146200017a578063108554f21462000186578063233240ee146200019d57806329a9e30014620001b457806329ce9dde14620001cb5780632d6c17a314620001ff575b600080fd5b6200018462000385565b005b62000184620001973660046200309e565b62000458565b62000184620001ae366004620030cd565b62000531565b62000184620001c5366004620030f4565b6200060d565b620001e2620001dc36600462003239565b620006bf565b6040516001600160a01b0390911681526020015b60405180910390f35b6200018462000210366004620032b9565b620007ef565b620001e260008051602062006d9c83398151915281565b620001846200023e366004620032d3565b6200082f565b6200018462000911565b6200018462000b55565b6200018462000269366004620032d3565b62000c8d565b6200018462000280366004620030cd565b62000ca1565b6200018462000d4b565b62000184620002a136600462003328565b620010de565b620001e2620002b836600462003382565b6200131f565b62000184620002cf366004620032d3565b62001421565b62000184620002e6366004620032b9565b620014cf565b620002f6620014f0565b6040519015158152602001620001f6565b62000184620003183660046200309e565b62001621565b620001846200032f366004620030f4565b62001657565b6200018462000346366004620032d3565b62001709565b620001846200035d3660046200309e565b620017ef565b600054620002f69062010000900460ff1681565b600054620002f69060ff1681565b604051620003939062003037565b60408082526007908201526641636f6e6f6d7960c81b60608201526080602082018190526003908201526241434f60e81b60a082015260c001604051809103906000f080158015620003e9573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055604051620004189062003045565b604051809103906000f08015801562000435573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d906200048e9085908590600401620033c3565b600060405180830381600087803b158015620004a957600080fd5b505af1158015620004be573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038516600482015260008051602062006d9c83398151915292506306447d5691506024015b600060405180830381600087803b1580156200051457600080fd5b505af115801562000529573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d906200056b908490600160801b90600401620033c3565b600060405180830381600087803b1580156200058657600080fd5b505af11580156200059b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062006d9c833981519152925063ca669fa791506024015b600060405180830381600087803b158015620005f157600080fd5b505af115801562000606573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d9062000647908590600160801b90600401620033c3565b600060405180830381600087803b1580156200066257600080fd5b505af115801562000677573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b0380861660048301528416602482015260008051602062006d9c83398151915292506347e50cce9150604401620004f9565b604051638d1cc92560e01b8152600090819060008051602062006d9c83398151915290638d1cc92590620006f890879060040162003439565b6000604051808303816000875af115801562000718573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000742919081019062003484565b8360405160200162000756929190620034d2565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216620007e85760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b60008051602062006d9c83398151915263e5d6bf026200081083426200351b565b6040518263ffffffff1660e01b8152600401620005d691815260200190565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d90620008659086908590600401620033c3565b600060405180830381600087803b1580156200088057600080fd5b505af115801562000895573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b0380871660048301528516602482015260008051602062006d9c83398151915292506345b5607891506044015b600060405180830381600087803b158015620008f357600080fd5b505af115801562000908573d6000803e3d6000fd5b50505050505050565b60606200092e604080518082019091526000808252602082015290565b50604080518082018252600b546001600160a01b03168152600a6020820152815160018082528184019093529091816020015b6040805180820190915260008082526020820152815260200190600190039081620009615790505091508082600081518110620009a257620009a262003535565b602090810291909101810191909152604080518082018252600a808252697777772e736b2e636f6d60b01b938201939093526008549254915163ee53b6a960e01b815290926000926001600160a01b039182169263ee53b6a99262000a10921690869089906004016200354b565b6020604051808303816000875af115801562000a30573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a569190620035cd565b905062000a638162001895565b62000aa68160006040518060400160405280601881526020017f4661696c6564206d696e74696e67205269676874204e46540000000000000000815250620018e0565b600854600a546040516370a0823160e01b81526001600160a01b03918216600482015262000b4f9291909116906370a0823190602401602060405180830381865afa15801562000afa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b209190620035cd565b60016040518060400160405280600e81526020016d11985a5b1959081d1bc81b5a5b9d60921b815250620018e0565b50505050565b600854604080516306fdde0360e01b8152905162000bf2926001600160a01b0316916306fdde039160048083019260009291908290030181865afa15801562000ba2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bcc919081019062003484565b6040518060400160405280600781526020016641636f6e6f6d7960c81b8152506200191c565b600854604080516395d89b4160e01b8152905162000c8b926001600160a01b0316916395d89b419160048083019260009291908290030181865afa15801562000c3f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c69919081019062003484565b6040518060400160405280600381526020016241434f60e81b8152506200191c565b565b62000c9c8383836000620010de565b505050565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d9062000cdb908490600160801b90600401620033c3565b600060405180830381600087803b15801562000cf657600080fd5b505af115801562000d0b573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038416600482015260008051602062006d9c83398151915292506306447d569150602401620005d6565b606062000d68604080518082019091526000808252602082015290565b50604080518082018252600b546001600160a01b03168152600a6020820152815160018082528184019093529091816020015b604080518082019091526000808252602082015281526020019060019003908162000d9b579050509150808260008151811062000ddc5762000ddc62003535565b602090810291909101810191909152604080518082018252600a808252697777772e736b2e636f6d60b01b938201939093526008549254915163ee53b6a960e01b815290926000926001600160a01b039182169263ee53b6a99262000e4a921690869089906004016200354b565b6020604051808303816000875af115801562000e6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e909190620035cd565b60085460405163c87b56dd60e01b8152600481018390529192506000916001600160a01b039091169063c87b56dd90602401600060405180830381865afa15801562000ee0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f0a919081019062003484565b905062000f70816040518060400160405280600a8152602001697777772e736b2e636f6d60b01b8152506040518060400160405280601981526020017f496e76616c69642055524920666f722074686520746f6b656e0000000000000081525062001a47565b600854604051635d9dd7eb60e11b8152600481018490526000916001600160a01b03169063bb3bafd690602401600060405180830381865afa15801562000fbb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000fe591908101906200360e565b9050620010138160008151811062001001576200100162003535565b60200260200101516000015162001ad3565b6200107e816000815181106200102d576200102d62003535565b602002602001015160000151600b60009054906101000a90046001600160a01b03166040518060400160405280601081526020016f57726f6e6720526f79616c697469657360801b81525062001b1d565b620005298160008151811062001098576200109862003535565b6020026020010151602001516001600160601b0316600a6040518060400160405280601081526020016f57726f6e6720526f79616c697469657360801b815250620018e0565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200113491620036f3565b6000604051808303816000865af19150503d806000811462001173576040519150601f19603f3d011682016040523d82523d6000602084013e62001178565b606091505b50915050600081806020019051810190620011949190620035cd565b90506200120684620011ff87620011d66370a0823160e01b620011b960018d62001b6b565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062001b90565b8215620005295760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620012519190620036f3565b6000604051808303816000865af19150503d806000811462001290576040519150601f19603f3d011682016040523d82523d6000602084013e62001295565b606091505b50915050600081806020019051810190620012b19190620035cd565b905082861015620012dc57620012c886846200351b565b620012d490826200351b565b9050620012f7565b620012e883876200351b565b620012f4908262003711565b90505b6200131581620011ff6318160ddd60e01b620011b960018d62001b6b565b5050505050505050565b604051638d1cc92560e01b8152600090819060008051602062006d9c83398151915290638d1cc925906200135890869060040162003439565b6000604051808303816000875af115801562001378573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620013a2919081019062003484565b90508051602082016000f091506001600160a01b0382166200141b5760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401620007df565b50919050565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d90620014579086908590600401620033c3565b600060405180830381600087803b1580156200147257600080fd5b505af115801562001487573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b0380871660048301528516602482015260008051602062006d9c83398151915292506347e50cce9150604401620008d8565b60008051602062006d9c83398151915263e5d6bf0262000810834262003711565b60008054610100900460ff1615620015115750600054610100900460ff1690565b600060008051602062006d9c8339815191523b156200161c5760405160009060008051602062006d9c833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4906200157e9083906519985a5b195960d21b90602001620033c3565b60408051601f19818403018152908290526200159e92916020016200372c565b60408051601f1981840301815290829052620015ba91620036f3565b6000604051808303816000865af19150503d8060008114620015f9576040519150601f19603f3d011682016040523d82523d6000602084013e620015fe565b606091505b50915050808060200190518101906200161891906200375f565b9150505b919050565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d90620004f99085908590600401620033c3565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d9062001691908590600160801b90600401620033c3565b600060405180830381600087803b158015620016ac57600080fd5b505af1158015620016c1573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b0380861660048301528416602482015260008051602062006d9c83398151915292506345b560789150604401620004f9565b60008051602062006dbc833981519152604051620017c4906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a162000c9c81620011ff84620011d66370a0823160e01b620011b960018a62001b6b565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d90620018259085908590600401620033c3565b600060405180830381600087803b1580156200184057600080fd5b505af115801562001855573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602062006d9c833981519152925063ca669fa79150602401620004f9565b620018dd81604051602401620018ad91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b17905262001b9c565b50565b81831462000c9c5760008051602062006dbc833981519152816040516200190891906200377f565b60405180910390a162000c9c838362001bbd565b806040516020016200192f9190620036f3565b6040516020818303038152906040528051906020012082604051602001620019589190620036f3565b604051602081830303815290604052805190602001201462001a43577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620019e19060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a160008051602062006dbc8339815191528160405162001a099190620037b0565b60405180910390a160008051602062006dbc8339815191528260405162001a319190620037ef565b60405180910390a162001a4362001ca2565b5050565b8160405160200162001a5a9190620036f3565b604051602081830303815290604052805190602001208360405160200162001a839190620036f3565b604051602081830303815290604052805190602001201462000c9c5760008051602062006dbc8339815191528160405162001abf91906200377f565b60405180910390a162000c9c83836200191c565b6040516001600160a01b0382166024820152620018dd9060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b17905262001b9c565b816001600160a01b0316836001600160a01b03161462000c9c5760008051602062006dbc8339815191528160405162001b5791906200377f565b60405180910390a162000c9c838362001da6565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62001a43828262001ea0565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80821462001a43577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001c309060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162001c6991906200381a565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162001a31919062003853565b60008051602062006d9c8339815191523b1562001d955760405160009060008051602062006d9c833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49062001d109083906519985a5b195960d21b906001906020016200387e565b60408051601f198184030181529082905262001d3092916020016200372c565b60408051601f198184030181529082905262001d4c91620036f3565b6000604051808303816000865af19150503d806000811462001d8b576040519150601f19603f3d011682016040523d82523d6000602084013e62001d90565b606091505b505050505b6000805461ff001916610100179055565b806001600160a01b0316826001600160a01b03161462001a43577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001e2e9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162001e6791906200389f565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162001a319190620038e4565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801562001f1357602002820191906000526020600020905b81548152602001906001019080831162001efe575b5050505050905060008362001f288362002209565b60405160200162001f3b9291906200372c565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162001f8f9186918891016200390f565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662001fca5762001fc887620022b6565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200200b9187918991016200390f565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620020529190620036f3565b600060405180830381855afa9150503d80600081146200208f576040519150601f19603f3d011682016040523d82523d6000602084013e62002094565b606091505b509150620020b1905081620020ab8860206200394b565b62002fad565b604051630667f9d760e41b81529092506000915060008051602062006d9c8339815191529063667f9d7090620020ee908b908790600401620033c3565b6020604051808303816000875af11580156200210e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021349190620035cd565b9050808214620021585760405162461bcd60e51b8152600401620007df906200396d565b6040516370ca10bb60e01b815260008051602062006d9c833981519152906370ca10bb9062002190908b9087908e906004016200387e565b600060405180830381600087803b158015620021ab57600080fd5b505af1158015620021c0573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620021f560028b01600062003053565b896004016000905550505050505050505050565b60606000825160206200221d91906200394b565b67ffffffffffffffff81111562002238576200223862003132565b6040519080825280601f01601f19166020018201604052801562002263576020820181803683370190505b50905060005b8351811015620007e85760008482815181106200228a576200228a62003535565b602002602001015190508082602002602001840152508080620022ad9062003a08565b91505062002269565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200232857602002820191906000526020600020905b81548152602001906001019080831162002313575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062002374925085918791016200390f565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562002413576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291620023e39185918791016200390f565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620024218362002209565b604051602001620024349291906200372c565b604051602081830303815290604052905060008051602062006ddc83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200249357600080fd5b505af1158015620024a8573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620024c99190620036f3565b600060405180830381855afa9150503d806000811462002506576040519150601f19603f3d011682016040523d82523d6000602084013e6200250b565b606091505b50915062002522905081620020ab8760206200394b565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062006d9c833981519152906365bc9481906024016000604051808303816000875af11580156200257f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620025a9919081019062003a91565b50905080516001036200287257600060008051602062006ddc83398151915260001c6001600160a01b031663667f9d708984600081518110620025f057620025f062003535565b60200260200101516040518363ffffffff1660e01b815260040162002617929190620033c3565b6020604051808303816000875af115801562002637573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200265d9190620035cd565b905080620026c1577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106200269d576200269d62003535565b602002602001015160001c604051620026b8929190620033c3565b60405180910390a15b808314620026e35760405162461bcd60e51b8152600401620007df906200396d565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200271b9291906200390f565b604051602081830303815290604052805190602001208560008151811062002747576200274762003535565b602002602001015160001c60405162002764949392919062003af2565b60405180910390a18160008151811062002782576200278262003535565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092620027cd918a918c91016200390f565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162002837918a918c91016200390f565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062002e30565b60018151111562002dbf5760005b815181101562002db857600060008051602062006ddc83398151915260001c6001600160a01b031663667f9d708a858581518110620028c357620028c362003535565b60200260200101516040518363ffffffff1660e01b8152600401620028ea929190620033c3565b6020604051808303816000875af11580156200290a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620029309190620035cd565b90508062002993577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106200296f576200296f62003535565b602002602001015160001c6040516200298a929190620033c3565b60405180910390a15b60008051602062006ddc83398151915260001c6001600160a01b03166370ca10bb8a858581518110620029ca57620029ca62003535565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620029f8939291906200387e565b600060405180830381600087803b15801562002a1357600080fd5b505af115801562002a28573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162002a4a9190620036f3565b600060405180830381855afa9150503d806000811462002a87576040519150601f19603f3d011682016040523d82523d6000602084013e62002a8c565b606091505b50909250905062002aa481620020ab8b60206200394b565b955081801562002ab8575061133760f01b86145b1562002d0b577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162002af69291906200390f565b6040516020818303038152906040528051906020012088888151811062002b215762002b2162003535565b602002602001015160001c60405162002b3e949392919062003af2565b60405180910390a184848151811062002b5b5762002b5b62003535565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262002ba6918d918f91016200390f565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162002c339291906200390f565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602062006ddc83398151915260001c6001600160a01b03166370ca10bb8c87878151811062002ca55762002ca562003535565b6020026020010151866040518463ffffffff1660e01b815260040162002cce939291906200387e565b600060405180830381600087803b15801562002ce957600080fd5b505af115801562002cfe573d6000803e3d6000fd5b5050505050505062002db8565b60008051602062006ddc83398151915260001c6001600160a01b03166370ca10bb8c87878151811062002d425762002d4262003535565b6020026020010151866040518463ffffffff1660e01b815260040162002d6b939291906200387e565b600060405180830381600087803b15801562002d8657600080fd5b505af115801562002d9b573d6000803e3d6000fd5b50505050505050808062002daf9062003a08565b91505062002880565b5062002e30565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401620007df565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162002e749188918a91016200390f565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662002f035760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401620007df565b6005890180546001600160a01b031916905560038901805463ffffffff1916905562002f3460028a01600062003053565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929162002f7a9188918a91016200390f565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511162002fc457845162002fc7565b60205b905060005b818110156200302d5762002fe28160086200394b565b8662002fef838862003711565b8151811062003002576200300262003535565b01602001516001600160f81b031916901c929092179180620030248162003a08565b91505062002fcc565b5090949350505050565b61274f8062003b2383390190565b610b2a806200627283390190565b5080546000825590600052602060002090810190620018dd91905b808211156200308457600081556001016200306e565b5090565b6001600160a01b0381168114620018dd57600080fd5b60008060408385031215620030b257600080fd5b8235620030bf8162003088565b946020939093013593505050565b600060208284031215620030e057600080fd5b8135620030ed8162003088565b9392505050565b600080604083850312156200310857600080fd5b8235620031158162003088565b91506020830135620031278162003088565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156200316e576200316e62003132565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715620031a057620031a062003132565b604052919050565b600067ffffffffffffffff821115620031c557620031c562003132565b50601f01601f191660200190565b6000620031ea620031e484620031a8565b62003174565b9050828152838383011115620031ff57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126200322857600080fd5b620030ed83833560208501620031d3565b600080604083850312156200324d57600080fd5b823567ffffffffffffffff808211156200326657600080fd5b620032748683870162003216565b935060208501359150808211156200328b57600080fd5b508301601f810185136200329e57600080fd5b620032af85823560208401620031d3565b9150509250929050565b600060208284031215620032cc57600080fd5b5035919050565b600080600060608486031215620032e957600080fd5b8335620032f68162003088565b92506020840135620033088162003088565b929592945050506040919091013590565b8015158114620018dd57600080fd5b600080600080608085870312156200333f57600080fd5b84356200334c8162003088565b935060208501356200335e8162003088565b9250604085013591506060850135620033778162003319565b939692955090935050565b6000602082840312156200339557600080fd5b813567ffffffffffffffff811115620033ad57600080fd5b620033bb8482850162003216565b949350505050565b6001600160a01b03929092168252602082015260400190565b60005b83811015620033f9578181015183820152602001620033df565b8381111562000b4f5750506000910152565b6000815180845262003425816020860160208601620033dc565b601f01601f19169290920160200192915050565b602081526000620030ed60208301846200340b565b60006200345f620031e484620031a8565b90508281528383830111156200347457600080fd5b620030ed836020830184620033dc565b6000602082840312156200349757600080fd5b815167ffffffffffffffff811115620034af57600080fd5b8201601f81018413620034c157600080fd5b620033bb848251602084016200344e565b60008351620034e6818460208801620033dc565b835190830190620034fc818360208801620033dc565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562003530576200353062003505565b500390565b634e487b7160e01b600052603260045260246000fd5b600060018060a01b03808616835260206060818501526200357060608501876200340b565b84810360408681019190915286518083528388019284019060005b81811015620035bd5784518051881684528601516001600160601b03168684015293850193918301916001016200358b565b50909a9950505050505050505050565b600060208284031215620035e057600080fd5b5051919050565b600067ffffffffffffffff82111562003604576200360462003132565b5060051b60200190565b600060208083850312156200362257600080fd5b825167ffffffffffffffff8111156200363a57600080fd5b8301601f810185136200364c57600080fd5b80516200365d620031e482620035e7565b81815260069190911b820183019083810190878311156200367d57600080fd5b928401925b82841015620036e857604084890312156200369d5760008081fd5b620036a762003148565b8451620036b48162003088565b8152848601516001600160601b0381168114620036d15760008081fd5b818701528252604093909301929084019062003682565b979650505050505050565b6000825162003707818460208701620033dc565b9190910192915050565b6000821982111562003727576200372762003505565b500190565b6001600160e01b031983168152815160009062003751816004850160208701620033dc565b919091016004019392505050565b6000602082840312156200377257600080fd5b8151620030ed8162003319565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620030ed60808301846200340b565b604081526000620037db60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b8281036020840152620033bb81856200340b565b604081526000620037db60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200384560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200384560408301600a815269080808081058dd1d585b60b21b602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b604081526000620038ca60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000620038ca60408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b838110156200393b578151855293820193908201906001016200391d565b5050948252509092019392505050565b600081600019048311821515161562003968576200396862003505565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b60006001820162003a1d5762003a1d62003505565b5060010190565b600082601f83011262003a3657600080fd5b8151602062003a49620031e483620035e7565b82815260059290921b8401810191818101908684111562003a6957600080fd5b8286015b8481101562003a86578051835291830191830162003a6d565b509695505050505050565b6000806040838503121562003aa557600080fd5b825167ffffffffffffffff8082111562003abe57600080fd5b62003acc8683870162003a24565b9350602085015191508082111562003ae357600080fd5b50620032af8582860162003a24565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60806040523480156200001157600080fd5b506040516200274f3803806200274f83398101604081905262000034916200012b565b8181600062000044838262000224565b50600162000053828262000224565b5050505050620002f0565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b83821115620001215760008385830101525b9695505050505050565b600080604083850312156200013f57600080fd5b82516001600160401b03808211156200015757600080fd5b620001658683870162000074565b935060208501519150808211156200017c57600080fd5b506200018b8582860162000074565b9150509250929050565b600181811c90821680620001aa57607f821691505b602082108103620001cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021f57600081815260208120601f850160051c81016020861015620001fa5750805b601f850160051c820191505b818110156200021b5782815560010162000206565b5050505b505050565b81516001600160401b038111156200024057620002406200005e565b620002588162000251845462000195565b84620001d1565b602080601f831160018114620002905760008415620002775750858301515b600019600386901b1c1916600185901b1785556200021b565b600085815260208120601f198616915b82811015620002c157888601518255948401946001909101908401620002a0565b5085821015620002e05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61244f80620003006000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063830ef41b116100ad578063c87b56dd11610071578063c87b56dd14610271578063d51f299d14610284578063e985e9c5146102ba578063ee53b6a9146102f6578063fb2ef4a31461030957600080fd5b8063830ef41b1461021057806395d89b4114610223578063a22cb4651461022b578063b88d4fde1461023e578063bb3bafd61461025157600080fd5b806323b872dd116100f457806323b872dd146101a35780632b32c03b146101b657806342842e0e146101c95780636352211e146101dc57806370a08231146101ef57600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b610139610134366004611b14565b610343565b60405190151581526020015b60405180910390f35b610156610395565b6040516101459190611b89565b610176610171366004611b9c565b610427565b6040516001600160a01b039091168152602001610145565b6101a161019c366004611bca565b61044e565b005b6101a16101b1366004611bf6565b610568565b6101a16101c4366004611c37565b610599565b6101a16101d7366004611bf6565b6106c1565b6101766101ea366004611b9c565b6106dc565b6102026101fd366004611c7f565b61073c565b604051908152602001610145565b6101a161021e366004611c9c565b6107c2565b610156610995565b6101a1610239366004611ce2565b6109a4565b6101a161024c366004611de3565b6109b3565b61026461025f366004611b9c565b6109e5565b6040516101459190611e63565b61015661027f366004611b9c565b610a74565b610202610292366004611ec4565b60009182526008602090815260408084206001600160a01b0393909316845291905290205490565b6101396102c8366004611ee9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610202610304366004611f17565b610b84565b61031c61031736600461204e565b610bbe565b604080516001600160a01b0390931683526001600160601b03909116602083015201610145565b60006001600160e01b031982166380ac58cd60e01b148061037457506001600160e01b03198216635b5e139f60e01b145b8061038f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103a490612070565b80601f01602080910402602001604051908101604052809291908181526020018280546103d090612070565b801561041d5780601f106103f25761010080835404028352916020019161041d565b820191906000526020600020905b81548152906001019060200180831161040057829003601f168201915b5050505050905090565b600061043282610c07565b506000908152600460205260409020546001600160a01b031690565b6000610459826106dc565b9050806001600160a01b0316836001600160a01b0316036104cb5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104e757506104e781336102c8565b6105595760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016104c2565b6105638383610c69565b505050565b6105723382610cd7565b61058e5760405162461bcd60e51b81526004016104c2906120aa565b610563838383610d55565b6001600160a01b03841633146105f15760405162461bcd60e51b815260206004820152601860248201527f6e6f7420616c6c6f77656420746f20616464204552433230000000000000000060448201526064016104c2565b6105fd84848484610f00565b6040516323b872dd60e01b81526001600160a01b038581166004830152306024830152604482018390528316906323b872dd906064016020604051808303816000875af1158015610652573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067691906120f8565b6106bb5760405162461bcd60e51b815260206004820152601660248201527522a9219918103a3930b739b332b9103330b4b632b21760511b60448201526064016104c2565b50505050565b610563838383604051806020016040528060008152506109b3565b6000818152600260205260408120546001600160a01b03168061038f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104c2565b60006001600160a01b0382166107a65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104c2565b506001600160a01b031660009081526003602052604090205490565b6001600160a01b0383166108185760405162461bcd60e51b815260206004820152601b60248201527f63616e6e6f742073656e6420746f207a65726f2061646472657373000000000060448201526064016104c2565b6000610823856106dc565b90506001600160a01b038116331461087d5760405162461bcd60e51b815260206004820152601760248201527f6f6e6c79206f776e65722063616e207472616e7366657200000000000000000060448201526064016104c2565b610888858484611061565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af11580156108d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fb91906120f8565b6109405760405162461bcd60e51b815260206004820152601660248201527522a9219918103a3930b739b332b9103330b4b632b21760511b60448201526064016104c2565b826001600160a01b0316846001600160a01b0316867fa8352277873fc0d2b233b8127433da351a4164fa701ed6ff79655694222932c48560405161098691815260200190565b60405180910390a45050505050565b6060600180546103a490612070565b6109af338383611279565b5050565b6109bd3383610cd7565b6109d95760405162461bcd60e51b81526004016104c2906120aa565b6106bb84848484611347565b6060600a6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610a6957600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b031681830152825260019092019101610a1a565b505050509050919050565b6060610a7f82610c07565b60008281526006602052604081208054610a9890612070565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac490612070565b8015610b115780601f10610ae657610100808354040283529160200191610b11565b820191906000526020600020905b815481529060010190602001808311610af457829003601f168201915b505050505090506000610b2f60408051602081019091526000815290565b90508051600003610b41575092915050565b815115610b73578082604051602001610b5b929190612115565b60405160208183030381529060405292505050919050565b610b7c8461137a565b949350505050565b600080610b9060075490565b9050610b9c81846113ee565b610ba685826116a8565b610bb081856116c2565b610b7c600780546001019055565b600a6020528160005260406000208181548110610bda57600080fd5b6000918252602090912001546001600160a01b0381169250600160a01b90046001600160601b0316905082565b6000818152600260205260409020546001600160a01b0316610c665760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104c2565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c9e826106dc565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ce3836106dc565b9050806001600160a01b0316846001600160a01b03161480610d2a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b7c5750836001600160a01b0316610d4384610427565b6001600160a01b031614949350505050565b826001600160a01b0316610d68826106dc565b6001600160a01b031614610dcc5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104c2565b6001600160a01b038216610e2e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104c2565b600081815260046020908152604080832080546001600160a01b03191690556001600160a01b038616835260039091528120805460019290610e7190849061215a565b90915550506001600160a01b0382166000908152600360205260408120805460019290610e9f908490612171565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610f0b846106dc565b6001600160a01b031603610f615760405162461bcd60e51b815260206004820152601860248201527f5f746f6b656e496420646f6573206e6f742065786973742e000000000000000060448201526064016104c2565b80156106bb5760008381526008602090815260408083206001600160a01b038616845290915281205490819003610fe25760008481526009602081815260408084208054600b84528286206001600160a01b038a16808852908552928620819055938352600184018155845292200180546001600160a01b03191690911790555b60008481526008602090815260408083206001600160a01b038716845290915281208054849290611014908490612171565b92505081905550826001600160a01b031684866001600160a01b03167f684ce28ace37552c6bfb98b7cceda8ed55327078eafb5dfb31218e08563827638560405161098691815260200190565b8060000361106e57505050565b60008381526008602090815260408083206001600160a01b0386168452909152902054818110156110f15760405162461bcd60e51b815260206004820152602760248201527f4e6f7420656e6f75676820746f6b656e20617661696c61626c6520746f20747260448201526630b739b332b91760c91b60648201526084016104c2565b60006110fd838361215a565b60008681526008602090815260408083206001600160a01b03891684529091528120829055909150819003611272576000858152600960205260408120546111479060019061215a565b6000878152600960205260408120805492935090918390811061116c5761116c612189565b6000918252602090912001546001600160a01b0390811691508616811461120f576000878152600b602090815260408083206001600160a01b038a1684528252808320548a845260099092529091208054839190839081106111d0576111d0612189565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558a8252600b81526040808320938616835292905220555b6000878152600b602090815260408083206001600160a01b038a16845282528083208390558983526009909152902080548061124d5761124d61219f565b600082815260209020810160001990810180546001600160a01b031916905501905550505b5050505050565b816001600160a01b0316836001600160a01b0316036112da5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104c2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611352848484610d55565b61135e84848484611755565b6106bb5760405162461bcd60e51b81526004016104c2906121b5565b606061138582610c07565b600061139c60408051602081019091526000815290565b905060008151116113bc57604051806020016040528060008152506113e7565b806113c684611856565b6040516020016113d7929190612115565b6040516020818303038152906040525b9392505050565b600a815111156114405760405162461bcd60e51b815260206004820181905260248201527f41746d6f737420313020726f79616c746965732063616e20626520616464656460448201526064016104c2565b6000828152600a6020526040812061145791611acc565b6000805b82518110156116115760006001600160a01b031683828151811061148157611481612189565b6020026020010151600001516001600160a01b0316036114ef5760405162461bcd60e51b815260206004820152602360248201527f526f79616c747920726563697069656e742073686f756c642062652070726573604482015262195b9d60ea1b60648201526084016104c2565b82818151811061150157611501612189565b6020026020010151602001516001600160601b03166000036115655760405162461bcd60e51b815260206004820152601b60248201527f526f79616c74792076616c75652073686f756c64206265203e2030000000000060448201526064016104c2565b6000848152600a60205260409020835184908390811061158757611587612189565b6020908102919091018101518254600181018455600093845292829020815191909201516001600160601b0316600160a01b026001600160a01b039091161791015582518390829081106115dd576115dd612189565b6020026020010151602001516001600160601b0316826115fd9190612171565b91508061160981612207565b91505061145b565b5061271081106116635760405162461bcd60e51b815260206004820152601760248201527f53756d206f6620526f79616c74696573203e203130302500000000000000000060448201526064016104c2565b816040516116719190612220565b6040519081900381209084907fe23425cf56a81561c420f592eb54f21107c562f26c8c78c4a20d26920d244e6690600090a3505050565b6109af828260405180602001604052806000815250611957565b6000828152600260205260409020546001600160a01b031661173d5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104c2565b600082815260066020526040902061056382826122c1565b60006001600160a01b0384163b1561184b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611799903390899088908890600401612381565b6020604051808303816000875af19250505080156117d4575060408051601f3d908101601f191682019092526117d1918101906123be565b60015b611831573d808015611802576040519150601f19603f3d011682016040523d82523d6000602084013e611807565b606091505b5080516000036118295760405162461bcd60e51b81526004016104c2906121b5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b7c565b506001949350505050565b60608160000361187d5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156118a7578061189181612207565b91506118a09050600a836123f1565b9150611881565b60008167ffffffffffffffff8111156118c2576118c2611d1b565b6040519080825280601f01601f1916602001820160405280156118ec576020820181803683370190505b5090505b8415610b7c5761190160018361215a565b915061190e600a86612405565b611919906030612171565b60f81b81838151811061192e5761192e612189565b60200101906001600160f81b031916908160001a905350611950600a866123f1565b94506118f0565b611961838361198a565b61196e6000848484611755565b6105635760405162461bcd60e51b81526004016104c2906121b5565b6001600160a01b0382166119e05760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104c2565b6000818152600260205260409020546001600160a01b031615611a455760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104c2565b6001600160a01b0382166000908152600360205260408120805460019290611a6e908490612171565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5080546000825590600052602060002090810190610c6691905b80821115611afa5760008155600101611ae6565b5090565b6001600160e01b031981168114610c6657600080fd5b600060208284031215611b2657600080fd5b81356113e781611afe565b60005b83811015611b4c578181015183820152602001611b34565b838111156106bb5750506000910152565b60008151808452611b75816020860160208601611b31565b601f01601f19169290920160200192915050565b6020815260006113e76020830184611b5d565b600060208284031215611bae57600080fd5b5035919050565b6001600160a01b0381168114610c6657600080fd5b60008060408385031215611bdd57600080fd5b8235611be881611bb5565b946020939093013593505050565b600080600060608486031215611c0b57600080fd5b8335611c1681611bb5565b92506020840135611c2681611bb5565b929592945050506040919091013590565b60008060008060808587031215611c4d57600080fd5b8435611c5881611bb5565b9350602085013592506040850135611c6f81611bb5565b9396929550929360600135925050565b600060208284031215611c9157600080fd5b81356113e781611bb5565b60008060008060808587031215611cb257600080fd5b843593506020850135611cc481611bb5565b92506040850135611c6f81611bb5565b8015158114610c6657600080fd5b60008060408385031215611cf557600080fd5b8235611d0081611bb5565b91506020830135611d1081611cd4565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611d5457611d54611d1b565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611d8357611d83611d1b565b604052919050565b600067ffffffffffffffff831115611da557611da5611d1b565b611db8601f8401601f1916602001611d5a565b9050828152838383011115611dcc57600080fd5b828260208301376000602084830101529392505050565b60008060008060808587031215611df957600080fd5b8435611e0481611bb5565b93506020850135611e1481611bb5565b925060408501359150606085013567ffffffffffffffff811115611e3757600080fd5b8501601f81018713611e4857600080fd5b611e5787823560208401611d8b565b91505092959194509250565b602080825282518282018190526000919060409081850190868401855b82811015611eb757815180516001600160a01b031685528601516001600160601b0316868501529284019290850190600101611e80565b5091979650505050505050565b60008060408385031215611ed757600080fd5b823591506020830135611d1081611bb5565b60008060408385031215611efc57600080fd5b8235611f0781611bb5565b91506020830135611d1081611bb5565b600080600060608486031215611f2c57600080fd5b8335611f3781611bb5565b925060208481013567ffffffffffffffff80821115611f5557600080fd5b818701915087601f830112611f6957600080fd5b611f77888335858501611d8b565b9450604091508187013581811115611f8e57600080fd5b8701601f81018913611f9f57600080fd5b803582811115611fb157611fb1611d1b565b611fbf858260051b01611d5a565b818152858101935060069190911b82018501908a821115611fdf57600080fd5b918501915b8183101561203e5784838c031215611ffc5760008081fd5b612004611d31565b833561200f81611bb5565b8152838701356001600160601b038116811461202b5760008081fd5b8188015284529285019291840191611fe4565b8096505050505050509250925092565b6000806040838503121561206157600080fd5b50508035926020909101359150565b600181811c9082168061208457607f821691505b6020821081036120a457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60006020828403121561210a57600080fd5b81516113e781611cd4565b60008351612127818460208801611b31565b83519083019061213b818360208801611b31565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561216c5761216c612144565b500390565b6000821982111561218457612184612144565b500190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161221957612219612144565b5060010190565b815160009082906020808601845b8381101561226757815180516001600160a01b031686528301516001600160601b0316838601526040909401939082019060010161222e565b50929695505050505050565b601f82111561056357600081815260208120601f850160051c8101602086101561229a5750805b601f850160051c820191505b818110156122b9578281556001016122a6565b505050505050565b815167ffffffffffffffff8111156122db576122db611d1b565b6122ef816122e98454612070565b84612273565b602080601f831160018114612324576000841561230c5750858301515b600019600386901b1c1916600185901b1785556122b9565b600085815260208120601f198616915b8281101561235357888601518255948401946001909101908401612334565b50858210156123715787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906123b490830184611b5d565b9695505050505050565b6000602082840312156123d057600080fd5b81516113e781611afe565b634e487b7160e01b600052601260045260246000fd5b600082612400576124006123db565b500490565b600082612414576124146123db565b50069056fea264697066735822122018615737a54784d3ab34fc6fc40d38b8bed441e18652d7a538fe2fcc8b131bd964736f6c634300080f0033608060405234801561001057600080fd5b506040518060400160405280600b81526020016a053616d706c6545524332360ac1b81525060405180604001604052806002815260200161151560f21b815250816003908161005f9190610113565b50600461006c8282610113565b5050506101d2565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009e57607f821691505b6020821081036100be57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010e57600081815260208120601f850160051c810160208610156100eb5750805b601f850160051c820191505b8181101561010a578281556001016100f7565b5050505b505050565b81516001600160401b0381111561012c5761012c610074565b6101408161013a845461008a565b846100c4565b602080601f831160018114610175576000841561015d5750858301515b600019600386901b1c1916600185901b17855561010a565b600085815260208120601f198616915b828110156101a457888601518255948401946001909101908401610185565b50858210156101c25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610949806101e16000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610787565b60405180910390f35b6100ea6100e53660046107f8565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610822565b61026a565b604051601281526020016100ce565b6100ea61013c3660046107f8565b61028e565b61015461014f3660046107f8565b6102b0565b005b6100fe61016436600461085e565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea6101953660046107f8565b6102cd565b6100ea6101a83660046107f8565b61034d565b6100fe6101bb366004610880565b61035b565b6060600380546101cf906108b3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108b3565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108ed565b610386565b6102ba82826106c8565b5050565b6060600480546101cf906108b3565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361051e565b6001600160a01b03821661071e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461073091906108ed565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156107b457858101830151858201604001528201610798565b818111156107c6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107f357600080fd5b919050565b6000806040838503121561080b57600080fd5b610814836107dc565b946020939093013593505050565b60008060006060848603121561083757600080fd5b610840846107dc565b925061084e602085016107dc565b9150604084013590509250925092565b60006020828403121561087057600080fd5b610879826107dc565b9392505050565b6000806040838503121561089357600080fd5b61089c836107dc565b91506108aa602084016107dc565b90509250929050565b600181811c908216806108c757607f821691505b6020821081036108e757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561090e57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220baf2e5e7476317212738364aedae4aff02c22456621dafa3221397fd207b32e064736f6c634300080f00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220a7143f808c19f83ba5344a317c499813df362b5f3b370db9e179431753a2044564736f6c634300080f0033",
    "sourceMap": "240:2084:3:-:0;;;1572:26:4;;;171:28:5;-1:-1:-1;;171:28:5;;;;;;337:48:3;;;-1:-1:-1;;;;;;337:48:3;;;377:6;337:48;;;;391:58;;;;;;441:6;391:58;;;240:2084;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001755760003560e01c806389242f2911620000d3578063c88a5e6d1162000086578063c88a5e6d1462000307578063d06d8229146200031e578063d82555f11462000335578063e9a79a7b146200034c578063f8ccbf471462000363578063fa7626d4146200037757600080fd5b806389242f29146200028657806397754ae914620002905780639a8325a014620002a7578063af9bbe5f14620002be578063b9c071b414620002d5578063ba414fa614620002ec57600080fd5b80633a768463116200012c5780633a76846314620002165780633bf82db1146200022d578063469e290b14620002445780636ac11701146200024e5780636bce989b14620002585780636f597075146200026f57600080fd5b80630a9254e4146200017a578063108554f21462000186578063233240ee146200019d57806329a9e30014620001b457806329ce9dde14620001cb5780632d6c17a314620001ff575b600080fd5b6200018462000385565b005b62000184620001973660046200309e565b62000458565b62000184620001ae366004620030cd565b62000531565b62000184620001c5366004620030f4565b6200060d565b620001e2620001dc36600462003239565b620006bf565b6040516001600160a01b0390911681526020015b60405180910390f35b6200018462000210366004620032b9565b620007ef565b620001e260008051602062006d9c83398151915281565b620001846200023e366004620032d3565b6200082f565b6200018462000911565b6200018462000b55565b6200018462000269366004620032d3565b62000c8d565b6200018462000280366004620030cd565b62000ca1565b6200018462000d4b565b62000184620002a136600462003328565b620010de565b620001e2620002b836600462003382565b6200131f565b62000184620002cf366004620032d3565b62001421565b62000184620002e6366004620032b9565b620014cf565b620002f6620014f0565b6040519015158152602001620001f6565b62000184620003183660046200309e565b62001621565b620001846200032f366004620030f4565b62001657565b6200018462000346366004620032d3565b62001709565b620001846200035d3660046200309e565b620017ef565b600054620002f69062010000900460ff1681565b600054620002f69060ff1681565b604051620003939062003037565b60408082526007908201526641636f6e6f6d7960c81b60608201526080602082018190526003908201526241434f60e81b60a082015260c001604051809103906000f080158015620003e9573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055604051620004189062003045565b604051809103906000f08015801562000435573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d906200048e9085908590600401620033c3565b600060405180830381600087803b158015620004a957600080fd5b505af1158015620004be573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038516600482015260008051602062006d9c83398151915292506306447d5691506024015b600060405180830381600087803b1580156200051457600080fd5b505af115801562000529573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d906200056b908490600160801b90600401620033c3565b600060405180830381600087803b1580156200058657600080fd5b505af11580156200059b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062006d9c833981519152925063ca669fa791506024015b600060405180830381600087803b158015620005f157600080fd5b505af115801562000606573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d9062000647908590600160801b90600401620033c3565b600060405180830381600087803b1580156200066257600080fd5b505af115801562000677573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b0380861660048301528416602482015260008051602062006d9c83398151915292506347e50cce9150604401620004f9565b604051638d1cc92560e01b8152600090819060008051602062006d9c83398151915290638d1cc92590620006f890879060040162003439565b6000604051808303816000875af115801562000718573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000742919081019062003484565b8360405160200162000756929190620034d2565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216620007e85760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b60008051602062006d9c83398151915263e5d6bf026200081083426200351b565b6040518263ffffffff1660e01b8152600401620005d691815260200190565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d90620008659086908590600401620033c3565b600060405180830381600087803b1580156200088057600080fd5b505af115801562000895573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b0380871660048301528516602482015260008051602062006d9c83398151915292506345b5607891506044015b600060405180830381600087803b158015620008f357600080fd5b505af115801562000908573d6000803e3d6000fd5b50505050505050565b60606200092e604080518082019091526000808252602082015290565b50604080518082018252600b546001600160a01b03168152600a6020820152815160018082528184019093529091816020015b6040805180820190915260008082526020820152815260200190600190039081620009615790505091508082600081518110620009a257620009a262003535565b602090810291909101810191909152604080518082018252600a808252697777772e736b2e636f6d60b01b938201939093526008549254915163ee53b6a960e01b815290926000926001600160a01b039182169263ee53b6a99262000a10921690869089906004016200354b565b6020604051808303816000875af115801562000a30573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a569190620035cd565b905062000a638162001895565b62000aa68160006040518060400160405280601881526020017f4661696c6564206d696e74696e67205269676874204e46540000000000000000815250620018e0565b600854600a546040516370a0823160e01b81526001600160a01b03918216600482015262000b4f9291909116906370a0823190602401602060405180830381865afa15801562000afa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b209190620035cd565b60016040518060400160405280600e81526020016d11985a5b1959081d1bc81b5a5b9d60921b815250620018e0565b50505050565b600854604080516306fdde0360e01b8152905162000bf2926001600160a01b0316916306fdde039160048083019260009291908290030181865afa15801562000ba2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bcc919081019062003484565b6040518060400160405280600781526020016641636f6e6f6d7960c81b8152506200191c565b600854604080516395d89b4160e01b8152905162000c8b926001600160a01b0316916395d89b419160048083019260009291908290030181865afa15801562000c3f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c69919081019062003484565b6040518060400160405280600381526020016241434f60e81b8152506200191c565b565b62000c9c8383836000620010de565b505050565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d9062000cdb908490600160801b90600401620033c3565b600060405180830381600087803b15801562000cf657600080fd5b505af115801562000d0b573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038416600482015260008051602062006d9c83398151915292506306447d569150602401620005d6565b606062000d68604080518082019091526000808252602082015290565b50604080518082018252600b546001600160a01b03168152600a6020820152815160018082528184019093529091816020015b604080518082019091526000808252602082015281526020019060019003908162000d9b579050509150808260008151811062000ddc5762000ddc62003535565b602090810291909101810191909152604080518082018252600a808252697777772e736b2e636f6d60b01b938201939093526008549254915163ee53b6a960e01b815290926000926001600160a01b039182169263ee53b6a99262000e4a921690869089906004016200354b565b6020604051808303816000875af115801562000e6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e909190620035cd565b60085460405163c87b56dd60e01b8152600481018390529192506000916001600160a01b039091169063c87b56dd90602401600060405180830381865afa15801562000ee0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f0a919081019062003484565b905062000f70816040518060400160405280600a8152602001697777772e736b2e636f6d60b01b8152506040518060400160405280601981526020017f496e76616c69642055524920666f722074686520746f6b656e0000000000000081525062001a47565b600854604051635d9dd7eb60e11b8152600481018490526000916001600160a01b03169063bb3bafd690602401600060405180830381865afa15801562000fbb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000fe591908101906200360e565b9050620010138160008151811062001001576200100162003535565b60200260200101516000015162001ad3565b6200107e816000815181106200102d576200102d62003535565b602002602001015160000151600b60009054906101000a90046001600160a01b03166040518060400160405280601081526020016f57726f6e6720526f79616c697469657360801b81525062001b1d565b620005298160008151811062001098576200109862003535565b6020026020010151602001516001600160601b0316600a6040518060400160405280601081526020016f57726f6e6720526f79616c697469657360801b815250620018e0565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200113491620036f3565b6000604051808303816000865af19150503d806000811462001173576040519150601f19603f3d011682016040523d82523d6000602084013e62001178565b606091505b50915050600081806020019051810190620011949190620035cd565b90506200120684620011ff87620011d66370a0823160e01b620011b960018d62001b6b565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062001b90565b8215620005295760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620012519190620036f3565b6000604051808303816000865af19150503d806000811462001290576040519150601f19603f3d011682016040523d82523d6000602084013e62001295565b606091505b50915050600081806020019051810190620012b19190620035cd565b905082861015620012dc57620012c886846200351b565b620012d490826200351b565b9050620012f7565b620012e883876200351b565b620012f4908262003711565b90505b6200131581620011ff6318160ddd60e01b620011b960018d62001b6b565b5050505050505050565b604051638d1cc92560e01b8152600090819060008051602062006d9c83398151915290638d1cc925906200135890869060040162003439565b6000604051808303816000875af115801562001378573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620013a2919081019062003484565b90508051602082016000f091506001600160a01b0382166200141b5760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401620007df565b50919050565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d90620014579086908590600401620033c3565b600060405180830381600087803b1580156200147257600080fd5b505af115801562001487573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b0380871660048301528516602482015260008051602062006d9c83398151915292506347e50cce9150604401620008d8565b60008051602062006d9c83398151915263e5d6bf0262000810834262003711565b60008054610100900460ff1615620015115750600054610100900460ff1690565b600060008051602062006d9c8339815191523b156200161c5760405160009060008051602062006d9c833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4906200157e9083906519985a5b195960d21b90602001620033c3565b60408051601f19818403018152908290526200159e92916020016200372c565b60408051601f1981840301815290829052620015ba91620036f3565b6000604051808303816000865af19150503d8060008114620015f9576040519150601f19603f3d011682016040523d82523d6000602084013e620015fe565b606091505b50915050808060200190518101906200161891906200375f565b9150505b919050565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d90620004f99085908590600401620033c3565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d9062001691908590600160801b90600401620033c3565b600060405180830381600087803b158015620016ac57600080fd5b505af1158015620016c1573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b0380861660048301528416602482015260008051602062006d9c83398151915292506345b560789150604401620004f9565b60008051602062006dbc833981519152604051620017c4906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a162000c9c81620011ff84620011d66370a0823160e01b620011b960018a62001b6b565b60405163c88a5e6d60e01b815260008051602062006d9c8339815191529063c88a5e6d90620018259085908590600401620033c3565b600060405180830381600087803b1580156200184057600080fd5b505af115801562001855573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602062006d9c833981519152925063ca669fa79150602401620004f9565b620018dd81604051602401620018ad91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b17905262001b9c565b50565b81831462000c9c5760008051602062006dbc833981519152816040516200190891906200377f565b60405180910390a162000c9c838362001bbd565b806040516020016200192f9190620036f3565b6040516020818303038152906040528051906020012082604051602001620019589190620036f3565b604051602081830303815290604052805190602001201462001a43577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620019e19060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a160008051602062006dbc8339815191528160405162001a099190620037b0565b60405180910390a160008051602062006dbc8339815191528260405162001a319190620037ef565b60405180910390a162001a4362001ca2565b5050565b8160405160200162001a5a9190620036f3565b604051602081830303815290604052805190602001208360405160200162001a839190620036f3565b604051602081830303815290604052805190602001201462000c9c5760008051602062006dbc8339815191528160405162001abf91906200377f565b60405180910390a162000c9c83836200191c565b6040516001600160a01b0382166024820152620018dd9060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b17905262001b9c565b816001600160a01b0316836001600160a01b03161462000c9c5760008051602062006dbc8339815191528160405162001b5791906200377f565b60405180910390a162000c9c838362001da6565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62001a43828262001ea0565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80821462001a43577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001c309060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162001c6991906200381a565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162001a31919062003853565b60008051602062006d9c8339815191523b1562001d955760405160009060008051602062006d9c833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49062001d109083906519985a5b195960d21b906001906020016200387e565b60408051601f198184030181529082905262001d3092916020016200372c565b60408051601f198184030181529082905262001d4c91620036f3565b6000604051808303816000865af19150503d806000811462001d8b576040519150601f19603f3d011682016040523d82523d6000602084013e62001d90565b606091505b505050505b6000805461ff001916610100179055565b806001600160a01b0316826001600160a01b03161462001a43577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001e2e9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162001e6791906200389f565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162001a319190620038e4565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801562001f1357602002820191906000526020600020905b81548152602001906001019080831162001efe575b5050505050905060008362001f288362002209565b60405160200162001f3b9291906200372c565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162001f8f9186918891016200390f565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662001fca5762001fc887620022b6565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200200b9187918991016200390f565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620020529190620036f3565b600060405180830381855afa9150503d80600081146200208f576040519150601f19603f3d011682016040523d82523d6000602084013e62002094565b606091505b509150620020b1905081620020ab8860206200394b565b62002fad565b604051630667f9d760e41b81529092506000915060008051602062006d9c8339815191529063667f9d7090620020ee908b908790600401620033c3565b6020604051808303816000875af11580156200210e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021349190620035cd565b9050808214620021585760405162461bcd60e51b8152600401620007df906200396d565b6040516370ca10bb60e01b815260008051602062006d9c833981519152906370ca10bb9062002190908b9087908e906004016200387e565b600060405180830381600087803b158015620021ab57600080fd5b505af1158015620021c0573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620021f560028b01600062003053565b896004016000905550505050505050505050565b60606000825160206200221d91906200394b565b67ffffffffffffffff81111562002238576200223862003132565b6040519080825280601f01601f19166020018201604052801562002263576020820181803683370190505b50905060005b8351811015620007e85760008482815181106200228a576200228a62003535565b602002602001015190508082602002602001840152508080620022ad9062003a08565b91505062002269565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200232857602002820191906000526020600020905b81548152602001906001019080831162002313575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062002374925085918791016200390f565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562002413576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291620023e39185918791016200390f565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620024218362002209565b604051602001620024349291906200372c565b604051602081830303815290604052905060008051602062006ddc83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200249357600080fd5b505af1158015620024a8573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620024c99190620036f3565b600060405180830381855afa9150503d806000811462002506576040519150601f19603f3d011682016040523d82523d6000602084013e6200250b565b606091505b50915062002522905081620020ab8760206200394b565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062006d9c833981519152906365bc9481906024016000604051808303816000875af11580156200257f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620025a9919081019062003a91565b50905080516001036200287257600060008051602062006ddc83398151915260001c6001600160a01b031663667f9d708984600081518110620025f057620025f062003535565b60200260200101516040518363ffffffff1660e01b815260040162002617929190620033c3565b6020604051808303816000875af115801562002637573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200265d9190620035cd565b905080620026c1577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106200269d576200269d62003535565b602002602001015160001c604051620026b8929190620033c3565b60405180910390a15b808314620026e35760405162461bcd60e51b8152600401620007df906200396d565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200271b9291906200390f565b604051602081830303815290604052805190602001208560008151811062002747576200274762003535565b602002602001015160001c60405162002764949392919062003af2565b60405180910390a18160008151811062002782576200278262003535565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092620027cd918a918c91016200390f565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162002837918a918c91016200390f565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062002e30565b60018151111562002dbf5760005b815181101562002db857600060008051602062006ddc83398151915260001c6001600160a01b031663667f9d708a858581518110620028c357620028c362003535565b60200260200101516040518363ffffffff1660e01b8152600401620028ea929190620033c3565b6020604051808303816000875af11580156200290a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620029309190620035cd565b90508062002993577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106200296f576200296f62003535565b602002602001015160001c6040516200298a929190620033c3565b60405180910390a15b60008051602062006ddc83398151915260001c6001600160a01b03166370ca10bb8a858581518110620029ca57620029ca62003535565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620029f8939291906200387e565b600060405180830381600087803b15801562002a1357600080fd5b505af115801562002a28573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162002a4a9190620036f3565b600060405180830381855afa9150503d806000811462002a87576040519150601f19603f3d011682016040523d82523d6000602084013e62002a8c565b606091505b50909250905062002aa481620020ab8b60206200394b565b955081801562002ab8575061133760f01b86145b1562002d0b577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162002af69291906200390f565b6040516020818303038152906040528051906020012088888151811062002b215762002b2162003535565b602002602001015160001c60405162002b3e949392919062003af2565b60405180910390a184848151811062002b5b5762002b5b62003535565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262002ba6918d918f91016200390f565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162002c339291906200390f565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602062006ddc83398151915260001c6001600160a01b03166370ca10bb8c87878151811062002ca55762002ca562003535565b6020026020010151866040518463ffffffff1660e01b815260040162002cce939291906200387e565b600060405180830381600087803b15801562002ce957600080fd5b505af115801562002cfe573d6000803e3d6000fd5b5050505050505062002db8565b60008051602062006ddc83398151915260001c6001600160a01b03166370ca10bb8c87878151811062002d425762002d4262003535565b6020026020010151866040518463ffffffff1660e01b815260040162002d6b939291906200387e565b600060405180830381600087803b15801562002d8657600080fd5b505af115801562002d9b573d6000803e3d6000fd5b50505050505050808062002daf9062003a08565b91505062002880565b5062002e30565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401620007df565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162002e749188918a91016200390f565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662002f035760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401620007df565b6005890180546001600160a01b031916905560038901805463ffffffff1916905562002f3460028a01600062003053565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929162002f7a9188918a91016200390f565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511162002fc457845162002fc7565b60205b905060005b818110156200302d5762002fe28160086200394b565b8662002fef838862003711565b8151811062003002576200300262003535565b01602001516001600160f81b031916901c929092179180620030248162003a08565b91505062002fcc565b5090949350505050565b61274f8062003b2383390190565b610b2a806200627283390190565b5080546000825590600052602060002090810190620018dd91905b808211156200308457600081556001016200306e565b5090565b6001600160a01b0381168114620018dd57600080fd5b60008060408385031215620030b257600080fd5b8235620030bf8162003088565b946020939093013593505050565b600060208284031215620030e057600080fd5b8135620030ed8162003088565b9392505050565b600080604083850312156200310857600080fd5b8235620031158162003088565b91506020830135620031278162003088565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156200316e576200316e62003132565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715620031a057620031a062003132565b604052919050565b600067ffffffffffffffff821115620031c557620031c562003132565b50601f01601f191660200190565b6000620031ea620031e484620031a8565b62003174565b9050828152838383011115620031ff57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126200322857600080fd5b620030ed83833560208501620031d3565b600080604083850312156200324d57600080fd5b823567ffffffffffffffff808211156200326657600080fd5b620032748683870162003216565b935060208501359150808211156200328b57600080fd5b508301601f810185136200329e57600080fd5b620032af85823560208401620031d3565b9150509250929050565b600060208284031215620032cc57600080fd5b5035919050565b600080600060608486031215620032e957600080fd5b8335620032f68162003088565b92506020840135620033088162003088565b929592945050506040919091013590565b8015158114620018dd57600080fd5b600080600080608085870312156200333f57600080fd5b84356200334c8162003088565b935060208501356200335e8162003088565b9250604085013591506060850135620033778162003319565b939692955090935050565b6000602082840312156200339557600080fd5b813567ffffffffffffffff811115620033ad57600080fd5b620033bb8482850162003216565b949350505050565b6001600160a01b03929092168252602082015260400190565b60005b83811015620033f9578181015183820152602001620033df565b8381111562000b4f5750506000910152565b6000815180845262003425816020860160208601620033dc565b601f01601f19169290920160200192915050565b602081526000620030ed60208301846200340b565b60006200345f620031e484620031a8565b90508281528383830111156200347457600080fd5b620030ed836020830184620033dc565b6000602082840312156200349757600080fd5b815167ffffffffffffffff811115620034af57600080fd5b8201601f81018413620034c157600080fd5b620033bb848251602084016200344e565b60008351620034e6818460208801620033dc565b835190830190620034fc818360208801620033dc565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562003530576200353062003505565b500390565b634e487b7160e01b600052603260045260246000fd5b600060018060a01b03808616835260206060818501526200357060608501876200340b565b84810360408681019190915286518083528388019284019060005b81811015620035bd5784518051881684528601516001600160601b03168684015293850193918301916001016200358b565b50909a9950505050505050505050565b600060208284031215620035e057600080fd5b5051919050565b600067ffffffffffffffff82111562003604576200360462003132565b5060051b60200190565b600060208083850312156200362257600080fd5b825167ffffffffffffffff8111156200363a57600080fd5b8301601f810185136200364c57600080fd5b80516200365d620031e482620035e7565b81815260069190911b820183019083810190878311156200367d57600080fd5b928401925b82841015620036e857604084890312156200369d5760008081fd5b620036a762003148565b8451620036b48162003088565b8152848601516001600160601b0381168114620036d15760008081fd5b818701528252604093909301929084019062003682565b979650505050505050565b6000825162003707818460208701620033dc565b9190910192915050565b6000821982111562003727576200372762003505565b500190565b6001600160e01b031983168152815160009062003751816004850160208701620033dc565b919091016004019392505050565b6000602082840312156200377257600080fd5b8151620030ed8162003319565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620030ed60808301846200340b565b604081526000620037db60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b8281036020840152620033bb81856200340b565b604081526000620037db60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200384560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200384560408301600a815269080808081058dd1d585b60b21b602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b604081526000620038ca60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000620038ca60408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b838110156200393b578151855293820193908201906001016200391d565b5050948252509092019392505050565b600081600019048311821515161562003968576200396862003505565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b60006001820162003a1d5762003a1d62003505565b5060010190565b600082601f83011262003a3657600080fd5b8151602062003a49620031e483620035e7565b82815260059290921b8401810191818101908684111562003a6957600080fd5b8286015b8481101562003a86578051835291830191830162003a6d565b509695505050505050565b6000806040838503121562003aa557600080fd5b825167ffffffffffffffff8082111562003abe57600080fd5b62003acc8683870162003a24565b9350602085015191508082111562003ae357600080fd5b50620032af8582860162003a24565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60806040523480156200001157600080fd5b506040516200274f3803806200274f83398101604081905262000034916200012b565b8181600062000044838262000224565b50600162000053828262000224565b5050505050620002f0565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b83821115620001215760008385830101525b9695505050505050565b600080604083850312156200013f57600080fd5b82516001600160401b03808211156200015757600080fd5b620001658683870162000074565b935060208501519150808211156200017c57600080fd5b506200018b8582860162000074565b9150509250929050565b600181811c90821680620001aa57607f821691505b602082108103620001cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021f57600081815260208120601f850160051c81016020861015620001fa5750805b601f850160051c820191505b818110156200021b5782815560010162000206565b5050505b505050565b81516001600160401b038111156200024057620002406200005e565b620002588162000251845462000195565b84620001d1565b602080601f831160018114620002905760008415620002775750858301515b600019600386901b1c1916600185901b1785556200021b565b600085815260208120601f198616915b82811015620002c157888601518255948401946001909101908401620002a0565b5085821015620002e05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61244f80620003006000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063830ef41b116100ad578063c87b56dd11610071578063c87b56dd14610271578063d51f299d14610284578063e985e9c5146102ba578063ee53b6a9146102f6578063fb2ef4a31461030957600080fd5b8063830ef41b1461021057806395d89b4114610223578063a22cb4651461022b578063b88d4fde1461023e578063bb3bafd61461025157600080fd5b806323b872dd116100f457806323b872dd146101a35780632b32c03b146101b657806342842e0e146101c95780636352211e146101dc57806370a08231146101ef57600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b610139610134366004611b14565b610343565b60405190151581526020015b60405180910390f35b610156610395565b6040516101459190611b89565b610176610171366004611b9c565b610427565b6040516001600160a01b039091168152602001610145565b6101a161019c366004611bca565b61044e565b005b6101a16101b1366004611bf6565b610568565b6101a16101c4366004611c37565b610599565b6101a16101d7366004611bf6565b6106c1565b6101766101ea366004611b9c565b6106dc565b6102026101fd366004611c7f565b61073c565b604051908152602001610145565b6101a161021e366004611c9c565b6107c2565b610156610995565b6101a1610239366004611ce2565b6109a4565b6101a161024c366004611de3565b6109b3565b61026461025f366004611b9c565b6109e5565b6040516101459190611e63565b61015661027f366004611b9c565b610a74565b610202610292366004611ec4565b60009182526008602090815260408084206001600160a01b0393909316845291905290205490565b6101396102c8366004611ee9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610202610304366004611f17565b610b84565b61031c61031736600461204e565b610bbe565b604080516001600160a01b0390931683526001600160601b03909116602083015201610145565b60006001600160e01b031982166380ac58cd60e01b148061037457506001600160e01b03198216635b5e139f60e01b145b8061038f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103a490612070565b80601f01602080910402602001604051908101604052809291908181526020018280546103d090612070565b801561041d5780601f106103f25761010080835404028352916020019161041d565b820191906000526020600020905b81548152906001019060200180831161040057829003601f168201915b5050505050905090565b600061043282610c07565b506000908152600460205260409020546001600160a01b031690565b6000610459826106dc565b9050806001600160a01b0316836001600160a01b0316036104cb5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104e757506104e781336102c8565b6105595760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016104c2565b6105638383610c69565b505050565b6105723382610cd7565b61058e5760405162461bcd60e51b81526004016104c2906120aa565b610563838383610d55565b6001600160a01b03841633146105f15760405162461bcd60e51b815260206004820152601860248201527f6e6f7420616c6c6f77656420746f20616464204552433230000000000000000060448201526064016104c2565b6105fd84848484610f00565b6040516323b872dd60e01b81526001600160a01b038581166004830152306024830152604482018390528316906323b872dd906064016020604051808303816000875af1158015610652573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067691906120f8565b6106bb5760405162461bcd60e51b815260206004820152601660248201527522a9219918103a3930b739b332b9103330b4b632b21760511b60448201526064016104c2565b50505050565b610563838383604051806020016040528060008152506109b3565b6000818152600260205260408120546001600160a01b03168061038f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104c2565b60006001600160a01b0382166107a65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104c2565b506001600160a01b031660009081526003602052604090205490565b6001600160a01b0383166108185760405162461bcd60e51b815260206004820152601b60248201527f63616e6e6f742073656e6420746f207a65726f2061646472657373000000000060448201526064016104c2565b6000610823856106dc565b90506001600160a01b038116331461087d5760405162461bcd60e51b815260206004820152601760248201527f6f6e6c79206f776e65722063616e207472616e7366657200000000000000000060448201526064016104c2565b610888858484611061565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af11580156108d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fb91906120f8565b6109405760405162461bcd60e51b815260206004820152601660248201527522a9219918103a3930b739b332b9103330b4b632b21760511b60448201526064016104c2565b826001600160a01b0316846001600160a01b0316867fa8352277873fc0d2b233b8127433da351a4164fa701ed6ff79655694222932c48560405161098691815260200190565b60405180910390a45050505050565b6060600180546103a490612070565b6109af338383611279565b5050565b6109bd3383610cd7565b6109d95760405162461bcd60e51b81526004016104c2906120aa565b6106bb84848484611347565b6060600a6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610a6957600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b031681830152825260019092019101610a1a565b505050509050919050565b6060610a7f82610c07565b60008281526006602052604081208054610a9890612070565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac490612070565b8015610b115780601f10610ae657610100808354040283529160200191610b11565b820191906000526020600020905b815481529060010190602001808311610af457829003601f168201915b505050505090506000610b2f60408051602081019091526000815290565b90508051600003610b41575092915050565b815115610b73578082604051602001610b5b929190612115565b60405160208183030381529060405292505050919050565b610b7c8461137a565b949350505050565b600080610b9060075490565b9050610b9c81846113ee565b610ba685826116a8565b610bb081856116c2565b610b7c600780546001019055565b600a6020528160005260406000208181548110610bda57600080fd5b6000918252602090912001546001600160a01b0381169250600160a01b90046001600160601b0316905082565b6000818152600260205260409020546001600160a01b0316610c665760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104c2565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c9e826106dc565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ce3836106dc565b9050806001600160a01b0316846001600160a01b03161480610d2a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b7c5750836001600160a01b0316610d4384610427565b6001600160a01b031614949350505050565b826001600160a01b0316610d68826106dc565b6001600160a01b031614610dcc5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104c2565b6001600160a01b038216610e2e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104c2565b600081815260046020908152604080832080546001600160a01b03191690556001600160a01b038616835260039091528120805460019290610e7190849061215a565b90915550506001600160a01b0382166000908152600360205260408120805460019290610e9f908490612171565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610f0b846106dc565b6001600160a01b031603610f615760405162461bcd60e51b815260206004820152601860248201527f5f746f6b656e496420646f6573206e6f742065786973742e000000000000000060448201526064016104c2565b80156106bb5760008381526008602090815260408083206001600160a01b038616845290915281205490819003610fe25760008481526009602081815260408084208054600b84528286206001600160a01b038a16808852908552928620819055938352600184018155845292200180546001600160a01b03191690911790555b60008481526008602090815260408083206001600160a01b038716845290915281208054849290611014908490612171565b92505081905550826001600160a01b031684866001600160a01b03167f684ce28ace37552c6bfb98b7cceda8ed55327078eafb5dfb31218e08563827638560405161098691815260200190565b8060000361106e57505050565b60008381526008602090815260408083206001600160a01b0386168452909152902054818110156110f15760405162461bcd60e51b815260206004820152602760248201527f4e6f7420656e6f75676820746f6b656e20617661696c61626c6520746f20747260448201526630b739b332b91760c91b60648201526084016104c2565b60006110fd838361215a565b60008681526008602090815260408083206001600160a01b03891684529091528120829055909150819003611272576000858152600960205260408120546111479060019061215a565b6000878152600960205260408120805492935090918390811061116c5761116c612189565b6000918252602090912001546001600160a01b0390811691508616811461120f576000878152600b602090815260408083206001600160a01b038a1684528252808320548a845260099092529091208054839190839081106111d0576111d0612189565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558a8252600b81526040808320938616835292905220555b6000878152600b602090815260408083206001600160a01b038a16845282528083208390558983526009909152902080548061124d5761124d61219f565b600082815260209020810160001990810180546001600160a01b031916905501905550505b5050505050565b816001600160a01b0316836001600160a01b0316036112da5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104c2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611352848484610d55565b61135e84848484611755565b6106bb5760405162461bcd60e51b81526004016104c2906121b5565b606061138582610c07565b600061139c60408051602081019091526000815290565b905060008151116113bc57604051806020016040528060008152506113e7565b806113c684611856565b6040516020016113d7929190612115565b6040516020818303038152906040525b9392505050565b600a815111156114405760405162461bcd60e51b815260206004820181905260248201527f41746d6f737420313020726f79616c746965732063616e20626520616464656460448201526064016104c2565b6000828152600a6020526040812061145791611acc565b6000805b82518110156116115760006001600160a01b031683828151811061148157611481612189565b6020026020010151600001516001600160a01b0316036114ef5760405162461bcd60e51b815260206004820152602360248201527f526f79616c747920726563697069656e742073686f756c642062652070726573604482015262195b9d60ea1b60648201526084016104c2565b82818151811061150157611501612189565b6020026020010151602001516001600160601b03166000036115655760405162461bcd60e51b815260206004820152601b60248201527f526f79616c74792076616c75652073686f756c64206265203e2030000000000060448201526064016104c2565b6000848152600a60205260409020835184908390811061158757611587612189565b6020908102919091018101518254600181018455600093845292829020815191909201516001600160601b0316600160a01b026001600160a01b039091161791015582518390829081106115dd576115dd612189565b6020026020010151602001516001600160601b0316826115fd9190612171565b91508061160981612207565b91505061145b565b5061271081106116635760405162461bcd60e51b815260206004820152601760248201527f53756d206f6620526f79616c74696573203e203130302500000000000000000060448201526064016104c2565b816040516116719190612220565b6040519081900381209084907fe23425cf56a81561c420f592eb54f21107c562f26c8c78c4a20d26920d244e6690600090a3505050565b6109af828260405180602001604052806000815250611957565b6000828152600260205260409020546001600160a01b031661173d5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104c2565b600082815260066020526040902061056382826122c1565b60006001600160a01b0384163b1561184b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611799903390899088908890600401612381565b6020604051808303816000875af19250505080156117d4575060408051601f3d908101601f191682019092526117d1918101906123be565b60015b611831573d808015611802576040519150601f19603f3d011682016040523d82523d6000602084013e611807565b606091505b5080516000036118295760405162461bcd60e51b81526004016104c2906121b5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b7c565b506001949350505050565b60608160000361187d5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156118a7578061189181612207565b91506118a09050600a836123f1565b9150611881565b60008167ffffffffffffffff8111156118c2576118c2611d1b565b6040519080825280601f01601f1916602001820160405280156118ec576020820181803683370190505b5090505b8415610b7c5761190160018361215a565b915061190e600a86612405565b611919906030612171565b60f81b81838151811061192e5761192e612189565b60200101906001600160f81b031916908160001a905350611950600a866123f1565b94506118f0565b611961838361198a565b61196e6000848484611755565b6105635760405162461bcd60e51b81526004016104c2906121b5565b6001600160a01b0382166119e05760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104c2565b6000818152600260205260409020546001600160a01b031615611a455760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104c2565b6001600160a01b0382166000908152600360205260408120805460019290611a6e908490612171565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5080546000825590600052602060002090810190610c6691905b80821115611afa5760008155600101611ae6565b5090565b6001600160e01b031981168114610c6657600080fd5b600060208284031215611b2657600080fd5b81356113e781611afe565b60005b83811015611b4c578181015183820152602001611b34565b838111156106bb5750506000910152565b60008151808452611b75816020860160208601611b31565b601f01601f19169290920160200192915050565b6020815260006113e76020830184611b5d565b600060208284031215611bae57600080fd5b5035919050565b6001600160a01b0381168114610c6657600080fd5b60008060408385031215611bdd57600080fd5b8235611be881611bb5565b946020939093013593505050565b600080600060608486031215611c0b57600080fd5b8335611c1681611bb5565b92506020840135611c2681611bb5565b929592945050506040919091013590565b60008060008060808587031215611c4d57600080fd5b8435611c5881611bb5565b9350602085013592506040850135611c6f81611bb5565b9396929550929360600135925050565b600060208284031215611c9157600080fd5b81356113e781611bb5565b60008060008060808587031215611cb257600080fd5b843593506020850135611cc481611bb5565b92506040850135611c6f81611bb5565b8015158114610c6657600080fd5b60008060408385031215611cf557600080fd5b8235611d0081611bb5565b91506020830135611d1081611cd4565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611d5457611d54611d1b565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611d8357611d83611d1b565b604052919050565b600067ffffffffffffffff831115611da557611da5611d1b565b611db8601f8401601f1916602001611d5a565b9050828152838383011115611dcc57600080fd5b828260208301376000602084830101529392505050565b60008060008060808587031215611df957600080fd5b8435611e0481611bb5565b93506020850135611e1481611bb5565b925060408501359150606085013567ffffffffffffffff811115611e3757600080fd5b8501601f81018713611e4857600080fd5b611e5787823560208401611d8b565b91505092959194509250565b602080825282518282018190526000919060409081850190868401855b82811015611eb757815180516001600160a01b031685528601516001600160601b0316868501529284019290850190600101611e80565b5091979650505050505050565b60008060408385031215611ed757600080fd5b823591506020830135611d1081611bb5565b60008060408385031215611efc57600080fd5b8235611f0781611bb5565b91506020830135611d1081611bb5565b600080600060608486031215611f2c57600080fd5b8335611f3781611bb5565b925060208481013567ffffffffffffffff80821115611f5557600080fd5b818701915087601f830112611f6957600080fd5b611f77888335858501611d8b565b9450604091508187013581811115611f8e57600080fd5b8701601f81018913611f9f57600080fd5b803582811115611fb157611fb1611d1b565b611fbf858260051b01611d5a565b818152858101935060069190911b82018501908a821115611fdf57600080fd5b918501915b8183101561203e5784838c031215611ffc5760008081fd5b612004611d31565b833561200f81611bb5565b8152838701356001600160601b038116811461202b5760008081fd5b8188015284529285019291840191611fe4565b8096505050505050509250925092565b6000806040838503121561206157600080fd5b50508035926020909101359150565b600181811c9082168061208457607f821691505b6020821081036120a457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60006020828403121561210a57600080fd5b81516113e781611cd4565b60008351612127818460208801611b31565b83519083019061213b818360208801611b31565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561216c5761216c612144565b500390565b6000821982111561218457612184612144565b500190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161221957612219612144565b5060010190565b815160009082906020808601845b8381101561226757815180516001600160a01b031686528301516001600160601b0316838601526040909401939082019060010161222e565b50929695505050505050565b601f82111561056357600081815260208120601f850160051c8101602086101561229a5750805b601f850160051c820191505b818110156122b9578281556001016122a6565b505050505050565b815167ffffffffffffffff8111156122db576122db611d1b565b6122ef816122e98454612070565b84612273565b602080601f831160018114612324576000841561230c5750858301515b600019600386901b1c1916600185901b1785556122b9565b600085815260208120601f198616915b8281101561235357888601518255948401946001909101908401612334565b50858210156123715787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906123b490830184611b5d565b9695505050505050565b6000602082840312156123d057600080fd5b81516113e781611afe565b634e487b7160e01b600052601260045260246000fd5b600082612400576124006123db565b500490565b600082612414576124146123db565b50069056fea264697066735822122018615737a54784d3ab34fc6fc40d38b8bed441e18652d7a538fe2fcc8b131bd964736f6c634300080f0033608060405234801561001057600080fd5b506040518060400160405280600b81526020016a053616d706c6545524332360ac1b81525060405180604001604052806002815260200161151560f21b815250816003908161005f9190610113565b50600461006c8282610113565b5050506101d2565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009e57607f821691505b6020821081036100be57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010e57600081815260208120601f850160051c810160208610156100eb5750805b601f850160051c820191505b8181101561010a578281556001016100f7565b5050505b505050565b81516001600160401b0381111561012c5761012c610074565b6101408161013a845461008a565b846100c4565b602080601f831160018114610175576000841561015d5750858301515b600019600386901b1c1916600185901b17855561010a565b600085815260208120601f198616915b828110156101a457888601518255948401946001909101908401610185565b50858210156101c25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610949806101e16000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610787565b60405180910390f35b6100ea6100e53660046107f8565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610822565b61026a565b604051601281526020016100ce565b6100ea61013c3660046107f8565b61028e565b61015461014f3660046107f8565b6102b0565b005b6100fe61016436600461085e565b6001600160a01b031660009081526020819052604090205490565b6100c16102be565b6100ea6101953660046107f8565b6102cd565b6100ea6101a83660046107f8565b61034d565b6100fe6101bb366004610880565b61035b565b6060600380546101cf906108b3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb906108b3565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610386565b5060019392505050565b6000336102788582856104aa565b610283858585610524565b506001949350505050565b6000336102608185856102a1838361035b565b6102ab91906108ed565b610386565b6102ba82826106c8565b5050565b6060600480546101cf906108b3565b600033816102db828661035b565b9050838110156103405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610386565b600033610260818585610524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610337565b6001600160a01b0382166104495760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610337565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b6848461035b565b9050600019811461051e57818110156105115760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610337565b61051e8484848403610386565b50505050565b6001600160a01b0383166105885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610337565b6001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610337565b6001600160a01b038316600090815260208190526040902054818110156106625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610337565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361051e565b6001600160a01b03821661071e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610337565b806002600082825461073091906108ed565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156107b457858101830151858201604001528201610798565b818111156107c6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107f357600080fd5b919050565b6000806040838503121561080b57600080fd5b610814836107dc565b946020939093013593505050565b60008060006060848603121561083757600080fd5b610840846107dc565b925061084e602085016107dc565b9150604084013590509250925092565b60006020828403121561087057600080fd5b610879826107dc565b9392505050565b6000806040838503121561089357600080fd5b61089c836107dc565b91506108aa602084016107dc565b90509250929050565b600181811c908216806108c757607f821691505b6020821081036108e757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561090e57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220baf2e5e7476317212738364aedae4aff02c22456621dafa3221397fd207b32e064736f6c634300080f00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220a7143f808c19f83ba5344a317c499813df362b5f3b370db9e179431753a2044564736f6c634300080f0033",
    "sourceMap": "240:2084:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:135;;;:::i;:::-;;2070:116:6;;;;;;:::i;:::-;;:::i;1417:96::-;;;;;;:::i;:::-;;:::i;1631:120::-;;;;;;:::i;:::-;;:::i;5142:455::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3391:32:24;;;3373:51;;3361:2;3346:18;5142:455:6;;;;;;;;1269:85;;;;;;:::i;:::-;;:::i;322:38:5:-;;-1:-1:-1;;;;;;;;;;;322:38:5;;2441:140:6;;;;;;:::i;:::-;;:::i;975:568:3:-;;;:::i;599:370::-;;;:::i;3370:107:6:-;;;;;;:::i;:::-;;:::i;1958:106::-;;;;;;:::i;:::-;;:::i;1549:772:3:-;;;:::i;3483:915:6:-;;;;;;:::i;:::-;;:::i;5603:406::-;;;;;;:::i;:::-;;:::i;1757:130::-;;;;;;:::i;:::-;;:::i;1180:83::-;;;;;;:::i;:::-;;:::i;1819:584:4:-;;;:::i;:::-;;;5512:14:24;;5505:22;5487:41;;5475:2;5460:18;1819:584:4;5347:187:24;3165:81:6;;;;;;:::i;:::-;;:::i;2305:130::-;;;;;;:::i;:::-;;:::i;2733:341::-;;;;;;:::i;:::-;;:::i;1519:106::-;;;;;;:::i;:::-;;:::i;171:28:5:-;;;;;;;;;;;;1572:26:4;;;;;;;;;456:135:3;506:27;;;;;:::i;:::-;5842:2:24;5824:21;;;5881:1;5861:18;;;5854:29;-1:-1:-1;;;5914:2:24;5899:18;;5892:37;5967:3;5960:4;5945:20;;5938:33;;;6008:1;5987:19;;;5980:30;-1:-1:-1;;;6041:3:24;6026:19;;6019:34;6085:3;6070:19;506:27:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;490:13:3;:43;;-1:-1:-1;;;;;;490:43:3;-1:-1:-1;;;;;490:43:3;;;;;;;;;;559:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;543:13:3;:33;;-1:-1:-1;;;;;;543:33:3;-1:-1:-1;;;;;543:33:3;;;;;;;;;;456:135::o;2070:116:6:-;2133:18;;-1:-1:-1;;;2133:18:6;;-1:-1:-1;;;;;;;;;;;251:64:5;2133:7:6;;:18;;2141:3;;2146:4;;2133:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2161:18:6;;-1:-1:-1;;;2161:18:6;;-1:-1:-1;;;;;3391:32:24;;2161:18:6;;;3373:51:24;-1:-1:-1;;;;;;;;;;;251:64:5;-1:-1:-1;2161:13:6;;-1:-1:-1;3346:18:24;;2161::6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2070:116;;:::o;1417:96::-;1461:22;;-1:-1:-1;;;1461:22:6;;-1:-1:-1;;;;;;;;;;;251:64:5;1461:7:6;;:22;;1469:3;;-1:-1:-1;;;1474:8:6;1461:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1493:13:6;;-1:-1:-1;;;1493:13:6;;-1:-1:-1;;;;;3391:32:24;;1493:13:6;;;3373:51:24;-1:-1:-1;;;;;;;;;;;251:64:5;-1:-1:-1;1493:8:6;;-1:-1:-1;3346:18:24;;1493:13:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1417:96;:::o;1631:120::-;1691:22;;-1:-1:-1;;;1691:22:6;;-1:-1:-1;;;;;;;;;;;251:64:5;1691:7:6;;:22;;1699:3;;-1:-1:-1;;;1704:8:6;1691:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1723:21:6;;-1:-1:-1;;;1723:21:6;;-1:-1:-1;;;;;6934:15:24;;;1723:21:6;;;6916:34:24;6986:15;;6966:18;;;6959:43;-1:-1:-1;;;;;;;;;;;251:64:5;-1:-1:-1;1723:8:6;;-1:-1:-1;6851:18:24;;1723:21:6;6704:304:24;5142:455:6;5302:16;;-1:-1:-1;;;5302:16:6;;5233:12;;;;-1:-1:-1;;;;;;;;;;;251:64:5;5302:10:6;;:16;;5313:4;;5302:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5302:16:6;;;;;;;;;;;;:::i;:::-;5320:4;5285:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5261:64;;5446:8;5440:15;5433:4;5423:8;5419:19;5416:1;5409:47;5401:55;-1:-1:-1;;;;;;5497:18:6;;5476:114;;;;-1:-1:-1;;;5476:114:6;;9212:2:24;5476:114:6;;;9194:21:24;9251:2;9231:18;;;9224:30;9290:34;9270:18;;;9263:62;-1:-1:-1;;;9341:18:24;;;9334:47;9398:19;;5476:114:6;;;;;;;;;5251:346;5142:455;;;;:::o;1269:85::-;-1:-1:-1;;;;;;;;;;;1316:7:6;1324:22;1342:4;1324:15;:22;:::i;:::-;1316:31;;;;;;;;;;;;;9836:25:24;;9824:2;9809:18;;9690:177;2441:140:6;2520:18;;-1:-1:-1;;;2520:18:6;;-1:-1:-1;;;;;;;;;;;251:64:5;2520:7:6;;:18;;2528:3;;2533:4;;2520:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2548:26:6;;-1:-1:-1;;;2548:26:6;;-1:-1:-1;;;;;6934:15:24;;;2548:26:6;;;6916:34:24;6986:15;;6966:18;;;6959:43;-1:-1:-1;;;;;;;;;;;251:64:5;-1:-1:-1;2548:13:6;;-1:-1:-1;6851:18:24;;2548:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:140;;;:::o;975:568:3:-;1037:32;1080:29;-1:-1:-1;;;;;;;;;;;;;;;;;;;1080:29:3;-1:-1:-1;1129:43:3;;;;;;;;1144:15;;-1:-1:-1;;;;;1144:15:3;1129:43;;1168:2;1129:43;;;;1201:23;;1144:15;1201:23;;;;;;;;;1129:43;;1201:23;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1201:23:3;;;;;;;;;;;;;;;1191:33;;1248:7;1234:8;1243:1;1234:11;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;;1265:32;;;;;;;;;;;;-1:-1:-1;;;1265:32:3;;;;;;;1335:13;;1357:5;;1335:43;;-1:-1:-1;;;1335:43:3;;1265:32;;:17;;-1:-1:-1;;;;;1335:13:3;;;;:21;;:43;;1357:5;;1265:32;;1369:8;;1335:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1317:61;;1388:20;1400:7;1388:11;:20::i;:::-;1418:47;1427:7;1436:1;1418:47;;;;;;;;;;;;;;;;;:8;:47::i;:::-;1484:13;;1508:5;;1484:30;;-1:-1:-1;;;1484:30:3;;-1:-1:-1;;;;;1508:5:3;;;1484:30;;;3373:51:24;1475:61:3;;1484:13;;;;;:23;;3346:18:24;;1484:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1516:1;1475:61;;;;;;;;;;;;;-1:-1:-1;;;1475:61:3;;;:8;:61::i;:::-;1021:522;;;;975:568::o;599:370::-;751:13;;:20;;;-1:-1:-1;;;751:20:3;;;;742:41;;-1:-1:-1;;;;;751:13:3;;:18;;:20;;;;;:13;;:20;;;;;;;:13;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;751:20:3;;;;;;;;;;;;:::i;:::-;742:41;;;;;;;;;;;;;-1:-1:-1;;;742:41:3;;;:8;:41::i;:::-;802:13;;:22;;;-1:-1:-1;;;802:22:3;;;;793:39;;-1:-1:-1;;;;;802:13:3;;:20;;:22;;;;;:13;;:22;;;;;;;:13;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;802:22:3;;;;;;;;;;;;:::i;:::-;793:39;;;;;;;;;;;;;-1:-1:-1;;;793:39:3;;;:8;:39::i;:::-;599:370::o;3370:107:6:-;3442:28;3447:5;3454:2;3458:4;3464:5;3442:4;:28::i;:::-;3370:107;;;:::o;1958:106::-;2007:22;;-1:-1:-1;;;2007:22:6;;-1:-1:-1;;;;;;;;;;;251:64:5;2007:7:6;;:22;;2015:3;;-1:-1:-1;;;2020:8:6;2007:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2039:18:6;;-1:-1:-1;;;2039:18:6;;-1:-1:-1;;;;;3391:32:24;;2039:18:6;;;3373:51:24;-1:-1:-1;;;;;;;;;;;251:64:5;-1:-1:-1;2039:13:6;;-1:-1:-1;3346:18:24;;2039::6;3227:203:24;1549:772:3;1610:32;1653:29;-1:-1:-1;;;;;;;;;;;;;;;;;;;1653:29:3;-1:-1:-1;1702:43:3;;;;;;;;1717:15;;-1:-1:-1;;;;;1717:15:3;1702:43;;1741:2;1702:43;;;;1774:23;;1717:15;1774:23;;;;;;;;;1702:43;;1774:23;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1774:23:3;;;;;;;;;;;;;;;1764:33;;1821:7;1807:8;1816:1;1807:11;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;;1838:32;;;;;;;;;;;;-1:-1:-1;;;1838:32:3;;;;;;;1898:13;;1920:5;;1898:43;;-1:-1:-1;;;1898:43:3;;1838:32;;:17;;-1:-1:-1;;;;;1898:13:3;;;;:21;;:43;;1920:5;;1838:32;;1932:8;;1898:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1972:13;;:31;;-1:-1:-1;;;1972:31:3;;;;;9836:25:24;;;1880:61:3;;-1:-1:-1;1951:18:3;;-1:-1:-1;;;;;1972:13:3;;;;:22;;9809:18:24;;1972:31:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1972:31:3;;;;;;;;;;;;:::i;:::-;1951:52;;2013:57;2022:4;2013:57;;;;;;;;;;;;;-1:-1:-1;;;2013:57:3;;;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;2112:13;;:35;;-1:-1:-1;;;2112:35:3;;;;;9836:25:24;;;2081:28:3;;-1:-1:-1;;;;;2112:13:3;;:26;;9809:18:24;;2112:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2112:35:3;;;;;;;;;;;;:::i;:::-;2081:66;;2157:28;2169:4;2174:1;2169:7;;;;;;;;:::i;:::-;;;;;;;:15;;;2157:11;:28::i;:::-;2195:62;2204:4;2209:1;2204:7;;;;;;;;:::i;:::-;;;;;;;:15;;;2221;;;;;;;;;-1:-1:-1;;;;;2221:15:3;2195:62;;;;;;;;;;;;;-1:-1:-1;;;2195:62:3;;;:8;:62::i;:::-;2267:47;2276:4;2281:1;2276:7;;;;;;;;:::i;:::-;;;;;;;:13;;;-1:-1:-1;;;;;2267:47:3;2291:2;2267:47;;;;;;;;;;;;;-1:-1:-1;;;2267:47:3;;;:8;:47::i;3483:915:6:-;3637:38;;;-1:-1:-1;;;;;3391:32:24;;;3637:38:6;;;;3373:51:24;;;;3637:38:6;;;;;;;;;;3346:18:24;;;;3637:38:6;;;;;;;-1:-1:-1;;;;;3637:38:6;-1:-1:-1;;;3637:38:6;;;3626:50;;3602:20;;3626:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3599:77;;;3686:15;3715:7;3704:30;;;;;;;;;;;;:::i;:::-;3686:48;-1:-1:-1;3771:123:6;3889:4;3771:90;3858:2;3771:64;-1:-1:-1;;;3771:35:6;:8;3800:5;3771:28;:35::i;:::-;:52;19603:9;;;:16;;-1:-1:-1;;19603:16:6;;;;;;;;;;;;:9;19504:143;3771:64;:86;19919:10;;;:47;;;;;;;-1:-1:-1;19919:47:6;;;;;;;-1:-1:-1;;;;;19943:21:6;;;;19919:47;;;:10;19815:179;3771:90;:117;;:123::i;:::-;3939:6;3936:456;;;4001:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4001:34:6;-1:-1:-1;;;4001:34:6;;;3990:46;;3963:23;;-1:-1:-1;;;;;3990:10:6;;;:46;;4001:34;3990:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3960:76;;;4050:14;4078:10;4067:33;;;;;;;;;;;;:::i;:::-;4050:50;;4124:7;4117:4;:14;4114:143;;;4162:14;4172:4;4162:7;:14;:::i;:::-;4151:26;;;;:::i;:::-;;;4114:143;;;4227:14;4234:7;4227:4;:14;:::i;:::-;4216:26;;;;:::i;:::-;;;4114:143;4270:111;4374:6;4270:72;-1:-1:-1;;;4270:39:6;:8;4303:5;4270:32;:39::i;:111::-;3946:446;;3558:840;;3483:915;;;;:::o;5603:406::-;5727:16;;-1:-1:-1;;;5727:16:6;;5675:12;;;;-1:-1:-1;;;;;;;;;;;251:64:5;5727:10:6;;:16;;5738:4;;5727:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5727:16:6;;;;;;;;;;;;:::i;:::-;5703:40;;5864:8;5858:15;5851:4;5841:8;5837:19;5834:1;5827:47;5819:55;-1:-1:-1;;;;;;5915:18:6;;5894:108;;;;-1:-1:-1;;;5894:108:6;;14228:2:24;5894:108:6;;;14210:21:24;14267:2;14247:18;;;14240:30;14306:34;14286:18;;;14279:62;-1:-1:-1;;;14357:18:24;;;14350:41;14408:19;;5894:108:6;14026:407:24;5894:108:6;5693:316;5603:406;;;:::o;1757:130::-;1831:18;;-1:-1:-1;;;1831:18:6;;-1:-1:-1;;;;;;;;;;;251:64:5;1831:7:6;;:18;;1839:3;;1844:4;;1831:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1859:21:6;;-1:-1:-1;;;1859:21:6;;-1:-1:-1;;;;;6934:15:24;;;1859:21:6;;;6916:34:24;6986:15;;6966:18;;;6959:43;-1:-1:-1;;;;;;;;;;;251:64:5;-1:-1:-1;1859:8:6;;-1:-1:-1;6851:18:24;;1859:21:6;6704:304:24;1180:83:6;-1:-1:-1;;;;;;;;;;;1225:7:6;1233:22;1251:4;1233:15;:22;:::i;1819:584:4:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:4;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:4;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:4;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:4;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:4;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:4;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:4:o;3165:81:6:-;3222:17;;-1:-1:-1;;;3222:17:6;;-1:-1:-1;;;;;;;;;;;251:64:5;3222:7:6;;:17;;3230:2;;3234:4;;3222:17;;;:::i;2305:130::-;2370:22;;-1:-1:-1;;;2370:22:6;;-1:-1:-1;;;;;;;;;;;251:64:5;2370:7:6;;:22;;2378:3;;-1:-1:-1;;;2383:8:6;2370:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2402:26:6;;-1:-1:-1;;;2402:26:6;;-1:-1:-1;;;;;6934:15:24;;;2402:26:6;;;6916:34:24;6986:15;;6966:18;;;6959:43;-1:-1:-1;;;;;;;;;;;251:64:5;-1:-1:-1;2402:13:6;;-1:-1:-1;6851:18:24;;2402:26:6;6704:304:24;2733:341:6;-1:-1:-1;;;;;;;;;;;2809:125:6;;;;15646:2:24;15628:21;;;15685:1;15665:18;;;15658:29;-1:-1:-1;;;15718:2:24;15703:18;;15696:37;15771:3;15764:4;15749:20;;15742:33;;;15812:2;15791:19;;;15784:31;15852:34;15846:3;15831:19;;15824:63;15924:34;15918:3;15903:19;;15896:63;15996:32;15990:3;15975:19;;15968:61;16061:3;16046:19;;15343:728;2809:125:6;;;;;;;;2944:123;3062:4;2944:90;3031:2;2944:64;-1:-1:-1;;;2944:35:6;:8;2973:5;2944:28;:35::i;1519:106::-;1577:18;;-1:-1:-1;;;1577:18:6;;-1:-1:-1;;;;;;;;;;;251:64:5;1577:7:6;;:18;;1585:3;;1590:4;;1577:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1605:13:6;;-1:-1:-1;;;1605:13:6;;-1:-1:-1;;;;;3391:32:24;;1605:13:6;;;3373:51:24;-1:-1:-1;;;;;;;;;;;251:64:5;-1:-1:-1;1605:8:6;;-1:-1:-1;3346:18:24;;1605:13:6;3227:203:24;5514:110:8;5560:57;5613:2;5576:40;;;;;;9836:25:24;;9824:2;9809:18;;9690:177;5576:40:8;;;;-1:-1:-1;;5576:40:8;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:40:8;-1:-1:-1;;;5576:40:8;;;5560:15;:57::i;:::-;5514:110;:::o;5469:178:4:-;5550:1;5545;:6;5541:100;;-1:-1:-1;;;;;;;;;;;5598:3:4;5572:30;;;;;;:::i;:::-;;;;;;;;5616:14;5625:1;5628;5616:8;:14::i;14688:344::-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;17010:2:24;16992:21;;;17049:2;17029:18;;;17022:30;17088:34;17083:2;17068:18;;17061:62;-1:-1:-1;;;17154:2:24;17139:18;;17132:34;17198:3;17183:19;;16808:400;14848:43:4;;;;;;;;-1:-1:-1;;;;;;;;;;;14941:1:4;14910:33;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;14993:1:4;14962:33;;;;;;:::i;:::-;;;;;;;;15009:6;:4;:6::i;:::-;14688:344;;:::o;15037:254::-;15192:1;15175:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15165:30;;;;;;15158:1;15141:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15131:30;;;;;;:64;15127:158;;-1:-1:-1;;;;;;;;;;;15242:3:4;15216:30;;;;;;:::i;:::-;;;;;;;;15260:14;15269:1;15272;15260:8;:14::i;5873:116:8:-;5938:43;;-1:-1:-1;;;;;3391:32:24;;5938:43:8;;;3373:51:24;5922:60:8;;3346:18:24;;5938:43:8;;;-1:-1:-1;;5938:43:8;;;;;;;;;;;;;;-1:-1:-1;;;;;5938:43:8;-1:-1:-1;;;5938:43:8;;;5922:15;:60::i;3897:185:4:-;3984:1;-1:-1:-1;;;;;3979:6:4;:1;-1:-1:-1;;;;;3979:6:4;;3975:101;;-1:-1:-1;;;;;;;;;;;4033:3:4;4006:31;;;;;;:::i;:::-;;;;;;;;4051:14;4060:1;4063;4051:8;:14::i;19342:156:6:-;19448:12;;;:22;;-1:-1:-1;;;;;;19448:22:6;-1:-1:-1;;;;;19448:22:6;;;;;;;;;;:12;19342:156::o;20626:120::-;20706:33;20720:4;20734:3;20706:13;:33::i;181:376:8:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;5202:262:4:-;5264:1;5259;:6;5255:203;;5286:41;;;;;18633:2:24;18615:21;;;18672:2;18652:18;;;18645:30;18711:34;18706:2;18691:18;;18684:62;-1:-1:-1;;;18777:2:24;18762:18;;18755:32;18819:3;18804:19;;18431:398;5286:41:4;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;2410:424::-;-1:-1:-1;;;;;;;;;;;2978:55:4;3059:16;2445:359;;2645:67;;2482:11;;-1:-1:-1;;;;;;;;;;;1671:64:4;2579:43;;2645:67;;1671:64;;-1:-1:-1;;;2670:17:4;2705:4;;2645:67;;;:::i;:::-;;;;-1:-1:-1;;2645:67:4;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:4;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:4;2813:7;:14;;-1:-1:-1;;2813:14:4;;;;;2410:424::o;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:4;:1;-1:-1:-1;;;;;3678:6:4;;3674:212;;3705:44;;;;;20092:2:24;20074:21;;;20131:2;20111:18;;;20104:30;20170:34;20165:2;20150:18;;20143:62;-1:-1:-1;;;20236:2:24;20221:18;;20214:35;20281:3;20266:19;;19890:401;3705:44:4;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;20980:1089:6:-;21096:12;;;;21132:9;;;;21173:11;;;;21217:10;;;21194:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21096:12:6;;;;21132:9;;;;;;21082:11;;21194:33;;21217:10;;21194:33;;21217:10;21194:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21238:17;21275:4;21281:12;21289:3;21281:7;:12::i;:::-;21258:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;21258:36:6;;;;;;;;;-1:-1:-1;;;;;21309:15:6;;;;;;:10;;;21258:36;21309:15;;;;;;-1:-1:-1;;;;;;21309:21:6;;;;;;;;;21258:36;;-1:-1:-1;21309:21:6;;:15;;21341:34;;21358:3;;21363:11;;21341:34;;:::i;:::-;;;;-1:-1:-1;;21341:34:6;;;;;;;;;21331:45;;21341:34;21331:45;;;;21309:68;;;;;;;;;;-1:-1:-1;21309:68:6;;;;21304:110;;21393:10;21398:4;21393;:10::i;:::-;;21304:110;-1:-1:-1;;;;;21446:15:6;;21423:12;21446:15;;;;;;;;;;;-1:-1:-1;;;;;;21446:21:6;;;;;;;;;21478:34;;21446:21;;21423:12;;21478:34;;21495:3;;21500:11;;21478:34;;:::i;:::-;;;;;;;;;;;;;21468:45;;;;;;21446:68;;;;;;;;;;;;21438:77;;21423:92;;21526:12;21565:17;21586:3;-1:-1:-1;;;;;21586:14:6;21601:4;21586:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21562:44:6;-1:-1:-1;21627:36:6;;-1:-1:-1;21562:44:6;21648:14;21651:11;21648:2;:14;:::i;:::-;21627;:36::i;:::-;21698:28;;-1:-1:-1;;;21698:28:6;;21620:43;;-1:-1:-1;21683:12:6;;-1:-1:-1;;;;;;;;;;;;21698:17:6;;;:28;;21716:3;;21721:4;;21698:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21683:43;;21749:4;21741;:12;21737:172;;21769:129;;-1:-1:-1;;;21769:129:6;;;;;;;:::i;:::-;21918:34;;-1:-1:-1;;;21918:34:6;;-1:-1:-1;;;;;;;;;;;21918:18:6;;;:34;;21937:3;;21942:4;;21948:3;;21918:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21969:12:6;;;21962:19;;-1:-1:-1;;;;;;21962:19:6;;;-1:-1:-1;21998:9:6;;;21991:16;;-1:-1:-1;;21991:16:6;;;22017:17;-1:-1:-1;22024:10:6;;21969:12;22017:17;:::i;:::-;22051:4;:11;;22044:18;;;21072:997;;;;;;;;20980:1089;;:::o;23413:397::-;23472:12;23500:19;23532:1;:8;23543:2;23532:13;;;;:::i;:::-;23522:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23522:24:6;;23500:46;;23561:9;23556:224;23580:1;:8;23576:1;:12;23556:224;;;23609:9;23621:1;23623;23621:4;;;;;;;;:::i;:::-;;;;;;;23609:16;;23754:1;23748;23744:2;23740:10;23736:2;23732:19;23724:6;23720:32;23713:43;23695:75;23590:3;;;;;:::i;:::-;;;;23556:224;;16122:3214;16246:12;;;;16282:9;;;;16323:11;;;;16367:10;;;16344:33;;;;;;;;;;;;;;;;;;;16209:7;;-1:-1:-1;;;;;16246:12:6;;16282:9;;;16323:11;16209:7;;16344:33;;16367:10;;16344:33;;;16367:10;16344:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16428:15:6;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16428:21:6;;;;;;;;;16460:34;;16344:33;;-1:-1:-1;16428:21:6;:15;;-1:-1:-1;16460:34:6;;-1:-1:-1;16344:33:6;;16482:11;;16460:34;;:::i;:::-;;;;-1:-1:-1;;16460:34:6;;;;;;;;;16450:45;;16460:34;16450:45;;;;16428:68;;;;;;;;;;-1:-1:-1;16428:68:6;;;;16424:174;;;-1:-1:-1;;;;;16519:15:6;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16519:21:6;;;;;;;;;16551:34;;16519:21;;:10;16551:34;;16568:3;;16573:11;;16551:34;;:::i;:::-;;;;;;;;;;;;;16541:45;;;;;;16519:68;;;;;;;;;;;;16512:75;;;;;;16122:3214;;;:::o;16424:174::-;16607:17;16644:4;16650:12;16658:3;16650:7;:12::i;:::-;16627:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16607:56;;-1:-1:-1;;;;;;;;;;;15396:37:6;;-1:-1:-1;;;;;16673:19:6;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16704:12;16743:17;16764:3;-1:-1:-1;;;;;16764:14:6;16779:4;16764:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16740:44:6;-1:-1:-1;16805:36:6;;-1:-1:-1;16740:44:6;16826:14;16829:11;16826:2;:14;:::i;16805:36::-;16891:35;;-1:-1:-1;;;16891:35:6;;-1:-1:-1;;;;;3391:32:24;;16891:35:6;;;3373:51:24;16798:43:6;;-1:-1:-1;16863:22:6;;-1:-1:-1;;;;;;;;;;;;16891:21:6;;;3346:18:24;;16891:35:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16891:35:6;;;;;;;;;;;;:::i;:::-;16862:64;;;16940:5;:12;16956:1;16940:17;16936:2058;;16973:12;-1:-1:-1;;;;;;;;;;;15396:37:6;;-1:-1:-1;;;;;16988:17:6;;17006:3;17011:5;17017:1;17011:8;;;;;;;;:::i;:::-;;;;;;;16988:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16973:47;-1:-1:-1;16973:47:6;17034:106;;17081:44;17102:3;17115:5;17121:1;17115:8;;;;;;;;:::i;:::-;;;;;;;17107:17;;17081:44;;;;;;;:::i;:::-;;;;;;;;17034:106;17165:4;17157;:12;17153:180;;17189:129;;-1:-1:-1;;;17189:129:6;;;;;;;:::i;:::-;17351:86;17361:3;17366:4;17399:3;17404:11;17382:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17372:45;;;;;;17427:5;17433:1;17427:8;;;;;;;;:::i;:::-;;;;;;;17419:17;;17351:86;;;;;;;;;:::i;:::-;;;;;;;;17530:5;17536:1;17530:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17451:15:6;;17522:17;17451:15;;;;;;;;;;-1:-1:-1;;;;;;17451:21:6;;;;;;;;;17483:34;;17530:8;;17451:21;;17483:34;;17500:3;;17505:11;;17483:34;;:::i;:::-;;;;-1:-1:-1;;17483:34:6;;;;;;;;;17473:45;;17483:34;17473:45;;;;17451:68;;;;;;;;;;;;-1:-1:-1;17451:68:6;;;:88;;;;-1:-1:-1;;;;;17553:15:6;;;;17624:4;17553:10;;;:15;;;;;-1:-1:-1;;;;;;17553:21:6;;;;;;;;;17585:34;;17624:4;;-1:-1:-1;17585:34:6;;17602:3;;17607:11;;17585:34;;:::i;:::-;;;;;;;-1:-1:-1;;17585:34:6;;;;;;17575:45;;17585:34;17575:45;;;;17553:68;;;;;;;;;;-1:-1:-1;17553:68:6;:75;;-1:-1:-1;;17553:75:6;;;;;;;;;;-1:-1:-1;16936:2058:6;;;17664:1;17649:5;:12;:16;17645:1349;;;17686:9;17681:1190;17705:5;:12;17701:1;:16;17681:1190;;;17742:12;-1:-1:-1;;;;;;;;;;;15396:37:6;;-1:-1:-1;;;;;17757:17:6;;17775:3;17780:5;17786:1;17780:8;;;;;;;;:::i;:::-;;;;;;;17757:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17742:47;-1:-1:-1;17742:47:6;17807:114;;17858:44;17879:3;17892:5;17898:1;17892:8;;;;;;;;:::i;:::-;;;;;;;17884:17;;17858:44;;;;;;;:::i;:::-;;;;;;;;17807:114;-1:-1:-1;;;;;;;;;;;15396:37:6;;-1:-1:-1;;;;;17963:18:6;;17982:3;17987:5;17993:1;17987:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17963:53:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18034:12;18064:17;18139:3;-1:-1:-1;;;;;18139:14:6;18154:4;18139:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18121:38:6;;-1:-1:-1;18121:38:6;-1:-1:-1;18188:36:6;18121:38;18209:14;18212:11;18209:2;:14;:::i;18188:36::-;18181:43;;18265:7;:37;;;;;-1:-1:-1;;;18276:4:6;:26;18265:37;18261:539;;;18400:86;18410:3;18415:4;18448:3;18453:11;18431:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18421:45;;;;;;18476:5;18482:1;18476:8;;;;;;;;:::i;:::-;;;;;;;18468:17;;18400:86;;;;;;;;;:::i;:::-;;;;;;;;18587:5;18593:1;18587:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18508:15:6;;18579:17;18508:15;;;;;;;;;;-1:-1:-1;;;;;;18508:21:6;;;;;;;;;18540:34;;18587:8;;18508:21;;18540:34;;18557:3;;18562:11;;18540:34;;:::i;:::-;;;;;;;;;;;;;18530:45;;;;;;18508:68;;;;;;;;;;;:88;;;;18689:4;18618;:10;;:15;18629:3;-1:-1:-1;;;;;18618:15:6;-1:-1:-1;;;;;18618:15:6;;;;;;;;;;;;:21;18634:4;-1:-1:-1;;;;;18618:21:6;;-1:-1:-1;;;;;18618:21:6;;;;;;;;;;;;;:68;18667:3;18672:11;18650:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18640:45;;;;;;18618:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15396:37:6;;-1:-1:-1;;;;;18715:18:6;;18734:3;18739:5;18745:1;18739:8;;;;;;;;:::i;:::-;;;;;;;18749:4;18715:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18776:5;;;;;18261:539;-1:-1:-1;;;;;;;;;;;15396:37:6;;-1:-1:-1;;;;;18817:18:6;;18836:3;18841:5;18847:1;18841:8;;;;;;;;:::i;:::-;;;;;;;18851:4;18817:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17724:1147;;;17719:3;;;;;:::i;:::-;;;;17681:1190;;;;17645:1349;;;18901:82;;;-1:-1:-1;;;18901:82:6;;24669:2:24;18901:82:6;;;24651:21:24;24688:18;;;24681:30;;;;24747:34;24727:18;;;24720:62;24818:34;24798:18;;;24791:62;24870:19;;18901:82:6;24467:428:24;18901:82:6;-1:-1:-1;;;;;19012:15:6;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;19012:21:6;;;;;;;;;19044:34;;19012:21;;:15;19044:34;;19061:3;;19066:11;;19044:34;;:::i;:::-;;;;-1:-1:-1;;19044:34:6;;;;;;;;;19034:45;;19044:34;19034:45;;;;19012:68;;;;;;;;;;-1:-1:-1;19012:68:6;;;;19004:128;;;;-1:-1:-1;;;19004:128:6;;25102:2:24;19004:128:6;;;25084:21:24;25141:2;25121:18;;;25114:30;25180:34;25160:18;;;25153:62;-1:-1:-1;;;25231:18:24;;;25224:45;25286:19;;19004:128:6;24900:411:24;19004:128:6;19150:12;;;19143:19;;-1:-1:-1;;;;;;19143:19:6;;;19179:9;;;19172:16;;-1:-1:-1;;19172:16:6;;;19198:17;-1:-1:-1;19205:10:6;;19150:12;19198:17;:::i;:::-;19225:18;19232:11;;;19225:18;;;-1:-1:-1;;;;;19261:15:6;;;;;;;;;;;;-1:-1:-1;;;;;;19261:21:6;;;;;;;;;19293:34;;19261:21;;19225:18;19293:34;;19310:3;;19315:11;;19293:34;;:::i;:::-;;;;;;;;;;;;;19283:45;;;;;;19261:68;;;;;;;;;;;;19254:75;;;;;;;;;16122:3214;;;:::o;23110:297::-;23184:7;23203:11;23225;23250:2;23239:1;:8;:13;:29;;23260:1;:8;23239:29;;;23255:2;23239:29;23225:43;;23283:6;23278:103;23299:3;23295:1;:7;23278:103;;;23364:5;:1;23368;23364:5;:::i;:::-;23338:1;23340:10;23349:1;23340:6;:10;:::i;:::-;23338:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;23338:13:6;23330:40;;23323:47;;;;;23304:3;;;;:::i;:::-;;;;23278:103;;;-1:-1:-1;23397:3:6;;23110:297;-1:-1:-1;;;;23110:297:6:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:24:-;-1:-1:-1;;;;;89:31:24;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:24:o;470:247::-;529:6;582:2;570:9;561:7;557:23;553:32;550:52;;;598:1;595;588:12;550:52;637:9;624:23;656:31;681:5;656:31;:::i;:::-;706:5;470:247;-1:-1:-1;;;470:247:24:o;722:388::-;790:6;798;851:2;839:9;830:7;826:23;822:32;819:52;;;867:1;864;857:12;819:52;906:9;893:23;925:31;950:5;925:31;:::i;:::-;975:5;-1:-1:-1;1032:2:24;1017:18;;1004:32;1045:33;1004:32;1045:33;:::i;:::-;1097:7;1087:17;;;722:388;;;;;:::o;1115:127::-;1176:10;1171:3;1167:20;1164:1;1157:31;1207:4;1204:1;1197:15;1231:4;1228:1;1221:15;1247:257;1319:4;1313:11;;;1351:17;;1398:18;1383:34;;1419:22;;;1380:62;1377:88;;;1445:18;;:::i;:::-;1481:4;1474:24;1247:257;:::o;1509:275::-;1580:2;1574:9;1645:2;1626:13;;-1:-1:-1;;1622:27:24;1610:40;;1680:18;1665:34;;1701:22;;;1662:62;1659:88;;;1727:18;;:::i;:::-;1763:2;1756:22;1509:275;;-1:-1:-1;1509:275:24:o;1789:187::-;1838:4;1871:18;1863:6;1860:30;1857:56;;;1893:18;;:::i;:::-;-1:-1:-1;1959:2:24;1938:15;-1:-1:-1;;1934:29:24;1965:4;1930:40;;1789:187::o;1981:338::-;2046:5;2075:53;2091:36;2120:6;2091:36;:::i;:::-;2075:53;:::i;:::-;2066:62;;2151:6;2144:5;2137:21;2191:3;2182:6;2177:3;2173:16;2170:25;2167:45;;;2208:1;2205;2198:12;2167:45;2257:6;2252:3;2245:4;2238:5;2234:16;2221:43;2311:1;2304:4;2295:6;2288:5;2284:18;2280:29;2273:40;1981:338;;;;;:::o;2324:222::-;2367:5;2420:3;2413:4;2405:6;2401:17;2397:27;2387:55;;2438:1;2435;2428:12;2387:55;2460:80;2536:3;2527:6;2514:20;2507:4;2499:6;2495:17;2460:80;:::i;2551:671::-;2638:6;2646;2699:2;2687:9;2678:7;2674:23;2670:32;2667:52;;;2715:1;2712;2705:12;2667:52;2755:9;2742:23;2784:18;2825:2;2817:6;2814:14;2811:34;;;2841:1;2838;2831:12;2811:34;2864:50;2906:7;2897:6;2886:9;2882:22;2864:50;:::i;:::-;2854:60;;2967:2;2956:9;2952:18;2939:32;2923:48;;2996:2;2986:8;2983:16;2980:36;;;3012:1;3009;3002:12;2980:36;-1:-1:-1;3035:24:24;;3090:4;3082:13;;3078:27;-1:-1:-1;3068:55:24;;3119:1;3116;3109:12;3068:55;3142:74;3208:7;3203:2;3190:16;3185:2;3181;3177:11;3142:74;:::i;:::-;3132:84;;;2551:671;;;;;:::o;3435:180::-;3494:6;3547:2;3535:9;3526:7;3522:23;3518:32;3515:52;;;3563:1;3560;3553:12;3515:52;-1:-1:-1;3586:23:24;;3435:180;-1:-1:-1;3435:180:24:o;3839:456::-;3916:6;3924;3932;3985:2;3973:9;3964:7;3960:23;3956:32;3953:52;;;4001:1;3998;3991:12;3953:52;4040:9;4027:23;4059:31;4084:5;4059:31;:::i;:::-;4109:5;-1:-1:-1;4166:2:24;4151:18;;4138:32;4179:33;4138:32;4179:33;:::i;:::-;3839:456;;4231:7;;-1:-1:-1;;;4285:2:24;4270:18;;;;4257:32;;3839:456::o;4300:118::-;4386:5;4379:13;4372:21;4365:5;4362:32;4352:60;;4408:1;4405;4398:12;4423:592;4506:6;4514;4522;4530;4583:3;4571:9;4562:7;4558:23;4554:33;4551:53;;;4600:1;4597;4590:12;4551:53;4639:9;4626:23;4658:31;4683:5;4658:31;:::i;:::-;4708:5;-1:-1:-1;4765:2:24;4750:18;;4737:32;4778:33;4737:32;4778:33;:::i;:::-;4830:7;-1:-1:-1;4884:2:24;4869:18;;4856:32;;-1:-1:-1;4940:2:24;4925:18;;4912:32;4953:30;4912:32;4953:30;:::i;:::-;4423:592;;;;-1:-1:-1;4423:592:24;;-1:-1:-1;;4423:592:24:o;5020:322::-;5089:6;5142:2;5130:9;5121:7;5117:23;5113:32;5110:52;;;5158:1;5155;5148:12;5110:52;5198:9;5185:23;5231:18;5223:6;5220:30;5217:50;;;5263:1;5260;5253:12;5217:50;5286;5328:7;5319:6;5308:9;5304:22;5286:50;:::i;:::-;5276:60;5020:322;-1:-1:-1;;;;5020:322:24:o;6100:274::-;-1:-1:-1;;;;;6292:32:24;;;;6274:51;;6356:2;6341:18;;6334:34;6262:2;6247:18;;6100:274::o;7013:258::-;7085:1;7095:113;7109:6;7106:1;7103:13;7095:113;;;7185:11;;;7179:18;7166:11;;;7159:39;7131:2;7124:10;7095:113;;;7226:6;7223:1;7220:13;7217:48;;;-1:-1:-1;;7261:1:24;7243:16;;7236:27;7013:258::o;7276:::-;7318:3;7356:5;7350:12;7383:6;7378:3;7371:19;7399:63;7455:6;7448:4;7443:3;7439:14;7432:4;7425:5;7421:16;7399:63;:::i;:::-;7516:2;7495:15;-1:-1:-1;;7491:29:24;7482:39;;;;7523:4;7478:50;;7276:258;-1:-1:-1;;7276:258:24:o;7539:220::-;7688:2;7677:9;7670:21;7651:4;7708:45;7749:2;7738:9;7734:18;7726:6;7708:45;:::i;7764:308::-;7839:5;7868:53;7884:36;7913:6;7884:36;:::i;7868:53::-;7859:62;;7944:6;7937:5;7930:21;7984:3;7975:6;7970:3;7966:16;7963:25;7960:45;;;8001:1;7998;7991:12;7960:45;8014:52;8059:6;8052:4;8045:5;8041:16;8036:3;8014:52;:::i;8077:457::-;8156:6;8209:2;8197:9;8188:7;8184:23;8180:32;8177:52;;;8225:1;8222;8215:12;8177:52;8258:9;8252:16;8291:18;8283:6;8280:30;8277:50;;;8323:1;8320;8313:12;8277:50;8346:22;;8399:4;8391:13;;8387:27;-1:-1:-1;8377:55:24;;8428:1;8425;8418:12;8377:55;8451:77;8520:7;8515:2;8509:9;8504:2;8500;8496:11;8451:77;:::i;8539:466::-;8714:3;8752:6;8746:13;8768:53;8814:6;8809:3;8802:4;8794:6;8790:17;8768:53;:::i;:::-;8884:13;;8843:16;;;;8906:57;8884:13;8843:16;8940:4;8928:17;;8906:57;:::i;:::-;8979:20;;8539:466;-1:-1:-1;;;;8539:466:24:o;9428:127::-;9489:10;9484:3;9480:20;9477:1;9470:31;9520:4;9517:1;9510:15;9544:4;9541:1;9534:15;9560:125;9600:4;9628:1;9625;9622:8;9619:34;;;9633:18;;:::i;:::-;-1:-1:-1;9670:9:24;;9560:125::o;9872:127::-;9933:10;9928:3;9924:20;9921:1;9914:31;9964:4;9961:1;9954:15;9988:4;9985:1;9978:15;10004:1081;10274:4;10320:1;10316;10311:3;10307:11;10303:19;10361:2;10353:6;10349:15;10338:9;10331:34;10384:2;10422;10417;10406:9;10402:18;10395:30;10448:45;10489:2;10478:9;10474:18;10466:6;10448:45;:::i;:::-;10550:22;;;10512:2;10530:18;;;10523:50;;;;10622:13;;10644:22;;;10720:15;;;;10682;;;10753:1;10763:296;10777:6;10774:1;10771:13;10763:296;;;10836:13;;10878:9;;10874:18;;10862:31;;10937:11;;10931:18;-1:-1:-1;;;;;10927:51:24;10913:12;;;10906:73;11034:15;;;;10999:12;;;;10799:1;10792:9;10763:296;;;-1:-1:-1;11076:3:24;;10004:1081;-1:-1:-1;;;;;;;;;;10004:1081:24:o;11090:184::-;11160:6;11213:2;11201:9;11192:7;11188:23;11184:32;11181:52;;;11229:1;11226;11219:12;11181:52;-1:-1:-1;11252:16:24;;11090:184;-1:-1:-1;11090:184:24:o;11958:188::-;12023:4;12056:18;12048:6;12045:30;12042:56;;;12078:18;;:::i;:::-;-1:-1:-1;12123:1:24;12119:14;12135:4;12115:25;;11958:188::o;12151:1458::-;12268:6;12299:2;12342;12330:9;12321:7;12317:23;12313:32;12310:52;;;12358:1;12355;12348:12;12310:52;12391:9;12385:16;12424:18;12416:6;12413:30;12410:50;;;12456:1;12453;12446:12;12410:50;12479:22;;12532:4;12524:13;;12520:27;-1:-1:-1;12510:55:24;;12561:1;12558;12551:12;12510:55;12590:2;12584:9;12613:65;12629:48;12674:2;12629:48;:::i;12613:65::-;12712:15;;;12794:1;12790:10;;;;12782:19;;12778:28;;;12743:12;;;;12818:19;;;12815:39;;;12850:1;12847;12840:12;12815:39;12874:11;;;;12894:685;12910:6;12905:3;12902:15;12894:685;;;12992:4;12986:3;12977:7;12973:17;12969:28;12966:118;;;13038:1;13067:2;13063;13056:14;12966:118;13110:22;;:::i;:::-;13166:3;13160:10;13183:33;13208:7;13183:33;:::i;:::-;13229:22;;13285:12;;;13279:19;-1:-1:-1;;;;;13333:40:24;;13321:53;;13311:151;;13416:1;13445:2;13441;13434:14;13311:151;13482:14;;;13475:31;13519:18;;12936:4;12927:14;;;;;13557:12;;;;12894:685;;;13598:5;12151:1458;-1:-1:-1;;;;;;;12151:1458:24:o;13614:274::-;13743:3;13781:6;13775:13;13797:53;13843:6;13838:3;13831:4;13823:6;13819:17;13797:53;:::i;:::-;13866:16;;;;;13614:274;-1:-1:-1;;13614:274:24:o;13893:128::-;13933:3;13964:1;13960:6;13957:1;13954:13;13951:39;;;13970:18;;:::i;:::-;-1:-1:-1;14006:9:24;;13893:128::o;14717:371::-;-1:-1:-1;;;;;;14902:33:24;;14890:46;;14959:13;;14872:3;;14981:61;14959:13;15031:1;15022:11;;15015:4;15003:17;;14981:61;:::i;:::-;15062:16;;;;15080:1;15058:24;;14717:371;-1:-1:-1;;;14717:371:24:o;15093:245::-;15160:6;15213:2;15201:9;15192:7;15188:23;15184:32;15181:52;;;15229:1;15226;15219:12;15181:52;15261:9;15255:16;15280:28;15302:5;15280:28;:::i;16076:446::-;16326:2;16315:9;16308:21;16365:1;16360:2;16349:9;16345:18;16338:29;-1:-1:-1;;;16398:2:24;16387:9;16383:18;16376:35;16449:3;16442:4;16431:9;16427:20;16420:33;16289:4;16470:46;16511:3;16500:9;16496:19;16488:6;16470:46;:::i;17377:440::-;17627:2;17616:9;17609:21;17590:4;17653:49;17698:2;17687:9;17683:18;17290:2;17278:15;;-1:-1:-1;;;17318:4:24;17309:14;;17302:36;17363:2;17354:12;;17213:159;17653:49;17750:9;17742:6;17738:22;17733:2;17722:9;17718:18;17711:50;17778:33;17804:6;17796;17778:33;:::i;17986:440::-;18236:2;18225:9;18218:21;18199:4;18262:49;18307:2;18296:9;18292:18;17899:2;17887:15;;-1:-1:-1;;;17927:4:24;17918:14;;17911:36;17972:2;17963:12;;17822:159;18834:348;19064:2;19053:9;19046:21;19027:4;19084:49;19129:2;19118:9;19114:18;17290:2;17278:15;;-1:-1:-1;;;17318:4:24;17309:14;;17302:36;17363:2;17354:12;;17213:159;19084:49;19076:57;;19169:6;19164:2;19153:9;19149:18;19142:34;18834:348;;;;:::o;19187:::-;19417:2;19406:9;19399:21;19380:4;19437:49;19482:2;19471:9;19467:18;17899:2;17887:15;;-1:-1:-1;;;17927:4:24;17918:14;;17911:36;17972:2;17963:12;;17822:159;19540:345;-1:-1:-1;;;;;19760:32:24;;;;19742:51;;19824:2;19809:18;;19802:34;;;;19867:2;19852:18;;19845:34;19730:2;19715:18;;19540:345::o;20296:374::-;20526:2;20515:9;20508:21;20489:4;20546:49;20591:2;20580:9;20576:18;17290:2;17278:15;;-1:-1:-1;;;17318:4:24;17309:14;;17302:36;17363:2;17354:12;;17213:159;20546:49;-1:-1:-1;;;;;20631:32:24;;;;20626:2;20611:18;;;;20604:60;;;;-1:-1:-1;20538:57:24;20296:374::o;20675:::-;20905:2;20894:9;20887:21;20868:4;20925:49;20970:2;20959:9;20955:18;17899:2;17887:15;;-1:-1:-1;;;17927:4:24;17918:14;;17911:36;17972:2;17963:12;;17822:159;21054:610;21300:13;;21243:3;;21274;;21353:4;21380:15;;;21243:3;21423:175;21437:6;21434:1;21431:13;21423:175;;;21500:13;;21486:28;;21536:14;;;;21573:15;;;;21459:1;21452:9;21423:175;;;-1:-1:-1;;21607:21:24;;;-1:-1:-1;21644:14:24;;;;;-1:-1:-1;;;21054:610:24:o;21669:168::-;21709:7;21775:1;21771;21767:6;21763:14;21760:1;21757:21;21752:1;21745:9;21738:17;21734:45;21731:71;;;21782:18;;:::i;:::-;-1:-1:-1;21822:9:24;;21669:168::o;22031:556::-;22233:2;22215:21;;;22272:3;22252:18;;;22245:31;22312:34;22307:2;22292:18;;22285:62;22383:34;22378:2;22363:18;;22356:62;22455:34;22449:3;22434:19;;22427:63;-1:-1:-1;;;22521:3:24;22506:19;;22499:46;22577:3;22562:19;;22031:556::o;22592:135::-;22631:3;22652:17;;;22649:43;;22672:18;;:::i;:::-;-1:-1:-1;22719:1:24;22708:13;;22592:135::o;22732:664::-;22797:5;22850:3;22843:4;22835:6;22831:17;22827:27;22817:55;;22868:1;22865;22858:12;22817:55;22897:6;22891:13;22923:4;22947:65;22963:48;23008:2;22963:48;:::i;22947:65::-;23046:15;;;23132:1;23128:10;;;;23116:23;;23112:32;;;23077:12;;;;23156:15;;;23153:35;;;23184:1;23181;23174:12;23153:35;23220:2;23212:6;23208:15;23232:135;23248:6;23243:3;23240:15;23232:135;;;23314:10;;23302:23;;23345:12;;;;23265;;23232:135;;;-1:-1:-1;23385:5:24;22732:664;-1:-1:-1;;;;;;22732:664:24:o;23401:614::-;23530:6;23538;23591:2;23579:9;23570:7;23566:23;23562:32;23559:52;;;23607:1;23604;23597:12;23559:52;23640:9;23634:16;23669:18;23710:2;23702:6;23699:14;23696:34;;;23726:1;23723;23716:12;23696:34;23749:72;23813:7;23804:6;23793:9;23789:22;23749:72;:::i;:::-;23739:82;;23867:2;23856:9;23852:18;23846:25;23830:41;;23896:2;23886:8;23883:16;23880:36;;;23912:1;23909;23902:12;23880:36;;23935:74;24001:7;23990:8;23979:9;23975:24;23935:74;:::i;24020:442::-;-1:-1:-1;;;;;24267:32:24;;;;24249:51;;-1:-1:-1;;;;;;24336:33:24;;;;24331:2;24316:18;;24309:61;24401:2;24386:18;;24379:34;24444:2;24429:18;;24422:34;24236:3;24221:19;;24020:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "testFetchTheTokenURIAndRoyalties()": "89242f29",
    "testMintAnErc721TokenToAlice()": "469e290b",
    "testNameAndSymbol()": "6ac11701",
    "tip(address,address,uint256)": "d82555f1",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "foundry-test/piNFT.t.sol",
    "id": 816,
    "exportedSymbols": {
      "Address": [
        24279
      ],
      "Context": [
        24301
      ],
      "ContractTest": [
        815
      ],
      "Counters": [
        24375
      ],
      "DSTest": [
        2602
      ],
      "ERC165": [
        24625
      ],
      "ERC20": [
        22699
      ],
      "ERC721": [
        23663
      ],
      "ERC721URIStorage": [
        23922
      ],
      "IERC165": [
        24637
      ],
      "IERC20": [
        22777
      ],
      "IERC20Metadata": [
        22802
      ],
      "IERC721": [
        23779
      ],
      "IERC721Metadata": [
        23949
      ],
      "IERC721Receiver": [
        23797
      ],
      "LibShare": [
        538
      ],
      "SampleERC20": [
        559
      ],
      "Script": [
        2838
      ],
      "StdStorage": [
        4255
      ],
      "Strings": [
        24601
      ],
      "Test": [
        4157
      ],
      "Vm": [
        5984
      ],
      "console": [
        14048
      ],
      "console2": [
        22112
      ],
      "piNFT": [
        530
      ],
      "stdError": [
        4227
      ],
      "stdMath": [
        5504
      ],
      "stdStorage": [
        5357
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2285:3",
    "nodes": [
      {
        "id": 561,
        "nodeType": "PragmaDirective",
        "src": "39:23:3",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 562,
        "nodeType": "ImportDirective",
        "src": "64:28:3",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 816,
        "sourceUnit": 5505,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 563,
        "nodeType": "ImportDirective",
        "src": "93:31:3",
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 816,
        "sourceUnit": 14049,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 564,
        "nodeType": "ImportDirective",
        "src": "127:29:3",
        "absolutePath": "contracts/piNFT.sol",
        "file": "contracts/piNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 816,
        "sourceUnit": 531,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 565,
        "nodeType": "ImportDirective",
        "src": "157:41:3",
        "absolutePath": "contracts/utils/sampleERC20.sol",
        "file": "contracts/utils/sampleERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 816,
        "sourceUnit": 560,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 566,
        "nodeType": "ImportDirective",
        "src": "199:38:3",
        "absolutePath": "contracts/utils/LibShare.sol",
        "file": "contracts/utils/LibShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 816,
        "sourceUnit": 539,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 815,
        "nodeType": "ContractDefinition",
        "src": "240:2084:3",
        "nodes": [
          {
            "id": 571,
            "nodeType": "VariableDeclaration",
            "src": "276:19:3",
            "constant": false,
            "mutability": "mutable",
            "name": "piNftContract",
            "nameLocation": "282:13:3",
            "scope": 815,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_piNFT_$530",
              "typeString": "contract piNFT"
            },
            "typeName": {
              "id": 570,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 569,
                "name": "piNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 530,
                "src": "276:5:3"
              },
              "referencedDeclaration": 530,
              "src": "276:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_piNFT_$530",
                "typeString": "contract piNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 574,
            "nodeType": "VariableDeclaration",
            "src": "301:25:3",
            "constant": false,
            "mutability": "mutable",
            "name": "erc20Contract",
            "nameLocation": "313:13:3",
            "scope": 815,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SampleERC20_$559",
              "typeString": "contract SampleERC20"
            },
            "typeName": {
              "id": 573,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 572,
                "name": "SampleERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 559,
                "src": "301:11:3"
              },
              "referencedDeclaration": 559,
              "src": "301:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SampleERC20_$559",
                "typeString": "contract SampleERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 583,
            "nodeType": "VariableDeclaration",
            "src": "337:48:3",
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "353:5:3",
            "scope": 815,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 575,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "337:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307841424344",
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "377:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_43981_by_1",
                        "typeString": "int_const 43981"
                      },
                      "value": "0xABCD"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_43981_by_1",
                        "typeString": "int_const 43981"
                      }
                    ],
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "369:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 578,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "369:7:3",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 581,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "369:15:3",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 577,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "361:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 576,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "361:8:3",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 582,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "361:24:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 592,
            "nodeType": "VariableDeclaration",
            "src": "391:58:3",
            "constant": false,
            "mutability": "mutable",
            "name": "royaltyReceiver",
            "nameLocation": "407:15:3",
            "scope": 815,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 584,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "391:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307842454546",
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "441:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_48879_by_1",
                        "typeString": "int_const 48879"
                      },
                      "value": "0xBEEF"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_48879_by_1",
                        "typeString": "int_const 48879"
                      }
                    ],
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "433:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 587,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "433:7:3",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 590,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "433:15:3",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 586,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "425:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 585,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:8:3",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 591,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "425:24:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 612,
            "nodeType": "FunctionDefinition",
            "src": "456:135:3",
            "body": {
              "id": 611,
              "nodeType": "Block",
              "src": "480:111:3",
              "statements": [
                {
                  "expression": {
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 595,
                      "name": "piNftContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "490:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_piNFT_$530",
                        "typeString": "contract piNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "41636f6e6f6d79",
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "516:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6e951de763332019f7352a361539f431641204af6f8cc710371bcd7606e39444",
                            "typeString": "literal_string \"Aconomy\""
                          },
                          "value": "Aconomy"
                        },
                        {
                          "hexValue": "41434f",
                          "id": 600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "527:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_068920217ff881239b2e62a8455a08354562b3ff5009dc815c19d2dd51ac9d4d",
                            "typeString": "literal_string \"ACO\""
                          },
                          "value": "ACO"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6e951de763332019f7352a361539f431641204af6f8cc710371bcd7606e39444",
                            "typeString": "literal_string \"Aconomy\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_068920217ff881239b2e62a8455a08354562b3ff5009dc815c19d2dd51ac9d4d",
                            "typeString": "literal_string \"ACO\""
                          }
                        ],
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "506:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_piNFT_$530_$",
                          "typeString": "function (string memory,string memory) returns (contract piNFT)"
                        },
                        "typeName": {
                          "id": 597,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 596,
                            "name": "piNFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 530,
                            "src": "510:5:3"
                          },
                          "referencedDeclaration": 530,
                          "src": "510:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_piNFT_$530",
                            "typeString": "contract piNFT"
                          }
                        }
                      },
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "506:27:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_piNFT_$530",
                        "typeString": "contract piNFT"
                      }
                    },
                    "src": "490:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_piNFT_$530",
                      "typeString": "contract piNFT"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "490:43:3"
                },
                {
                  "expression": {
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 604,
                      "name": "erc20Contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "543:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SampleERC20_$559",
                        "typeString": "contract SampleERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "559:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SampleERC20_$559_$",
                          "typeString": "function () returns (contract SampleERC20)"
                        },
                        "typeName": {
                          "id": 606,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 605,
                            "name": "SampleERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 559,
                            "src": "563:11:3"
                          },
                          "referencedDeclaration": 559,
                          "src": "563:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SampleERC20_$559",
                            "typeString": "contract SampleERC20"
                          }
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "559:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SampleERC20_$559",
                        "typeString": "contract SampleERC20"
                      }
                    },
                    "src": "543:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SampleERC20_$559",
                      "typeString": "contract SampleERC20"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "543:33:3"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "465:5:3",
            "parameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:2:3"
            },
            "returnParameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "480:0:3"
            },
            "scope": 815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 630,
            "nodeType": "FunctionDefinition",
            "src": "599:370:3",
            "body": {
              "id": 629,
              "nodeType": "Block",
              "src": "635:334:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 616,
                            "name": "piNftContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "751:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_piNFT_$530",
                              "typeString": "contract piNFT"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22958,
                          "src": "751:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "751:20:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "41636f6e6f6d79",
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "773:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e951de763332019f7352a361539f431641204af6f8cc710371bcd7606e39444",
                          "typeString": "literal_string \"Aconomy\""
                        },
                        "value": "Aconomy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e951de763332019f7352a361539f431641204af6f8cc710371bcd7606e39444",
                          "typeString": "literal_string \"Aconomy\""
                        }
                      ],
                      "id": 615,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3481,
                        3506,
                        3519,
                        3535,
                        3577,
                        3619,
                        3661,
                        3698,
                        3735,
                        3772,
                        1136,
                        1161,
                        1191,
                        1216,
                        1275,
                        1300,
                        1330,
                        1355,
                        2455,
                        2490
                      ],
                      "referencedDeclaration": 2455,
                      "src": "742:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "742:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "742:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 623,
                            "name": "piNftContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "802:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_piNFT_$530",
                              "typeString": "contract piNFT"
                            }
                          },
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22968,
                          "src": "802:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "802:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "41434f",
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "826:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_068920217ff881239b2e62a8455a08354562b3ff5009dc815c19d2dd51ac9d4d",
                          "typeString": "literal_string \"ACO\""
                        },
                        "value": "ACO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_068920217ff881239b2e62a8455a08354562b3ff5009dc815c19d2dd51ac9d4d",
                          "typeString": "literal_string \"ACO\""
                        }
                      ],
                      "id": 622,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3481,
                        3506,
                        3519,
                        3535,
                        3577,
                        3619,
                        3661,
                        3698,
                        3735,
                        3772,
                        1136,
                        1161,
                        1191,
                        1216,
                        1275,
                        1300,
                        1330,
                        1355,
                        2455,
                        2490
                      ],
                      "referencedDeclaration": 2455,
                      "src": "793:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "793:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "793:39:3"
                }
              ]
            },
            "functionSelector": "6ac11701",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testNameAndSymbol",
            "nameLocation": "608:17:3",
            "parameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:2:3"
            },
            "returnParameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:0:3"
            },
            "scope": 815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 707,
            "nodeType": "FunctionDefinition",
            "src": "975:568:3",
            "body": {
              "id": 706,
              "nodeType": "Block",
              "src": "1021:522:3",
              "statements": [
                {
                  "assignments": [
                    638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 638,
                      "mutability": "mutable",
                      "name": "royArray",
                      "nameLocation": "1061:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 706,
                      "src": "1037:32:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct LibShare.Share[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 636,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 635,
                            "name": "LibShare.Share",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 537,
                            "src": "1037:14:3"
                          },
                          "referencedDeclaration": 537,
                          "src": "1037:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Share_$537_storage_ptr",
                            "typeString": "struct LibShare.Share"
                          }
                        },
                        "id": 637,
                        "nodeType": "ArrayTypeName",
                        "src": "1037:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Share_$537_storage_$dyn_storage_ptr",
                          "typeString": "struct LibShare.Share[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 639,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1037:32:3"
                },
                {
                  "assignments": [
                    644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 644,
                      "mutability": "mutable",
                      "name": "royalty",
                      "nameLocation": "1102:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 706,
                      "src": "1080:29:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                        "typeString": "struct LibShare.Share"
                      },
                      "typeName": {
                        "id": 643,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 642,
                          "name": "LibShare.Share",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 537,
                          "src": "1080:14:3"
                        },
                        "referencedDeclaration": 537,
                        "src": "1080:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Share_$537_storage_ptr",
                          "typeString": "struct LibShare.Share"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 645,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1080:29:3"
                },
                {
                  "expression": {
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 646,
                      "name": "royalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "1119:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                        "typeString": "struct LibShare.Share memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 649,
                          "name": "royaltyReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 592,
                          "src": "1144:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "3130",
                              "id": 652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1168:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              }
                            ],
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1161:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint96_$",
                              "typeString": "type(uint96)"
                            },
                            "typeName": {
                              "id": 650,
                              "name": "uint96",
                              "nodeType": "ElementaryTypeName",
                              "src": "1161:6:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1161:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        ],
                        "expression": {
                          "id": 647,
                          "name": "LibShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "1129:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibShare_$538_$",
                            "typeString": "type(library LibShare)"
                          }
                        },
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Share",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 537,
                        "src": "1129:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Share_$537_storage_ptr_$",
                          "typeString": "type(struct LibShare.Share storage pointer)"
                        }
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1129:43:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                        "typeString": "struct LibShare.Share memory"
                      }
                    },
                    "src": "1119:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                      "typeString": "struct LibShare.Share memory"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:53:3"
                },
                {
                  "expression": {
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 657,
                      "name": "royArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "1191:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct LibShare.Share memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1222:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1201:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct LibShare.Share memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 659,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 658,
                              "name": "LibShare.Share",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 537,
                              "src": "1205:14:3"
                            },
                            "referencedDeclaration": 537,
                            "src": "1205:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Share_$537_storage_ptr",
                              "typeString": "struct LibShare.Share"
                            }
                          },
                          "id": 660,
                          "nodeType": "ArrayTypeName",
                          "src": "1205:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Share_$537_storage_$dyn_storage_ptr",
                            "typeString": "struct LibShare.Share[]"
                          }
                        }
                      },
                      "id": 663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1201:23:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct LibShare.Share memory[] memory"
                      }
                    },
                    "src": "1191:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct LibShare.Share memory[] memory"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:33:3"
                },
                {
                  "expression": {
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 666,
                        "name": "royArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "1234:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct LibShare.Share memory[] memory"
                        }
                      },
                      "id": 668,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1243:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1234:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                        "typeString": "struct LibShare.Share memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 669,
                      "name": "royalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "1248:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                        "typeString": "struct LibShare.Share memory"
                      }
                    },
                    "src": "1234:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                      "typeString": "struct LibShare.Share memory"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:21:3"
                },
                {
                  "assignments": [
                    673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 673,
                      "mutability": "mutable",
                      "name": "uri",
                      "nameLocation": "1279:3:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 706,
                      "src": "1265:17:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 672,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1265:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 675,
                  "initialValue": {
                    "hexValue": "7777772e736b2e636f6d",
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1285:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1c648150e31364cd04993cd2cf1ec140a14f53d93cf48130beb6628218eaf27e",
                      "typeString": "literal_string \"www.sk.com\""
                    },
                    "value": "www.sk.com"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1265:32:3"
                },
                {
                  "assignments": [
                    677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 677,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "1325:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 706,
                      "src": "1317:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 676,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1317:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 684,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 680,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "1357:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 681,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 673,
                        "src": "1364:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 682,
                        "name": "royArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "1369:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct LibShare.Share memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct LibShare.Share memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 678,
                        "name": "piNftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "1335:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_piNFT_$530",
                          "typeString": "contract piNFT"
                        }
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119,
                      "src": "1335:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,string memory,struct LibShare.Share memory[] memory) external returns (uint256)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1335:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1317:61:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 688,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "1400:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 685,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14048,
                        "src": "1388:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$14048_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6565,
                      "src": "1388:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:20:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 690,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:20:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 692,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "1427:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1436:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "4661696c6564206d696e74696e67205269676874204e4654",
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1438:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa38311db8bbbeffc079d15e742bff1d80a77e31fe7426e38710da88c825b1ba",
                          "typeString": "literal_string \"Failed minting Right NFT\""
                        },
                        "value": "Failed minting Right NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa38311db8bbbeffc079d15e742bff1d80a77e31fe7426e38710da88c825b1ba",
                          "typeString": "literal_string \"Failed minting Right NFT\""
                        }
                      ],
                      "id": 691,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3481,
                        3506,
                        3519,
                        3535,
                        3577,
                        3619,
                        3661,
                        3698,
                        3735,
                        3772,
                        1136,
                        1161,
                        1191,
                        1216,
                        1275,
                        1300,
                        1330,
                        1355,
                        2455,
                        2490
                      ],
                      "referencedDeclaration": 1355,
                      "src": "1418:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:47:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 700,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "1508:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 698,
                            "name": "piNftContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "1484:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_piNFT_$530",
                              "typeString": "contract piNFT"
                            }
                          },
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22920,
                          "src": "1484:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1484:30:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1516:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "4661696c656420746f206d696e74",
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1519:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c95e4d88e7977ee2e85a69314c101d644273baf422fb1ded43e7c365f51dc9f2",
                          "typeString": "literal_string \"Failed to mint\""
                        },
                        "value": "Failed to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c95e4d88e7977ee2e85a69314c101d644273baf422fb1ded43e7c365f51dc9f2",
                          "typeString": "literal_string \"Failed to mint\""
                        }
                      ],
                      "id": 697,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3481,
                        3506,
                        3519,
                        3535,
                        3577,
                        3619,
                        3661,
                        3698,
                        3735,
                        3772,
                        1136,
                        1161,
                        1191,
                        1216,
                        1275,
                        1300,
                        1330,
                        1355,
                        2455,
                        2490
                      ],
                      "referencedDeclaration": 1355,
                      "src": "1475:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1475:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "1475:61:3"
                }
              ]
            },
            "functionSelector": "469e290b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintAnErc721TokenToAlice",
            "nameLocation": "984:28:3",
            "parameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:2:3"
            },
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1021:0:3"
            },
            "scope": 815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 814,
            "nodeType": "FunctionDefinition",
            "src": "1549:772:3",
            "body": {
              "id": 813,
              "nodeType": "Block",
              "src": "1600:721:3",
              "statements": [
                {
                  "assignments": [
                    715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 715,
                      "mutability": "mutable",
                      "name": "royArray",
                      "nameLocation": "1634:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "1610:32:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct LibShare.Share[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 713,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 712,
                            "name": "LibShare.Share",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 537,
                            "src": "1610:14:3"
                          },
                          "referencedDeclaration": 537,
                          "src": "1610:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Share_$537_storage_ptr",
                            "typeString": "struct LibShare.Share"
                          }
                        },
                        "id": 714,
                        "nodeType": "ArrayTypeName",
                        "src": "1610:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Share_$537_storage_$dyn_storage_ptr",
                          "typeString": "struct LibShare.Share[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 716,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1610:32:3"
                },
                {
                  "assignments": [
                    721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 721,
                      "mutability": "mutable",
                      "name": "royalty",
                      "nameLocation": "1675:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "1653:29:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                        "typeString": "struct LibShare.Share"
                      },
                      "typeName": {
                        "id": 720,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 719,
                          "name": "LibShare.Share",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 537,
                          "src": "1653:14:3"
                        },
                        "referencedDeclaration": 537,
                        "src": "1653:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Share_$537_storage_ptr",
                          "typeString": "struct LibShare.Share"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 722,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1653:29:3"
                },
                {
                  "expression": {
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 723,
                      "name": "royalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "1692:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                        "typeString": "struct LibShare.Share memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 726,
                          "name": "royaltyReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 592,
                          "src": "1717:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "3130",
                              "id": 729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1741:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              }
                            ],
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1734:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint96_$",
                              "typeString": "type(uint96)"
                            },
                            "typeName": {
                              "id": 727,
                              "name": "uint96",
                              "nodeType": "ElementaryTypeName",
                              "src": "1734:6:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1734:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        ],
                        "expression": {
                          "id": 724,
                          "name": "LibShare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "1702:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibShare_$538_$",
                            "typeString": "type(library LibShare)"
                          }
                        },
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Share",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 537,
                        "src": "1702:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Share_$537_storage_ptr_$",
                          "typeString": "type(struct LibShare.Share storage pointer)"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1702:43:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                        "typeString": "struct LibShare.Share memory"
                      }
                    },
                    "src": "1692:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                      "typeString": "struct LibShare.Share memory"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "1692:53:3"
                },
                {
                  "expression": {
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 734,
                      "name": "royArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "1764:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct LibShare.Share memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1795:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1774:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct LibShare.Share memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 736,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 735,
                              "name": "LibShare.Share",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 537,
                              "src": "1778:14:3"
                            },
                            "referencedDeclaration": 537,
                            "src": "1778:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Share_$537_storage_ptr",
                              "typeString": "struct LibShare.Share"
                            }
                          },
                          "id": 737,
                          "nodeType": "ArrayTypeName",
                          "src": "1778:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Share_$537_storage_$dyn_storage_ptr",
                            "typeString": "struct LibShare.Share[]"
                          }
                        }
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1774:23:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct LibShare.Share memory[] memory"
                      }
                    },
                    "src": "1764:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct LibShare.Share memory[] memory"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:33:3"
                },
                {
                  "expression": {
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 743,
                        "name": "royArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "1807:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct LibShare.Share memory[] memory"
                        }
                      },
                      "id": 745,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1816:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1807:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                        "typeString": "struct LibShare.Share memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 746,
                      "name": "royalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "1821:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                        "typeString": "struct LibShare.Share memory"
                      }
                    },
                    "src": "1807:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                      "typeString": "struct LibShare.Share memory"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:21:3"
                },
                {
                  "assignments": [
                    750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 750,
                      "mutability": "mutable",
                      "name": "uri",
                      "nameLocation": "1852:3:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "1838:17:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 749,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1838:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 752,
                  "initialValue": {
                    "hexValue": "7777772e736b2e636f6d",
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1858:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1c648150e31364cd04993cd2cf1ec140a14f53d93cf48130beb6628218eaf27e",
                      "typeString": "literal_string \"www.sk.com\""
                    },
                    "value": "www.sk.com"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1838:32:3"
                },
                {
                  "assignments": [
                    754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 754,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "1888:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "1880:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1880:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 761,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 757,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "1920:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 758,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "1927:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 759,
                        "name": "royArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "1932:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct LibShare.Share memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct LibShare.Share memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 755,
                        "name": "piNftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "1898:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_piNFT_$530",
                          "typeString": "contract piNFT"
                        }
                      },
                      "id": 756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119,
                      "src": "1898:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,string memory,struct LibShare.Share memory[] memory) external returns (uint256)"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1880:61:3"
                },
                {
                  "assignments": [
                    763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 763,
                      "mutability": "mutable",
                      "name": "_uri",
                      "nameLocation": "1965:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "1951:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 762,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1951:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 768,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 766,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "1995:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 764,
                        "name": "piNftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "1972:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_piNFT_$530",
                          "typeString": "contract piNFT"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23869,
                      "src": "1972:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (string memory)"
                      }
                    },
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1972:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1951:52:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 770,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "2022:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "7777772e736b2e636f6d",
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2028:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c648150e31364cd04993cd2cf1ec140a14f53d93cf48130beb6628218eaf27e",
                          "typeString": "literal_string \"www.sk.com\""
                        },
                        "value": "www.sk.com"
                      },
                      {
                        "hexValue": "496e76616c69642055524920666f722074686520746f6b656e",
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2042:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_531c8543b3ecfe97145ddff79cc50d7d210ecdfdf54ef59f3305b69b0d306e49",
                          "typeString": "literal_string \"Invalid URI for the token\""
                        },
                        "value": "Invalid URI for the token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c648150e31364cd04993cd2cf1ec140a14f53d93cf48130beb6628218eaf27e",
                          "typeString": "literal_string \"www.sk.com\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_531c8543b3ecfe97145ddff79cc50d7d210ecdfdf54ef59f3305b69b0d306e49",
                          "typeString": "literal_string \"Invalid URI for the token\""
                        }
                      ],
                      "id": 769,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3481,
                        3506,
                        3519,
                        3535,
                        3577,
                        3619,
                        3661,
                        3698,
                        3735,
                        3772,
                        1136,
                        1161,
                        1191,
                        1216,
                        1275,
                        1300,
                        1330,
                        1355,
                        2455,
                        2490
                      ],
                      "referencedDeclaration": 2490,
                      "src": "2013:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:57:3"
                },
                {
                  "assignments": [
                    780
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 780,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "2105:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "2081:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct LibShare.Share[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 778,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 777,
                            "name": "LibShare.Share",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 537,
                            "src": "2081:14:3"
                          },
                          "referencedDeclaration": 537,
                          "src": "2081:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Share_$537_storage_ptr",
                            "typeString": "struct LibShare.Share"
                          }
                        },
                        "id": 779,
                        "nodeType": "ArrayTypeName",
                        "src": "2081:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Share_$537_storage_$dyn_storage_ptr",
                          "typeString": "struct LibShare.Share[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 785,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 783,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "2139:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 781,
                        "name": "piNftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "2112:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_piNFT_$530",
                          "typeString": "contract piNFT"
                        }
                      },
                      "id": 782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRoyalties",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 224,
                      "src": "2112:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct LibShare.Share memory[] memory)"
                      }
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct LibShare.Share memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2081:66:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 789,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 780,
                            "src": "2169:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct LibShare.Share memory[] memory"
                            }
                          },
                          "id": 791,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2174:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2169:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                            "typeString": "struct LibShare.Share memory"
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "account",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 534,
                        "src": "2169:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 786,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14048,
                        "src": "2157:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$14048_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6607,
                      "src": "2157:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2157:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "2157:28:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 796,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 780,
                            "src": "2204:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct LibShare.Share memory[] memory"
                            }
                          },
                          "id": 798,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2209:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2204:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                            "typeString": "struct LibShare.Share memory"
                          }
                        },
                        "id": 799,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "account",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 534,
                        "src": "2204:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 800,
                        "name": "royaltyReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "2221:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720526f79616c6974696573",
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2238:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f13b20608b6c19c0658ee1e5b86cd30f2c5d523ca2aad300ee1902646e1fcca0",
                          "typeString": "literal_string \"Wrong Royalities\""
                        },
                        "value": "Wrong Royalities"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f13b20608b6c19c0658ee1e5b86cd30f2c5d523ca2aad300ee1902646e1fcca0",
                          "typeString": "literal_string \"Wrong Royalities\""
                        }
                      ],
                      "id": 795,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3481,
                        3506,
                        3519,
                        3535,
                        3577,
                        3619,
                        3661,
                        3698,
                        3735,
                        3772,
                        1136,
                        1161,
                        1191,
                        1216,
                        1275,
                        1300,
                        1330,
                        1355,
                        2455,
                        2490
                      ],
                      "referencedDeclaration": 1161,
                      "src": "2195:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 803,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 805,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 780,
                            "src": "2276:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Share_$537_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct LibShare.Share memory[] memory"
                            }
                          },
                          "id": 807,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2281:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2276:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Share_$537_memory_ptr",
                            "typeString": "struct LibShare.Share memory"
                          }
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 536,
                        "src": "2276:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2291:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "57726f6e6720526f79616c6974696573",
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2295:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f13b20608b6c19c0658ee1e5b86cd30f2c5d523ca2aad300ee1902646e1fcca0",
                          "typeString": "literal_string \"Wrong Royalities\""
                        },
                        "value": "Wrong Royalities"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f13b20608b6c19c0658ee1e5b86cd30f2c5d523ca2aad300ee1902646e1fcca0",
                          "typeString": "literal_string \"Wrong Royalities\""
                        }
                      ],
                      "id": 804,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3481,
                        3506,
                        3519,
                        3535,
                        3577,
                        3619,
                        3661,
                        3698,
                        3735,
                        3772,
                        1136,
                        1161,
                        1191,
                        1216,
                        1275,
                        1300,
                        1330,
                        1355,
                        2455,
                        2490
                      ],
                      "referencedDeclaration": 1355,
                      "src": "2267:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2267:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 812,
                  "nodeType": "ExpressionStatement",
                  "src": "2267:47:3"
                }
              ]
            },
            "functionSelector": "89242f29",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFetchTheTokenURIAndRoyalties",
            "nameLocation": "1558:32:3",
            "parameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1590:2:3"
            },
            "returnParameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1600:0:3"
            },
            "scope": 815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 567,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4157,
              "src": "265:4:3"
            },
            "id": 568,
            "nodeType": "InheritanceSpecifier",
            "src": "265:4:3"
          }
        ],
        "canonicalName": "ContractTest",
        "contractDependencies": [
          530,
          559
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          815,
          4157,
          2838,
          2602
        ],
        "name": "ContractTest",
        "nameLocation": "249:12:3",
        "scope": 816,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 3
}